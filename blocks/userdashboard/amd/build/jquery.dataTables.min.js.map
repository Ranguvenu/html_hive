{"version":3,"sources":["../src/jquery.dataTables.js"],"names":["factory","define","amd","$","window","document","exports","module","root","require","jQuery","DataTable","options","sSelector","oOpts","api","_","rows","data","traditional","_Api","_fnSettingsFromNode","_ext","iApiIndex","fnAddData","redraw","isArray","isPlainObject","add","row","draw","flatten","toArray","fnAdjustColumnSizing","bRedraw","columns","adjust","settings","scroll","oScroll","sX","sY","_fnScrollDraw","fnClearTable","clear","fnClose","nTr","child","hide","fnDeleteRow","target","callback","aoData","remove","call","fnDestroy","destroy","fnDraw","complete","fnFilter","sInput","iColumn","bRegex","bSmart","bShowGlobal","bCaseInsensitive","search","column","fnGetData","src","col","type","nodeName","toLowerCase","cell","fnGetNodes","iRow","node","nodes","fnGetPosition","toUpperCase","index","columnVisible","fnIsOpen","isShown","fnOpen","mHtml","sClass","show","fnPageChange","mAction","page","fnSetColumnVis","iCol","bShow","visible","fnSettings","fnSort","aaSort","order","fnSortListener","nNode","fnCallback","listener","fnUpdate","mData","mRow","bAction","fnVersionCheck","_that","emptyInit","len","length","oApi","internal","fn","ext","_fnExternApiFunc","each","oInit","_fnExtend","i","iLen","sId","getAttribute","bInitHandedOff","defaults","$this","_fnLog","_fnCompatOpts","_fnCompatCols","_fnCamelToHungarian","extend","allSettings","s","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","sTableId","id","splice","_unique","oSettings","models","style","width","push","dataTable","oLanguage","_fnLanguageCompat","aLengthMenu","iDisplayLength","_fnMap","oFeatures","_fnCallbackReg","fnDrawCallback","fnServerParams","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","oClasses","bJQueryUI","oJUIClasses","sDom","renderer","header","classes","addClass","sTable","iInitDisplayStart","iDisplayStart","_iDisplayStart","iDeferLoading","bDeferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","sUrl","ajax","dataType","url","success","json","_fnInitialise","error","asStripeClasses","sStripeOdd","sStripeEven","stripeClasses","rowOne","children","find","eq","inArray","map","el","hasClass","removeClass","join","asDestroyStripes","slice","anThs","aoColumnsInit","nThead","getElementsByTagName","_fnDetectHeader","aoHeader","_fnGetUniqueThs","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","oDef","_fnColumnOptions","a","name","sort","filter","features","loadedInit","aaSorting","sorting","asSorting","_fnSortingClasses","bSort","bSorted","aSort","_fnSortFlatten","sortedColumns","val","dir","_fnCallbackFire","_fnSortAria","_fnDataSource","bDeferRender","captions","_captionSide","css","thead","appendTo","tbody","nTBody","tfoot","sNoFooter","aoFooter","aaData","_fnAddData","_fnAddTr","aiDisplay","aiDisplayMaster","bInitialised","bStateSave","_fnSaveState","_fnLoadState","_api_register","_api_registerPlural","_re_dic","_re_new_lines","_re_html","_re_date","_re_escape_regex","RegExp","_re_formatted_numeric","_empty","d","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","replace","_isNumber","formatted","strType","parseFloat","_isHtml","_htmlNumeric","html","_stripHtml","_pluck","prop","prop2","out","ien","_pluck_order","_range","start","end","_removeEmpty","_areAllUnique","sorted","last","j","k","again","util","throttle","freq","frequency","timer","that","now","Date","args","arguments","clearTimeout","setTimeout","apply","escapeRegex","_fnHungarianMap","o","match","newKey","key","indexOf","_hungarianMap","user","force","hungarianKey","charAt","lang","zeroRecords","sZeroRecords","sEmptyTable","sLoadingRecords","sInfoThousands","sThousands","decimal","sDecimal","_addNumericSort","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","dataSort","aDataSort","__browser","browser","n","position","top","left","scrollLeft","height","overflow","append","outer","inner","barWidth","offsetWidth","clientWidth","bScrollOversize","bScrollbarLeft","Math","round","offset","bBounding","getBoundingClientRect","oBrowser","iBarWidth","_fnReduce","inc","value","isSet","hasOwnProperty","nTh","oDefaults","oCol","oColumn","createElement","sTitle","innerHTML","idx","aoPreSearchCols","oOptions","th","sWidthOrig","attr","t","mDataProp","sType","_sManualType","className","iDataSort","mDataSrc","mRender","attrTest","_bAttrSrc","_setter","rowData","meta","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSortable","sSortableNone","bAsc","bDesc","sSortingClass","sSortingClassJUI","sSortableAsc","sSortJUIAscAllowed","sSortableDesc","sSortJUIDescAllowed","sSortable","sSortJUI","_fnAdjustColumnSizing","bAutoWidth","_fnCalculateColumnWidths","sWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","vis","bVisible","sParam","_fnColumnTypes","types","detect","jen","ken","detectedType","cache","_fnGetCellData","aoColDefs","aoCols","jLen","kLen","def","aTargets","targets","aDataIn","anTds","oData","oRow","_aData","aIds","_fnCreateTr","trs","_fnGetRowElements","cells","rowIdx","colIdx","iDraw","defaultContent","sDefaultContent","cellData","iDrawError","_fnSetCellData","__reArray","__reFn","_fnSplitObjNotation","str","mSource","fetchData","arrayNotation","funcNotation","innerSrc","substring","setData","b","aLast","_fnGetDataMaster","_fnClearTable","_fnDeleteIndex","iTarget","iTargetIndex","_fnInvalidate","cellWrite","childNodes","removeChild","firstChild","anCells","_aSortData","_aFilterData","cols","_fnRowAttributes","tds","td","contents","objectRead","setter","cellProcess","trim","nextSibling","rowNode","nTrIn","nTd","_DT_RowIndex","sCellType","_DT_CellIndex","appendChild","fnCreatedCell","setAttribute","tr","DT_RowClass","split","__rowc","concat","DT_RowAttr","DT_RowData","_fnBuildHead","createHeader","iTabIndex","_fnSortAttachListener","_fnRenderer","sHeaderTH","sFooterTH","nTf","_fnDrawHead","aoSource","bIncludeHidden","nLocalTr","aoLocal","aApplied","iColumns","iRowspan","iColspan","_fnDraw","aPreDraw","_fnProcessingDisplay","anRows","iRowCount","iStripes","iOpenRows","aoOpenRows","oLang","bServerSide","bDrawing","fnRecordsDisplay","iDisplayEnd","fnDisplayEnd","bDestroying","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","sStripe","_sRowStripe","sZero","fnRecordsTotal","sRowEmpty","body","detach","bFiltered","_fnReDraw","holdPosition","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","_fnAddOptionsHtml","table","holding","insertBefore","insert","sWrapper","nHolding","nTableWrapper","nTableReinsertBefore","aDom","featureNode","cOption","nNewNode","cNext","sAttr","sJUIHeader","sJUIFooter","aSplit","substr","parent","bPaginate","bLengthChange","_fnFeatureHtmlLength","_fnFeatureHtmlFilter","bProcessing","_fnFeatureHtmlProcessing","_fnFeatureHtmlTable","bInfo","_fnFeatureHtmlInfo","_fnFeatureHtmlPaginate","feature","aoFeatures","cFeature","fnInit","aanFeatures","replaceWith","aLayout","nTrs","nCell","l","iColShifted","bUnique","fnShiftCol","nHeader","aReturn","unique","bSortCellsTop","_fnBuildAjax","rbracket","ajaxData","instance","jqXHR","newData","isFunction","baseAjax","sError","sServerMethod","xhr","ret","readyState","oAjaxData","fnServerData","sAjaxSource","bAjaxDataGet","_fnAjaxParameters","_fnAjaxUpdateDraw","columnCount","preSearch","preColSearch","dataProp","columnSearch","displayStart","displayLength","_iDisplayLength","param","sSearch","regex","sName","searchable","bSearchable","orderable","legacy","compat","modern","_fnAjaxDataSrc","recordsTotal","recordsFiltered","_bInitComplete","_fnInitComplete","dataSrc","sAjaxDataProp","tableId","language","previousSearch","input","sFilterInput","f","sFilter","searchFn","searchDelay","jqFilter","sSearchPlaceholder","on","_fnThrottle","e","keyCode","ev","activeElement","oInput","iForce","oPrevSearch","aoPrevSearch","fnSaveFilter","oFilter","fnRegex","bEscapeRegex","_fnFilter","_fnFilterColumn","_fnFilterCustom","filters","displayRows","merge","searchStr","smart","caseInsensitive","display","rpSearch","_fnFilterCreateSearch","test","prevSearch","displayMaster","invalidated","filtered","_fnFilterData","_sFilterRow","word","m","__filter_div","__filter_div_textContent","textContent","filterData","fomatters","wasInvalidated","toString","innerText","_fnSearchToCamel","obj","_fnSearchToHung","tid","sInfo","aoDrawCallback","_fnUpdateInfo","max","total","sInfoEmpty","sInfoFiltered","sInfoPostFix","_fnInfoMacros","fnInfoCallback","formatter","fnFormatNumber","all","ceil","iAjaxStart","deferLoading","_fnStringToCss","aData","_fnLengthChange","_fnLengthOverflow","menu","d2","lengths","select","sLengthSelect","Option","div","sLength","sLengthMenu","outerHTML","sPaginationType","plugin","pager","sPaging","p","visRecords","pages","buttons","_fnPageChange","action","records","floor","changed","r","sProcessing","scrollY","caption","captionSide","headerClone","cloneNode","footerClone","footer","_div","size","scroller","sScrollWrapper","sScrollHead","border","sScrollHeadInner","sXInner","removeAttr","sScrollBody","sScrollFoot","sScrollFootInner","scrollHead","scrollBody","scrollFoot","bCollapse","nScrollHead","nScrollBody","nScrollFoot","scrollXInner","divHeader","divHeaderStyle","divHeaderInner","divHeaderInnerStyle","divHeaderTable","divBodyEl","divBody","divBodyStyle","divFooter","divFooterInner","divFooterTable","tableEl","tableStyle","ie67","dtHeaderCells","headerTrgEls","footerTrgEls","headerSrcEls","footerSrcEls","headerCopy","footerCopy","headerWidths","footerWidths","headerContent","footerContent","correction","sanityWidth","zeroOut","nSizer","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","scrollBarVis","scrollHeight","clientHeight","clone","prependTo","_fnApplyToChildren","outerWidth","offsetHeight","nToSize","iOuterWidth","bScrolling","padding","scrollTop","an1","an2","nNode1","nNode2","nodeType","__re_html_remove","visibleColumns","headerCells","tableWidthAttr","tableContainer","userInputs","columnIdx","styleWidth","_fnConvertToWidth","tmpTable","margin","_fnGetWidestNode","sContentPadding","holder","right","bounding","_reszEvt","bindResize","sInstance","_fnGetMaxLenString","maxIdx","srcCol","fixed","aaSortingFixed","fixedObj","nestedSort","pre","post","_idx","aiOrig","oExtSort","formatters","sortCol","_fnSortData","x","y","dataA","dataB","label","nextSort","oAria","removeAttribute","sSortAscending","sSortDescending","_fnSortListener","nextSortIdx","next","bSortMulti","sortIdx","attachTo","_fnBindAction","shiftKey","oldSort","aLastSort","sortClass","sSortColumn","bSortClasses","customSort","sSortDataType","customData","state","time","oSavedState","fnStateSaveCallback","loaded","abStateLoad","duration","iStateDuration","oLoadedState","fnStateLoadCallback","level","msg","tn","sErrMode","errMode","alert","Error","console","log","mappedName","extender","breakRefs","blur","which","preventDefault","sStore","callbackArr","eventName","reverse","Event","trigger","result","host","__apiStruct","__arrayProto","Array","prototype","_toSettings","mixed","jq","tables","context","ctxSettings","selector","opts","Api","any","count","ctx","iterator","alwaysNew","items","item","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","shift","to$","toJQuery","unshift","scope","__dt_wrapper","struct","methodScoping","struc","methodExt","propExt","register","heir","method","registerPlural","pluralName","singularName","__table_selector","paging","info","__reload","one","abort","resetPaging","_selector_run","selectFn","res","selectorType","_selector_opts","_selector_first","inst","displayFiltered","__row_selector","run","sel","selInt","closest","rowObj","hash","thatIdx","loopRow","loopCells","newRows","modRows","__details_add","klass","addRow","created","colSpan","_details","_detailsShow","insertAfter","__details_remove","__details_display","__details_events","namespace","drawEvent","colvisEvent","destroyEvent","off","_child_obj","_child_mth","__re_column_selector","__columnData","r1","r2","__column_selector","names","visColumns","jqResult","__setColumnVis","calc","__cell_selector","allCells","fnSelector","rowSelector","columnSelector","set","caseInsen","versionCheck","version","aThis","aThat","iThis","iThat","isDataTable","fnIsDataTable","get","is","head","foot","fnTables","camelToHungarian","jqRows","orig","jqTable","jqTbody","jqWrapper","bJUI","sSortIcon","wrapper","sSortJUIWrapper","removedMethod","sDestroyWidth","arg1","arg2","arg3","arg4","token","plural","resolved","toFormat","JSON","parse","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","paginate","min","builder","pageButton","sVersion","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","oStdClasses","oPagination","_stateDefault","_sortIcon","_headerFooter","extPagination","_numbers","numbers","numbers_length","half","DT_el","simple","full","simple_numbers","full_numbers","first_last_numbers","oPaginate","aria","btnDisplay","btnClass","counter","attach","container","button","clickHandler","sFirst","sPageButtonDisabled","sPrevious","sNext","sLast","sPageButtonActive","sPageButton","activeEl","empty","focus","parsed","string","__numericReplace","decimalPlace","re1","re2","Infinity","sSortAsc","sSortDesc","jqueryui","sSortJUIAsc","sSortJUIDesc","__htmlEscapeEntities","render","number","thousands","precision","prefix","postfix","negative","flo","toFixed","abs","intPart","floatPart","text","_fnNodeToDataIndex","_fnNodeToColumnIndex","_fnCalculateEnd","dataTableSettings","dataTableExt"],"mappings":"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","sourcesContent":["/*! DataTables 1.10.15\n * ©2008-2017 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.10.15\n * @file        jquery.dataTables.js\n * @author      SpryMedia Ltd\n * @contact     www.datatables.net\n * @copyright   Copyright 2008-2017 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n\n(function( factory ) {\n    \"use strict\";\n\n    if ( typeof define === 'function' && define.amd ) {\n        // AMD\n        define( ['jquery'], function ( $ ) {\n            return factory( $, window, document );\n        } );\n    }\n    else if ( typeof exports === 'object' ) {\n        // CommonJS\n        module.exports = function (root, $) {\n            if ( ! root ) {\n                // CommonJS environments without a window global must pass a\n                // root. This will give an error otherwise\n                root = window;\n            }\n\n            if ( ! $ ) {\n                $ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window\n                    require('jquery') :\n                    require('jquery')( root );\n            }\n\n            return factory( $, root, root.document );\n        };\n    }\n    else {\n        // Browser\n        factory( jQuery, window, document );\n    }\n}\n(function( $, window, document, undefined ) {\n    \"use strict\";\n\n    /**\n     * DataTables is a plug-in for the jQuery Javascript library. It is a highly\n     * flexible tool, based upon the foundations of progressive enhancement,\n     * which will add advanced interaction controls to any HTML table. For a\n     * full list of features please refer to\n     * [DataTables.net](href=\"http://datatables.net).\n     *\n     * Note that the `DataTable` object is not a global variable but is aliased\n     * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may\n     * be  accessed.\n     *\n     *  @class\n     *  @param {object} [init={}] Configuration object for DataTables. Options\n     *    are defined by {@link DataTable.defaults}\n     *  @requires jQuery 1.7+\n     *\n     *  @example\n     *    // Basic initialisation\n     *    $(document).ready( function {\n     *      $('#example').dataTable();\n     *    } );\n     *\n     *  @example\n     *    // Initialisation with configuration options - in this case, disable\n     *    // pagination and sorting.\n     *    $(document).ready( function {\n     *      $('#example').dataTable( {\n     *        \"paginate\": false,\n     *        \"sort\": false\n     *      } );\n     *    } );\n     */\n    var DataTable = function ( options )\n    {\n        /**\n         * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n         * return the resulting jQuery object.\n         *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n         *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n         *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n         *    criterion (\"applied\") or all TR elements (i.e. no filter).\n         *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n         *    Can be either 'current', whereby the current sorting of the table is used, or\n         *    'original' whereby the original order the data was read into the table is used.\n         *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n         *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n         *    'current' and filter is 'applied', regardless of what they might be given as.\n         *  @returns {object} jQuery object, filtered by the given selector.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Highlight every second row\n         *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n         *    } );\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Filter to rows with 'Webkit' in them, add a background colour and then\n         *      // remove the filter, thus highlighting the 'Webkit' rows only.\n         *      oTable.fnFilter('Webkit');\n         *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n         *      oTable.fnFilter('');\n         *    } );\n         */\n        this.$ = function ( sSelector, oOpts )\n        {\n            return this.api(true).$( sSelector, oOpts );\n        };\n        \n        \n        /**\n         * Almost identical to $ in operation, but in this case returns the data for the matched\n         * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n         * rather than any descendants, so the data can be obtained for the row/cell. If matching\n         * rows are found, the data returned is the original data array/object that was used to\n         * create the row (or a generated array if from a DOM source).\n         *\n         * This method is often useful in-combination with $ where both functions are given the\n         * same parameters and the array indexes will match identically.\n         *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n         *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n         *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n         *    criterion (\"applied\") or all elements (i.e. no filter).\n         *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n         *    Can be either 'current', whereby the current sorting of the table is used, or\n         *    'original' whereby the original order the data was read into the table is used.\n         *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n         *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n         *    'current' and filter is 'applied', regardless of what they might be given as.\n         *  @returns {array} Data for the matched elements. If any elements, as a result of the\n         *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n         *    entry in the array.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Get the data from the first row in the table\n         *      var data = oTable._('tr:first');\n         *\n         *      // Do something useful with the data\n         *      alert( \"First cell is: \"+data[0] );\n         *    } );\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Filter to 'Webkit' and get all data for\n         *      oTable.fnFilter('Webkit');\n         *      var data = oTable._('tr', {\"search\": \"applied\"});\n         *\n         *      // Do something with the data\n         *      alert( data.length+\" rows matched the search\" );\n         *    } );\n         */\n        this._ = function ( sSelector, oOpts )\n        {\n            return this.api(true).rows( sSelector, oOpts ).data();\n        };\n        \n        \n        /**\n         * Create a DataTables Api instance, with the currently selected tables for\n         * the Api's context.\n         * @param {boolean} [traditional=false] Set the API instance's context to be\n         *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n         *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n         *   or if all tables captured in the jQuery object should be used.\n         * @return {DataTables.Api}\n         */\n        this.api = function ( traditional )\n        {\n            return traditional ?\n                new _Api(\n                    _fnSettingsFromNode( this[ _ext.iApiIndex ] )\n                ) :\n                new _Api( this );\n        };\n        \n        \n        /**\n         * Add a single new row or multiple rows of data to the table. Please note\n         * that this is suitable for client-side processing only - if you are using\n         * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n         * must add it to the data source, i.e. the server-side, through an Ajax call.\n         *  @param {array|object} data The data to be added to the table. This can be:\n         *    <ul>\n         *      <li>1D array of data - add a single row with the data provided</li>\n         *      <li>2D array of arrays - add multiple rows in a single call</li>\n         *      <li>object - data object when using <i>mData</i></li>\n         *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n         *    </ul>\n         *  @param {bool} [redraw=true] redraw the table or not\n         *  @returns {array} An array of integers, representing the list of indexes in\n         *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n         *    the table.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    // Global var for counter\n         *    var giCount = 2;\n         *\n         *    $(document).ready(function() {\n         *      $('#example').dataTable();\n         *    } );\n         *\n         *    function fnClickAddRow() {\n         *      $('#example').dataTable().fnAddData( [\n         *        giCount+\".1\",\n         *        giCount+\".2\",\n         *        giCount+\".3\",\n         *        giCount+\".4\" ]\n         *      );\n         *\n         *      giCount++;\n         *    }\n         */\n        this.fnAddData = function( data, redraw )\n        {\n            var api = this.api( true );\n        \n            /* Check if we want to add multiple rows or not */\n            var rows = $.isArray(data) && ( $.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\n                api.rows.add( data ) :\n                api.row.add( data );\n        \n            if ( redraw === undefined || redraw ) {\n                api.draw();\n            }\n        \n            return rows.flatten().toArray();\n        };\n        \n        \n        /**\n         * This function will make DataTables recalculate the column sizes, based on the data\n         * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n         * through the sWidth parameter). This can be useful when the width of the table's\n         * parent element changes (for example a window resize).\n         *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable( {\n         *        \"sScrollY\": \"200px\",\n         *        \"bPaginate\": false\n         *      } );\n         *\n         *      $(window).on('resize', function () {\n         *        oTable.fnAdjustColumnSizing();\n         *      } );\n         *    } );\n         */\n        this.fnAdjustColumnSizing = function ( bRedraw )\n        {\n            var api = this.api( true ).columns.adjust();\n            var settings = api.settings()[0];\n            var scroll = settings.oScroll;\n        \n            if ( bRedraw === undefined || bRedraw ) {\n                api.draw( false );\n            }\n            else if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\n                /* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n                _fnScrollDraw( settings );\n            }\n        };\n        \n        \n        /**\n         * Quickly and simply clear a table\n         *  @param {bool} [bRedraw=true] redraw the table or not\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n         *      oTable.fnClearTable();\n         *    } );\n         */\n        this.fnClearTable = function( bRedraw )\n        {\n            var api = this.api( true ).clear();\n        \n            if ( bRedraw === undefined || bRedraw ) {\n                api.draw();\n            }\n        };\n        \n        \n        /**\n         * The exact opposite of 'opening' a row, this function will close any rows which\n         * are currently 'open'.\n         *  @param {node} nTr the table row to 'close'\n         *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable;\n         *\n         *      // 'open' an information row when a row is clicked on\n         *      $('#example tbody tr').click( function () {\n         *        if ( oTable.fnIsOpen(this) ) {\n         *          oTable.fnClose( this );\n         *        } else {\n         *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n         *        }\n         *      } );\n         *\n         *      oTable = $('#example').dataTable();\n         *    } );\n         */\n        this.fnClose = function( nTr )\n        {\n            this.api( true ).row( nTr ).child.hide();\n        };\n        \n        \n        /**\n         * Remove a row for the table\n         *  @param {mixed} target The index of the row from aoData to be deleted, or\n         *    the TR element you want to delete\n         *  @param {function|null} [callBack] Callback function\n         *  @param {bool} [redraw=true] Redraw the table or not\n         *  @returns {array} The row that was deleted\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Immediately remove the first row\n         *      oTable.fnDeleteRow( 0 );\n         *    } );\n         */\n        this.fnDeleteRow = function( target, callback, redraw )\n        {\n            var api = this.api( true );\n            var rows = api.rows( target );\n            var settings = rows.settings()[0];\n            var data = settings.aoData[ rows[0][0] ];\n        \n            rows.remove();\n        \n            if ( callback ) {\n                callback.call( this, settings, data );\n            }\n        \n            if ( redraw === undefined || redraw ) {\n                api.draw();\n            }\n        \n            return data;\n        };\n        \n        \n        /**\n         * Restore the table to it's original state in the DOM by removing all of DataTables\n         * enhancements, alterations to the DOM structure of the table and event listeners.\n         *  @param {boolean} [remove=false] Completely remove the table from the DOM\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n         *      var oTable = $('#example').dataTable();\n         *      oTable.fnDestroy();\n         *    } );\n         */\n        this.fnDestroy = function ( remove )\n        {\n            this.api( true ).destroy( remove );\n        };\n        \n        \n        /**\n         * Redraw the table\n         *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n         *      oTable.fnDraw();\n         *    } );\n         */\n        this.fnDraw = function( complete )\n        {\n            // Note that this isn't an exact match to the old call to _fnDraw - it takes\n            // into account the new data, but can hold position.\n            this.api( true ).draw( complete );\n        };\n        \n        \n        /**\n         * Filter the input based on data\n         *  @param {string} sInput String to filter the table on\n         *  @param {int|null} [iColumn] Column to limit filtering to\n         *  @param {bool} [bRegex=false] Treat as regular expression or not\n         *  @param {bool} [bSmart=true] Perform smart filtering or not\n         *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n         *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Sometime later - filter...\n         *      oTable.fnFilter( 'test string' );\n         *    } );\n         */\n        this.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n        {\n            var api = this.api( true );\n        \n            if ( iColumn === null || iColumn === undefined ) {\n                api.search( sInput, bRegex, bSmart, bCaseInsensitive );\n            }\n            else {\n                api.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\n            }\n        \n            api.draw();\n        };\n        \n        \n        /**\n         * Get the data for the whole table, an individual row or an individual cell based on the\n         * provided parameters.\n         *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n         *    a TR node then the data source for the whole row will be returned. If given as a\n         *    TD/TH cell node then iCol will be automatically calculated and the data for the\n         *    cell returned. If given as an integer, then this is treated as the aoData internal\n         *    data index for the row (see fnGetPosition) and the data for that row used.\n         *  @param {int} [col] Optional column index that you want the data of.\n         *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n         *    returned. If mRow is defined, just data for that row, and is iCol is\n         *    defined, only data for the designated cell is returned.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    // Row data\n         *    $(document).ready(function() {\n         *      oTable = $('#example').dataTable();\n         *\n         *      oTable.$('tr').click( function () {\n         *        var data = oTable.fnGetData( this );\n         *        // ... do something with the array / object of data for the row\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Individual cell data\n         *    $(document).ready(function() {\n         *      oTable = $('#example').dataTable();\n         *\n         *      oTable.$('td').click( function () {\n         *        var sData = oTable.fnGetData( this );\n         *        alert( 'The cell clicked on had the value of '+sData );\n         *      } );\n         *    } );\n         */\n        this.fnGetData = function( src, col )\n        {\n            var api = this.api( true );\n        \n            if ( src !== undefined ) {\n                var type = src.nodeName ? src.nodeName.toLowerCase() : '';\n        \n                return col !== undefined || type == 'td' || type == 'th' ?\n                    api.cell( src, col ).data() :\n                    api.row( src ).data() || null;\n            }\n        \n            return api.data().toArray();\n        };\n        \n        \n        /**\n         * Get an array of the TR nodes that are used in the table's body. Note that you will\n         * typically want to use the '$' API method in preference to this as it is more\n         * flexible.\n         *  @param {int} [iRow] Optional row index for the TR element you want\n         *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n         *    in the table's body, or iRow is defined, just the TR element requested.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Get the nodes from the table\n         *      var nNodes = oTable.fnGetNodes( );\n         *    } );\n         */\n        this.fnGetNodes = function( iRow )\n        {\n            var api = this.api( true );\n        \n            return iRow !== undefined ?\n                api.row( iRow ).node() :\n                api.rows().nodes().flatten().toArray();\n        };\n        \n        \n        /**\n         * Get the array indexes of a particular cell from it's DOM element\n         * and column index including hidden columns\n         *  @param {node} node this can either be a TR, TD or TH in the table's body\n         *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n         *    if given as a cell, an array of [row index, column index (visible),\n         *    column index (all)] is given.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      $('#example tbody td').click( function () {\n         *        // Get the position of the current data from the node\n         *        var aPos = oTable.fnGetPosition( this );\n         *\n         *        // Get the data array for this row\n         *        var aData = oTable.fnGetData( aPos[0] );\n         *\n         *        // Update the data array and return the value\n         *        aData[ aPos[1] ] = 'clicked';\n         *        this.innerHTML = 'clicked';\n         *      } );\n         *\n         *      // Init DataTables\n         *      oTable = $('#example').dataTable();\n         *    } );\n         */\n        this.fnGetPosition = function( node )\n        {\n            var api = this.api( true );\n            var nodeName = node.nodeName.toUpperCase();\n        \n            if ( nodeName == 'TR' ) {\n                return api.row( node ).index();\n            }\n            else if ( nodeName == 'TD' || nodeName == 'TH' ) {\n                var cell = api.cell( node ).index();\n        \n                return [\n                    cell.row,\n                    cell.columnVisible,\n                    cell.column\n                ];\n            }\n            return null;\n        };\n        \n        \n        /**\n         * Check to see if a row is 'open' or not.\n         *  @param {node} nTr the table row to check\n         *  @returns {boolean} true if the row is currently open, false otherwise\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable;\n         *\n         *      // 'open' an information row when a row is clicked on\n         *      $('#example tbody tr').click( function () {\n         *        if ( oTable.fnIsOpen(this) ) {\n         *          oTable.fnClose( this );\n         *        } else {\n         *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n         *        }\n         *      } );\n         *\n         *      oTable = $('#example').dataTable();\n         *    } );\n         */\n        this.fnIsOpen = function( nTr )\n        {\n            return this.api( true ).row( nTr ).child.isShown();\n        };\n        \n        \n        /**\n         * This function will place a new row directly after a row which is currently\n         * on display on the page, with the HTML contents that is passed into the\n         * function. This can be used, for example, to ask for confirmation that a\n         * particular record should be deleted.\n         *  @param {node} nTr The table row to 'open'\n         *  @param {string|node|jQuery} mHtml The HTML to put into the row\n         *  @param {string} sClass Class to give the new TD cell\n         *  @returns {node} The row opened. Note that if the table row passed in as the\n         *    first parameter, is not found in the table, this method will silently\n         *    return.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable;\n         *\n         *      // 'open' an information row when a row is clicked on\n         *      $('#example tbody tr').click( function () {\n         *        if ( oTable.fnIsOpen(this) ) {\n         *          oTable.fnClose( this );\n         *        } else {\n         *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n         *        }\n         *      } );\n         *\n         *      oTable = $('#example').dataTable();\n         *    } );\n         */\n        this.fnOpen = function( nTr, mHtml, sClass )\n        {\n            return this.api( true )\n                .row( nTr )\n                .child( mHtml, sClass )\n                .show()\n                .child()[0];\n        };\n        \n        \n        /**\n         * Change the pagination - provides the internal logic for pagination in a simple API\n         * function. With this function you can have a DataTables table go to the next,\n         * previous, first or last pages.\n         *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n         *    or page number to jump to (integer), note that page 0 is the first page.\n         *  @param {bool} [bRedraw=true] Redraw the table or not\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *      oTable.fnPageChange( 'next' );\n         *    } );\n         */\n        this.fnPageChange = function ( mAction, bRedraw )\n        {\n            var api = this.api( true ).page( mAction );\n        \n            if ( bRedraw === undefined || bRedraw ) {\n                api.draw(false);\n            }\n        };\n        \n        \n        /**\n         * Show a particular column\n         *  @param {int} iCol The column whose display should be changed\n         *  @param {bool} bShow Show (true) or hide (false) the column\n         *  @param {bool} [bRedraw=true] Redraw the table or not\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Hide the second column after initialisation\n         *      oTable.fnSetColumnVis( 1, false );\n         *    } );\n         */\n        this.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n        {\n            var api = this.api( true ).column( iCol ).visible( bShow );\n        \n            if ( bRedraw === undefined || bRedraw ) {\n                api.columns.adjust().draw();\n            }\n        };\n        \n        \n        /**\n         * Get the settings for a particular table for external manipulation\n         *  @returns {object} DataTables settings object. See\n         *    {@link DataTable.models.oSettings}\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *      var oSettings = oTable.fnSettings();\n         *\n         *      // Show an example parameter from the settings\n         *      alert( oSettings._iDisplayStart );\n         *    } );\n         */\n        this.fnSettings = function()\n        {\n            return _fnSettingsFromNode( this[_ext.iApiIndex] );\n        };\n        \n        \n        /**\n         * Sort the table by a particular column\n         *  @param {int} iCol the data index to sort on. Note that this will not match the\n         *    'display index' if you have hidden data entries\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Sort immediately with columns 0 and 1\n         *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n         *    } );\n         */\n        this.fnSort = function( aaSort )\n        {\n            this.api( true ).order( aaSort ).draw();\n        };\n        \n        \n        /**\n         * Attach a sort listener to an element for a given column\n         *  @param {node} nNode the element to attach the sort listener to\n         *  @param {int} iColumn the column that a click on this node will sort on\n         *  @param {function} [fnCallback] callback function when sort is run\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Sort on column 1, when 'sorter' is clicked on\n         *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n         *    } );\n         */\n        this.fnSortListener = function( nNode, iColumn, fnCallback )\n        {\n            this.api( true ).order.listener( nNode, iColumn, fnCallback );\n        };\n        \n        \n        /**\n         * Update a table cell or row - this method will accept either a single value to\n         * update the cell with, an array of values with one element for each column or\n         * an object in the same format as the original data source. The function is\n         * self-referencing in order to make the multi column updates easier.\n         *  @param {object|array|string} mData Data to update the cell/row with\n         *  @param {node|int} mRow TR element you want to update or the aoData index\n         *  @param {int} [iColumn] The column to update, give as null or undefined to\n         *    update a whole row.\n         *  @param {bool} [bRedraw=true] Redraw the table or not\n         *  @param {bool} [bAction=true] Perform pre-draw actions or not\n         *  @returns {int} 0 on success, 1 on error\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n         *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n         *    } );\n         */\n        this.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n        {\n            var api = this.api( true );\n        \n            if ( iColumn === undefined || iColumn === null ) {\n                api.row( mRow ).data( mData );\n            }\n            else {\n                api.cell( mRow, iColumn ).data( mData );\n            }\n        \n            if ( bAction === undefined || bAction ) {\n                api.columns.adjust();\n            }\n        \n            if ( bRedraw === undefined || bRedraw ) {\n                api.draw();\n            }\n            return 0;\n        };\n        \n        \n        /**\n         * Provide a common method for plug-ins to check the version of DataTables being used, in order\n         * to ensure compatibility.\n         *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n         *    formats \"X\" and \"X.Y\" are also acceptable.\n         *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n         *    version, or false if this version of DataTales is not suitable\n         *  @method\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n         *    } );\n         */\n        this.fnVersionCheck = _ext.fnVersionCheck;\n        \n\n        var _that = this;\n        var emptyInit = options === undefined;\n        var len = this.length;\n\n        if ( emptyInit ) {\n            options = {};\n        }\n\n        this.oApi = this.internal = _ext.internal;\n\n        // Extend with old style plug-in API methods\n        for ( var fn in DataTable.ext.internal ) {\n            if ( fn ) {\n                this[fn] = _fnExternApiFunc(fn);\n            }\n        }\n\n        this.each(function() {\n            // For each initialisation we want to give it a clean initialisation\n            // object that can be bashed around\n            var o = {};\n            var oInit = len > 1 ? // optimisation for single table case\n                _fnExtend( o, options, true ) :\n                options;\n\n            /*global oInit,_that,emptyInit*/\n            var i=0, iLen, j, jLen, k, kLen;\n            var sId = this.getAttribute( 'id' );\n            var bInitHandedOff = false;\n            var defaults = DataTable.defaults;\n            var $this = $(this);\n            \n            \n            /* Sanity check */\n            if ( this.nodeName.toLowerCase() != 'table' )\n            {\n                _fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n                return;\n            }\n            \n            /* Backwards compatibility for the defaults */\n            _fnCompatOpts( defaults );\n            _fnCompatCols( defaults.column );\n            \n            /* Convert the camel-case defaults to Hungarian */\n            _fnCamelToHungarian( defaults, defaults, true );\n            _fnCamelToHungarian( defaults.column, defaults.column, true );\n            \n            /* Setting up the initialisation object */\n            _fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ) );\n            \n            \n            \n            /* Check to see if we are re-initialising a table */\n            var allSettings = DataTable.settings;\n            for ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n            {\n                var s = allSettings[i];\n            \n                /* Base check on table node */\n                if ( s.nTable == this || s.nTHead.parentNode == this || (s.nTFoot && s.nTFoot.parentNode == this) )\n                {\n                    var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n                    var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n            \n                    if ( emptyInit || bRetrieve )\n                    {\n                        return s.oInstance;\n                    }\n                    else if ( bDestroy )\n                    {\n                        s.oInstance.fnDestroy();\n                        break;\n                    }\n                    else\n                    {\n                        _fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n                        return;\n                    }\n                }\n            \n                /* If the element we are initialising has the same ID as a table which was previously\n                 * initialised, but the table nodes don't match (from before) then we destroy the old\n                 * instance by simply deleting it. This is under the assumption that the table has been\n                 * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n                 */\n                if ( s.sTableId == this.id )\n                {\n                    allSettings.splice( i, 1 );\n                    break;\n                }\n            }\n            \n            /* Ensure the table has an ID - required for accessibility */\n            if ( sId === null || sId === \"\" )\n            {\n                sId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n                this.id = sId;\n            }\n            \n            /* Create the settings object for this table and set some of the default parameters */\n            var oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n                \"sDestroyWidth\": $this[0].style.width,\n                \"sInstance\":     sId,\n                \"sTableId\":      sId\n            } );\n            oSettings.nTable = this;\n            oSettings.oApi   = _that.internal;\n            oSettings.oInit  = oInit;\n            \n            allSettings.push( oSettings );\n            \n            // Need to add the instance after the instance after the settings object has been added\n            // to the settings array, so we can self reference the table instance if more than one\n            oSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n            \n            // Backwards compatibility, before we apply all the defaults\n            _fnCompatOpts( oInit );\n            \n            if ( oInit.oLanguage )\n            {\n                _fnLanguageCompat( oInit.oLanguage );\n            }\n            \n            // If the length menu is given, but the init display length is not, use the length menu\n            if ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n            {\n                oInit.iDisplayLength = $.isArray( oInit.aLengthMenu[0] ) ?\n                    oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n            }\n            \n            // Apply the defaults and init options to make a single init object will all\n            // options defined from defaults and instance options.\n            oInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n            \n            \n            // Map the initialisation options onto the settings object\n            _fnMap( oSettings.oFeatures, oInit, [\n                \"bPaginate\",\n                \"bLengthChange\",\n                \"bFilter\",\n                \"bSort\",\n                \"bSortMulti\",\n                \"bInfo\",\n                \"bProcessing\",\n                \"bAutoWidth\",\n                \"bSortClasses\",\n                \"bServerSide\",\n                \"bDeferRender\"\n            ] );\n            _fnMap( oSettings, oInit, [\n                \"asStripeClasses\",\n                \"ajax\",\n                \"fnServerData\",\n                \"fnFormatNumber\",\n                \"sServerMethod\",\n                \"aaSorting\",\n                \"aaSortingFixed\",\n                \"aLengthMenu\",\n                \"sPaginationType\",\n                \"sAjaxSource\",\n                \"sAjaxDataProp\",\n                \"iStateDuration\",\n                \"sDom\",\n                \"bSortCellsTop\",\n                \"iTabIndex\",\n                \"fnStateLoadCallback\",\n                \"fnStateSaveCallback\",\n                \"renderer\",\n                \"searchDelay\",\n                \"rowId\",\n                [ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n                [ \"oSearch\", \"oPreviousSearch\" ],\n                [ \"aoSearchCols\", \"aoPreSearchCols\" ],\n                [ \"iDisplayLength\", \"_iDisplayLength\" ],\n                [ \"bJQueryUI\", \"bJUI\" ]\n            ] );\n            _fnMap( oSettings.oScroll, oInit, [\n                [ \"sScrollX\", \"sX\" ],\n                [ \"sScrollXInner\", \"sXInner\" ],\n                [ \"sScrollY\", \"sY\" ],\n                [ \"bScrollCollapse\", \"bCollapse\" ]\n            ] );\n            _fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n            \n            /* Callback functions which are array driven */\n            _fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n            _fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n            _fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n            _fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n            _fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n            _fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n            _fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n            _fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n            _fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n            _fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n            _fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n            \n            oSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n            \n            /* Browser support detection */\n            _fnBrowserDetect( oSettings );\n            \n            var oClasses = oSettings.oClasses;\n            \n            // @todo Remove in 1.11\n            if ( oInit.bJQueryUI )\n            {\n                /* Use the JUI classes object for display. You could clone the oStdClasses object if\n                 * you want to have multiple tables with multiple independent classes\n                 */\n                $.extend( oClasses, DataTable.ext.oJUIClasses, oInit.oClasses );\n            \n                if ( oInit.sDom === defaults.sDom && defaults.sDom === \"lfrtip\" )\n                {\n                    /* Set the DOM to use a layout suitable for jQuery UI's theming */\n                    oSettings.sDom = '<\"H\"lfr>t<\"F\"ip>';\n                }\n            \n                if ( ! oSettings.renderer ) {\n                    oSettings.renderer = 'jqueryui';\n                }\n                else if ( $.isPlainObject( oSettings.renderer ) && ! oSettings.renderer.header ) {\n                    oSettings.renderer.header = 'jqueryui';\n                }\n            }\n            else\n            {\n                $.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n            }\n            $this.addClass( oClasses.sTable );\n            \n            \n            if ( oSettings.iInitDisplayStart === undefined )\n            {\n                /* Display start point, taking into account the save saving */\n                oSettings.iInitDisplayStart = oInit.iDisplayStart;\n                oSettings._iDisplayStart = oInit.iDisplayStart;\n            }\n            \n            if ( oInit.iDeferLoading !== null )\n            {\n                oSettings.bDeferLoading = true;\n                var tmp = $.isArray( oInit.iDeferLoading );\n                oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n                oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n            }\n            \n            /* Language definitions */\n            var oLanguage = oSettings.oLanguage;\n            $.extend( true, oLanguage, oInit.oLanguage );\n            \n            if ( oLanguage.sUrl )\n            {\n                /* Get the language definitions from a file - because this Ajax call makes the language\n                 * get async to the remainder of this function we use bInitHandedOff to indicate that\n                 * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n                 */\n                $.ajax( {\n                    dataType: 'json',\n                    url: oLanguage.sUrl,\n                    success: function ( json ) {\n                        _fnLanguageCompat( json );\n                        _fnCamelToHungarian( defaults.oLanguage, json );\n                        $.extend( true, oLanguage, json );\n                        _fnInitialise( oSettings );\n                    },\n                    error: function () {\n                        // Error occurred loading language file, continue on as best we can\n                        _fnInitialise( oSettings );\n                    }\n                } );\n                bInitHandedOff = true;\n            }\n            \n            /*\n             * Stripes\n             */\n            if ( oInit.asStripeClasses === null )\n            {\n                oSettings.asStripeClasses =[\n                    oClasses.sStripeOdd,\n                    oClasses.sStripeEven\n                ];\n            }\n            \n            /* Remove row stripe classes if they are already on the table row */\n            var stripeClasses = oSettings.asStripeClasses;\n            var rowOne = $this.children('tbody').find('tr').eq(0);\n            if ( $.inArray( true, $.map( stripeClasses, function(el, i) {\n                return rowOne.hasClass(el);\n            } ) ) !== -1 ) {\n                $('tbody tr', this).removeClass( stripeClasses.join(' ') );\n                oSettings.asDestroyStripes = stripeClasses.slice();\n            }\n            \n            /*\n             * Columns\n             * See if we should load columns automatically or use defined ones\n             */\n            var anThs = [];\n            var aoColumnsInit;\n            var nThead = this.getElementsByTagName('thead');\n            if ( nThead.length !== 0 )\n            {\n                _fnDetectHeader( oSettings.aoHeader, nThead[0] );\n                anThs = _fnGetUniqueThs( oSettings );\n            }\n            \n            /* If not given a column array, generate one with nulls */\n            if ( oInit.aoColumns === null )\n            {\n                aoColumnsInit = [];\n                for ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n                {\n                    aoColumnsInit.push( null );\n                }\n            }\n            else\n            {\n                aoColumnsInit = oInit.aoColumns;\n            }\n            \n            /* Add the columns */\n            for ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n            {\n                _fnAddColumn( oSettings, anThs ? anThs[i] : null );\n            }\n            \n            /* Apply the column definitions */\n            _fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n                _fnColumnOptions( oSettings, iCol, oDef );\n            } );\n            \n            /* HTML5 attribute detection - build an mData object automatically if the\n             * attributes are found\n             */\n            if ( rowOne.length ) {\n                var a = function ( cell, name ) {\n                    return cell.getAttribute( 'data-'+name ) !== null ? name : null;\n                };\n            \n                $( rowOne[0] ).children('th, td').each( function (i, cell) {\n                    var col = oSettings.aoColumns[i];\n            \n                    if ( col.mData === i ) {\n                        var sort = a( cell, 'sort' ) || a( cell, 'order' );\n                        var filter = a( cell, 'filter' ) || a( cell, 'search' );\n            \n                        if ( sort !== null || filter !== null ) {\n                            col.mData = {\n                                _:      i+'.display',\n                                sort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n                                type:   sort !== null   ? i+'.@data-'+sort   : undefined,\n                                filter: filter !== null ? i+'.@data-'+filter : undefined\n                            };\n            \n                            _fnColumnOptions( oSettings, i );\n                        }\n                    }\n                } );\n            }\n            \n            var features = oSettings.oFeatures;\n            var loadedInit = function () {\n                /*\n                 * Sorting\n                 * @todo For modularisation (1.11) this needs to do into a sort start up handler\n                 */\n            \n                // If aaSorting is not defined, then we use the first indicator in asSorting\n                // in case that has been altered, so the default sort reflects that option\n                if ( oInit.aaSorting === undefined ) {\n                    var sorting = oSettings.aaSorting;\n                    for ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n                        sorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n                    }\n                }\n            \n                /* Do a first pass on the sorting classes (allows any size changes to be taken into\n                 * account, and also will apply sorting disabled classes if disabled\n                 */\n                _fnSortingClasses( oSettings );\n            \n                if ( features.bSort ) {\n                    _fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n                        if ( oSettings.bSorted ) {\n                            var aSort = _fnSortFlatten( oSettings );\n                            var sortedColumns = {};\n            \n                            $.each( aSort, function (i, val) {\n                                sortedColumns[ val.src ] = val.dir;\n                            } );\n            \n                            _fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\n                            _fnSortAria( oSettings );\n                        }\n                    } );\n                }\n            \n                _fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n                    if ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n                        _fnSortingClasses( oSettings );\n                    }\n                }, 'sc' );\n            \n            \n                /*\n                 * Final init\n                 * Cache the header, body and footer as required, creating them if needed\n                 */\n            \n                // Work around for Webkit bug 83867 - store the caption-side before removing from doc\n                var captions = $this.children('caption').each( function () {\n                    this._captionSide = $(this).css('caption-side');\n                } );\n            \n                var thead = $this.children('thead');\n                if ( thead.length === 0 ) {\n                    thead = $('<thead/>').appendTo($this);\n                }\n                oSettings.nTHead = thead[0];\n            \n                var tbody = $this.children('tbody');\n                if ( tbody.length === 0 ) {\n                    tbody = $('<tbody/>').appendTo($this);\n                }\n                oSettings.nTBody = tbody[0];\n            \n                var tfoot = $this.children('tfoot');\n                if ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\n                    // If we are a scrolling table, and no footer has been given, then we need to create\n                    // a tfoot element for the caption element to be appended to\n                    tfoot = $('<tfoot/>').appendTo($this);\n                }\n            \n                if ( tfoot.length === 0 || tfoot.children().length === 0 ) {\n                    $this.addClass( oClasses.sNoFooter );\n                }\n                else if ( tfoot.length > 0 ) {\n                    oSettings.nTFoot = tfoot[0];\n                    _fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n                }\n            \n                /* Check if there is data passing into the constructor */\n                if ( oInit.aaData ) {\n                    for ( i=0 ; i<oInit.aaData.length ; i++ ) {\n                        _fnAddData( oSettings, oInit.aaData[ i ] );\n                    }\n                }\n                else if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\n                    /* Grab the data from the page - only do this when deferred loading or no Ajax\n                     * source since there is no point in reading the DOM data if we are then going\n                     * to replace it with Ajax data\n                     */\n                    _fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n                }\n            \n                /* Copy the data index array */\n                oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n            \n                /* Initialisation complete - table can be drawn */\n                oSettings.bInitialised = true;\n            \n                /* Check if we need to initialise the table (it might not have been handed off to the\n                 * language processor)\n                 */\n                if ( bInitHandedOff === false ) {\n                    _fnInitialise( oSettings );\n                }\n            };\n            \n            /* Must be done after everything which can be overridden by the state saving! */\n            if ( oInit.bStateSave )\n            {\n                features.bStateSave = true;\n                _fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n                _fnLoadState( oSettings, oInit, loadedInit );\n            }\n            else {\n                loadedInit();\n            }\n            \n        } );\n        _that = null;\n        return this;\n    };\n\n    \n    /*\n     * It is useful to have variables which are scoped locally so only the\n     * DataTables functions can access them and they don't leak into global space.\n     * At the same time these functions are often useful over multiple files in the\n     * core and API, so we list, or at least document, all variables which are used\n     * by DataTables as private variables here. This also ensures that there is no\n     * clashing of variable names and that they can easily referenced for reuse.\n     */\n    \n    \n    // Defined else where\n    //  _selector_run\n    //  _selector_opts\n    //  _selector_first\n    //  _selector_row_indexes\n    \n    var _ext; // DataTable.ext\n    var _Api; // DataTable.Api\n    var _api_register; // DataTable.Api.register\n    var _api_registerPlural; // DataTable.Api.registerPlural\n    \n    var _re_dic = {};\n    var _re_new_lines = /[\\r\\n]/g;\n    var _re_html = /<.*?>/g;\n    \n    // This is not strict ISO8601 - Date.parse() is quite lax, although\n    // implementations differ between browsers.\n    var _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n    \n    // Escape regular expression special characters\n    var _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n    \n    // http://en.wikipedia.org/wiki/Foreign_exchange_market\n    // - \\u20BD - Russian ruble.\n    // - \\u20a9 - South Korean Won\n    // - \\u20BA - Turkish Lira\n    // - \\u20B9 - Indian Rupee\n    // - R - Brazil (R$) and South Africa\n    // - fr - Swiss Franc\n    // - kr - Swedish krona, Norwegian krone and Danish krone\n    // - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n    //   standards as thousands separators.\n    var _re_formatted_numeric = /[',$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfk]/gi;\n    \n    \n    var _empty = function ( d ) {\n        return !d || d === true || d === '-' ? true : false;\n    };\n    \n    \n    var _intVal = function ( s ) {\n        var integer = parseInt( s, 10 );\n        return !isNaN(integer) && isFinite(s) ? integer : null;\n    };\n    \n    // Convert from a formatted number with characters other than `.` as the\n    // decimal place, to a Javascript number\n    var _numToDecimal = function ( num, decimalPoint ) {\n        // Cache created regular expressions for speed as this function is called often\n        if ( ! _re_dic[ decimalPoint ] ) {\n            _re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n        }\n        return typeof num === 'string' && decimalPoint !== '.' ?\n            num.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n            num;\n    };\n    \n    \n    var _isNumber = function ( d, decimalPoint, formatted ) {\n        var strType = typeof d === 'string';\n    \n        // If empty return immediately so there must be a number if it is a\n        // formatted string (this stops the string \"k\", or \"kr\", etc being detected\n        // as a formatted number for currency\n        if ( _empty( d ) ) {\n            return true;\n        }\n    \n        if ( decimalPoint && strType ) {\n            d = _numToDecimal( d, decimalPoint );\n        }\n    \n        if ( formatted && strType ) {\n            d = d.replace( _re_formatted_numeric, '' );\n        }\n    \n        return !isNaN( parseFloat(d) ) && isFinite( d );\n    };\n    \n    \n    // A string without HTML in it can be considered to be HTML still\n    var _isHtml = function ( d ) {\n        return _empty( d ) || typeof d === 'string';\n    };\n    \n    \n    var _htmlNumeric = function ( d, decimalPoint, formatted ) {\n        if ( _empty( d ) ) {\n            return true;\n        }\n    \n        var html = _isHtml( d );\n        return ! html ?\n            null :\n            _isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n                true :\n                null;\n    };\n    \n    \n    var _pluck = function ( a, prop, prop2 ) {\n        var out = [];\n        var i=0, ien=a.length;\n    \n        // Could have the test in the loop for slightly smaller code, but speed\n        // is essential here\n        if ( prop2 !== undefined ) {\n            for ( ; i<ien ; i++ ) {\n                if ( a[i] && a[i][ prop ] ) {\n                    out.push( a[i][ prop ][ prop2 ] );\n                }\n            }\n        }\n        else {\n            for ( ; i<ien ; i++ ) {\n                if ( a[i] ) {\n                    out.push( a[i][ prop ] );\n                }\n            }\n        }\n    \n        return out;\n    };\n    \n    \n    // Basically the same as _pluck, but rather than looping over `a` we use `order`\n    // as the indexes to pick from `a`\n    var _pluck_order = function ( a, order, prop, prop2 )\n    {\n        var out = [];\n        var i=0, ien=order.length;\n    \n        // Could have the test in the loop for slightly smaller code, but speed\n        // is essential here\n        if ( prop2 !== undefined ) {\n            for ( ; i<ien ; i++ ) {\n                if ( a[ order[i] ][ prop ] ) {\n                    out.push( a[ order[i] ][ prop ][ prop2 ] );\n                }\n            }\n        }\n        else {\n            for ( ; i<ien ; i++ ) {\n                out.push( a[ order[i] ][ prop ] );\n            }\n        }\n    \n        return out;\n    };\n    \n    \n    var _range = function ( len, start )\n    {\n        var out = [];\n        var end;\n    \n        if ( start === undefined ) {\n            start = 0;\n            end = len;\n        }\n        else {\n            end = start;\n            start = len;\n        }\n    \n        for ( var i=start ; i<end ; i++ ) {\n            out.push( i );\n        }\n    \n        return out;\n    };\n    \n    \n    var _removeEmpty = function ( a )\n    {\n        var out = [];\n    \n        for ( var i=0, ien=a.length ; i<ien ; i++ ) {\n            if ( a[i] ) { // careful - will remove all falsy values!\n                out.push( a[i] );\n            }\n        }\n    \n        return out;\n    };\n    \n    \n    var _stripHtml = function ( d ) {\n        return d.replace( _re_html, '' );\n    };\n    \n    \n    /**\n     * Determine if all values in the array are unique. This means we can short\n     * cut the _unique method at the cost of a single loop. A sorted array is used\n     * to easily check the values.\n     *\n     * @param  {array} src Source array\n     * @return {boolean} true if all unique, false otherwise\n     * @ignore\n     */\n    var _areAllUnique = function ( src ) {\n        if ( src.length < 2 ) {\n            return true;\n        }\n    \n        var sorted = src.slice().sort();\n        var last = sorted[0];\n    \n        for ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n            if ( sorted[i] === last ) {\n                return false;\n            }\n    \n            last = sorted[i];\n        }\n    \n        return true;\n    };\n    \n    \n    /**\n     * Find the unique elements in a source array.\n     *\n     * @param  {array} src Source array\n     * @return {array} Array of unique items\n     * @ignore\n     */\n    var _unique = function ( src )\n    {\n        if ( _areAllUnique( src ) ) {\n            return src.slice();\n        }\n    \n        // A faster unique method is to use object keys to identify used values,\n        // but this doesn't work with arrays or objects, which we must also\n        // consider. See jsperf.com/compare-array-unique-versions/4 for more\n        // information.\n        var\n            out = [],\n            val,\n            i, ien=src.length,\n            j, k=0;\n    \n        again: for ( i=0 ; i<ien ; i++ ) {\n            val = src[i];\n    \n            for ( j=0 ; j<k ; j++ ) {\n                if ( out[j] === val ) {\n                    continue again;\n                }\n            }\n    \n            out.push( val );\n            k++;\n        }\n    \n        return out;\n    };\n    \n    \n    /**\n     * DataTables utility methods\n     * \n     * This namespace provides helper methods that DataTables uses internally to\n     * create a DataTable, but which are not exclusively used only for DataTables.\n     * These methods can be used by extension authors to save the duplication of\n     * code.\n     *\n     *  @namespace\n     */\n    DataTable.util = {\n        /**\n         * Throttle the calls to a function. Arguments and context are maintained\n         * for the throttled function.\n         *\n         * @param {function} fn Function to be called\n         * @param {integer} freq Call frequency in mS\n         * @return {function} Wrapped function\n         */\n        throttle: function ( fn, freq ) {\n            var\n                frequency = freq !== undefined ? freq : 200,\n                last,\n                timer;\n    \n            return function () {\n                var\n                    that = this,\n                    now  = +new Date(),\n                    args = arguments;\n    \n                if ( last && now < last + frequency ) {\n                    clearTimeout( timer );\n    \n                    timer = setTimeout( function () {\n                        last = undefined;\n                        fn.apply( that, args );\n                    }, frequency );\n                }\n                else {\n                    last = now;\n                    fn.apply( that, args );\n                }\n            };\n        },\n    \n    \n        /**\n         * Escape a string such that it can be used in a regular expression\n         *\n         *  @param {string} val string to escape\n         *  @returns {string} escaped string\n         */\n        escapeRegex: function ( val ) {\n            return val.replace( _re_escape_regex, '\\\\$1' );\n        }\n    };\n    \n    \n    \n    /**\n     * Create a mapping object that allows camel case parameters to be looked up\n     * for their Hungarian counterparts. The mapping is stored in a private\n     * parameter called `_hungarianMap` which can be accessed on the source object.\n     *  @param {object} o\n     *  @memberof DataTable#oApi\n     */\n    function _fnHungarianMap ( o )\n    {\n        var\n            hungarian = 'a aa ai ao as b fn i m o s ',\n            match,\n            newKey,\n            map = {};\n    \n        $.each( o, function (key, val) {\n            match = key.match(/^([^A-Z]+?)([A-Z])/);\n    \n            if ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n            {\n                newKey = key.replace( match[0], match[2].toLowerCase() );\n                map[ newKey ] = key;\n    \n                if ( match[1] === 'o' )\n                {\n                    _fnHungarianMap( o[key] );\n                }\n            }\n        } );\n    \n        o._hungarianMap = map;\n    }\n    \n    \n    /**\n     * Convert from camel case parameters to Hungarian, based on a Hungarian map\n     * created by _fnHungarianMap.\n     *  @param {object} src The model object which holds all parameters that can be\n     *    mapped.\n     *  @param {object} user The object to convert from camel case to Hungarian.\n     *  @param {boolean} force When set to `true`, properties which already have a\n     *    Hungarian value in the `user` object will be overwritten. Otherwise they\n     *    won't be.\n     *  @memberof DataTable#oApi\n     */\n    function _fnCamelToHungarian ( src, user, force )\n    {\n        if ( ! src._hungarianMap ) {\n            _fnHungarianMap( src );\n        }\n    \n        var hungarianKey;\n    \n        $.each( user, function (key, val) {\n            hungarianKey = src._hungarianMap[ key ];\n    \n            if ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n            {\n                // For objects, we need to buzz down into the object to copy parameters\n                if ( hungarianKey.charAt(0) === 'o' )\n                {\n                    // Copy the camelCase options over to the hungarian\n                    if ( ! user[ hungarianKey ] ) {\n                        user[ hungarianKey ] = {};\n                    }\n                    $.extend( true, user[hungarianKey], user[key] );\n    \n                    _fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n                }\n                else {\n                    user[hungarianKey] = user[ key ];\n                }\n            }\n        } );\n    }\n    \n    \n    /**\n     * Language compatibility - when certain options are given, and others aren't, we\n     * need to duplicate the values over, in order to provide backwards compatibility\n     * with older language files.\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnLanguageCompat( lang )\n    {\n        var defaults = DataTable.defaults.oLanguage;\n        var zeroRecords = lang.sZeroRecords;\n    \n        /* Backwards compatibility - if there is no sEmptyTable given, then use the same as\n         * sZeroRecords - assuming that is given.\n         */\n        if ( ! lang.sEmptyTable && zeroRecords &&\n            defaults.sEmptyTable === \"No data available in table\" )\n        {\n            _fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\n        }\n    \n        /* Likewise with loading records */\n        if ( ! lang.sLoadingRecords && zeroRecords &&\n            defaults.sLoadingRecords === \"Loading...\" )\n        {\n            _fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\n        }\n    \n        // Old parameter name of the thousands separator mapped onto the new\n        if ( lang.sInfoThousands ) {\n            lang.sThousands = lang.sInfoThousands;\n        }\n    \n        var decimal = lang.sDecimal;\n        if ( decimal ) {\n            _addNumericSort( decimal );\n        }\n    }\n    \n    \n    /**\n     * Map one parameter onto another\n     *  @param {object} o Object to map\n     *  @param {*} knew The new parameter name\n     *  @param {*} old The old parameter name\n     */\n    var _fnCompatMap = function ( o, knew, old ) {\n        if ( o[ knew ] !== undefined ) {\n            o[ old ] = o[ knew ];\n        }\n    };\n    \n    \n    /**\n     * Provide backwards compatibility for the main DT options. Note that the new\n     * options are mapped onto the old parameters, so this is an external interface\n     * change only.\n     *  @param {object} init Object to map\n     */\n    function _fnCompatOpts ( init )\n    {\n        _fnCompatMap( init, 'ordering',      'bSort' );\n        _fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n        _fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n        _fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n        _fnCompatMap( init, 'order',         'aaSorting' );\n        _fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n        _fnCompatMap( init, 'paging',        'bPaginate' );\n        _fnCompatMap( init, 'pagingType',    'sPaginationType' );\n        _fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n        _fnCompatMap( init, 'searching',     'bFilter' );\n    \n        // Boolean initialisation of x-scrolling\n        if ( typeof init.sScrollX === 'boolean' ) {\n            init.sScrollX = init.sScrollX ? '100%' : '';\n        }\n        if ( typeof init.scrollX === 'boolean' ) {\n            init.scrollX = init.scrollX ? '100%' : '';\n        }\n    \n        // Column search objects are in an array, so it needs to be converted\n        // element by element\n        var searchCols = init.aoSearchCols;\n    \n        if ( searchCols ) {\n            for ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n                if ( searchCols[i] ) {\n                    _fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n                }\n            }\n        }\n    }\n    \n    \n    /**\n     * Provide backwards compatibility for column options. Note that the new options\n     * are mapped onto the old parameters, so this is an external interface change\n     * only.\n     *  @param {object} init Object to map\n     */\n    function _fnCompatCols ( init )\n    {\n        _fnCompatMap( init, 'orderable',     'bSortable' );\n        _fnCompatMap( init, 'orderData',     'aDataSort' );\n        _fnCompatMap( init, 'orderSequence', 'asSorting' );\n        _fnCompatMap( init, 'orderDataType', 'sortDataType' );\n    \n        // orderData can be given as an integer\n        var dataSort = init.aDataSort;\n        if ( typeof dataSort === 'number' && ! $.isArray( dataSort ) ) {\n            init.aDataSort = [ dataSort ];\n        }\n    }\n    \n    \n    /**\n     * Browser feature detection for capabilities, quirks\n     *  @param {object} settings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnBrowserDetect( settings )\n    {\n        // We don't need to do this every time DataTables is constructed, the values\n        // calculated are specific to the browser and OS configuration which we\n        // don't expect to change between initialisations\n        if ( ! DataTable.__browser ) {\n            var browser = {};\n            DataTable.__browser = browser;\n    \n            // Scrolling feature / quirks detection\n            var n = $('<div/>')\n                .css( {\n                    position: 'fixed',\n                    top: 0,\n                    left: $(window).scrollLeft()*-1, // allow for scrolling\n                    height: 1,\n                    width: 1,\n                    overflow: 'hidden'\n                } )\n                .append(\n                    $('<div/>')\n                        .css( {\n                            position: 'absolute',\n                            top: 1,\n                            left: 1,\n                            width: 100,\n                            overflow: 'scroll'\n                        } )\n                        .append(\n                            $('<div/>')\n                                .css( {\n                                    width: '100%',\n                                    height: 10\n                                } )\n                        )\n                )\n                .appendTo( 'body' );\n    \n            var outer = n.children();\n            var inner = outer.children();\n    \n            // Numbers below, in order, are:\n            // inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n            //\n            // IE6 XP:                           100 100 100  83\n            // IE7 Vista:                        100 100 100  83\n            // IE 8+ Windows:                     83  83 100  83\n            // Evergreen Windows:                 83  83 100  83\n            // Evergreen Mac with scrollbars:     85  85 100  85\n            // Evergreen Mac without scrollbars: 100 100 100 100\n    \n            // Get scrollbar width\n            browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n    \n            // IE6/7 will oversize a width 100% element inside a scrolling element, to\n            // include the width of the scrollbar, while other browsers ensure the inner\n            // element is contained without forcing scrolling\n            browser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n    \n            // In rtl text layout, some browsers (most, but not all) will place the\n            // scrollbar on the left, rather than the right.\n            browser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n    \n            // IE8- don't provide height and width for getBoundingClientRect\n            browser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n    \n            n.remove();\n        }\n    \n        $.extend( settings.oBrowser, DataTable.__browser );\n        settings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n    }\n    \n    \n    /**\n     * Array.prototype reduce[Right] method, used for browsers which don't support\n     * JS 1.6. Done this way to reduce code size, since we iterate either way\n     *  @param {object} settings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnReduce ( that, fn, init, start, end, inc )\n    {\n        var\n            i = start,\n            value,\n            isSet = false;\n    \n        if ( init !== undefined ) {\n            value = init;\n            isSet = true;\n        }\n    \n        while ( i !== end ) {\n            if ( ! that.hasOwnProperty(i) ) {\n                continue;\n            }\n    \n            value = isSet ?\n                fn( value, that[i], i, that ) :\n                that[i];\n    \n            isSet = true;\n            i += inc;\n        }\n    \n        return value;\n    }\n    \n    /**\n     * Add a column to the list used for the table with default values\n     *  @param {object} oSettings dataTables settings object\n     *  @param {node} nTh The th element for this column\n     *  @memberof DataTable#oApi\n     */\n    function _fnAddColumn( oSettings, nTh )\n    {\n        // Add column to aoColumns array\n        var oDefaults = DataTable.defaults.column;\n        var iCol = oSettings.aoColumns.length;\n        var oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n            \"nTh\": nTh ? nTh : document.createElement('th'),\n            \"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n            \"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n            \"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n            idx: iCol\n        } );\n        oSettings.aoColumns.push( oCol );\n    \n        // Add search object for column specific search. Note that the `searchCols[ iCol ]`\n        // passed into extend can be undefined. This allows the user to give a default\n        // with only some of the parameters defined, and also not give a default\n        var searchCols = oSettings.aoPreSearchCols;\n        searchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n    \n        // Use the default column options function to initialise classes etc\n        _fnColumnOptions( oSettings, iCol, $(nTh).data() );\n    }\n    \n    \n    /**\n     * Apply options for a column\n     *  @param {object} oSettings dataTables settings object\n     *  @param {int} iCol column index to consider\n     *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n     *  @memberof DataTable#oApi\n     */\n    function _fnColumnOptions( oSettings, iCol, oOptions )\n    {\n        var oCol = oSettings.aoColumns[ iCol ];\n        var oClasses = oSettings.oClasses;\n        var th = $(oCol.nTh);\n    \n        // Try to get width information from the DOM. We can't get it from CSS\n        // as we'd need to parse the CSS stylesheet. `width` option can override\n        if ( ! oCol.sWidthOrig ) {\n            // Width attribute\n            oCol.sWidthOrig = th.attr('width') || null;\n    \n            // Style attribute\n            var t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n            if ( t ) {\n                oCol.sWidthOrig = t[1];\n            }\n        }\n    \n        /* User specified column options */\n        if ( oOptions !== undefined && oOptions !== null )\n        {\n            // Backwards compatibility\n            _fnCompatCols( oOptions );\n    \n            // Map camel case parameters to their Hungarian counterparts\n            _fnCamelToHungarian( DataTable.defaults.column, oOptions );\n    \n            /* Backwards compatibility for mDataProp */\n            if ( oOptions.mDataProp !== undefined && !oOptions.mData )\n            {\n                oOptions.mData = oOptions.mDataProp;\n            }\n    \n            if ( oOptions.sType )\n            {\n                oCol._sManualType = oOptions.sType;\n            }\n    \n            // `class` is a reserved word in Javascript, so we need to provide\n            // the ability to use a valid name for the camel case input\n            if ( oOptions.className && ! oOptions.sClass )\n            {\n                oOptions.sClass = oOptions.className;\n            }\n    \n            $.extend( oCol, oOptions );\n            _fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n    \n            /* iDataSort to be applied (backwards compatibility), but aDataSort will take\n             * priority if defined\n             */\n            if ( oOptions.iDataSort !== undefined )\n            {\n                oCol.aDataSort = [ oOptions.iDataSort ];\n            }\n            _fnMap( oCol, oOptions, \"aDataSort\" );\n        }\n    \n        /* Cache the data get and set functions for speed */\n        var mDataSrc = oCol.mData;\n        var mData = _fnGetObjectDataFn( mDataSrc );\n        var mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n    \n        var attrTest = function( src ) {\n            return typeof src === 'string' && src.indexOf('@') !== -1;\n        };\n        oCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n            attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n        );\n        oCol._setter = null;\n    \n        oCol.fnGetData = function (rowData, type, meta) {\n            var innerData = mData( rowData, type, undefined, meta );\n    \n            return mRender && type ?\n                mRender( innerData, type, rowData, meta ) :\n                innerData;\n        };\n        oCol.fnSetData = function ( rowData, val, meta ) {\n            return _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n        };\n    \n        // Indicate if DataTables should read DOM data as an object or array\n        // Used in _fnGetRowElements\n        if ( typeof mDataSrc !== 'number' ) {\n            oSettings._rowReadObject = true;\n        }\n    \n        /* Feature sorting overrides column specific when off */\n        if ( !oSettings.oFeatures.bSort )\n        {\n            oCol.bSortable = false;\n            th.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\n        }\n    \n        /* Check that the class assignment is correct for sorting */\n        var bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n        var bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n        if ( !oCol.bSortable || (!bAsc && !bDesc) )\n        {\n            oCol.sSortingClass = oClasses.sSortableNone;\n            oCol.sSortingClassJUI = \"\";\n        }\n        else if ( bAsc && !bDesc )\n        {\n            oCol.sSortingClass = oClasses.sSortableAsc;\n            oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n        }\n        else if ( !bAsc && bDesc )\n        {\n            oCol.sSortingClass = oClasses.sSortableDesc;\n            oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n        }\n        else\n        {\n            oCol.sSortingClass = oClasses.sSortable;\n            oCol.sSortingClassJUI = oClasses.sSortJUI;\n        }\n    }\n    \n    \n    /**\n     * Adjust the table column widths for new data. Note: you would probably want to\n     * do a redraw after calling this function!\n     *  @param {object} settings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnAdjustColumnSizing ( settings )\n    {\n        /* Not interested in doing column width calculation if auto-width is disabled */\n        if ( settings.oFeatures.bAutoWidth !== false )\n        {\n            var columns = settings.aoColumns;\n    \n            _fnCalculateColumnWidths( settings );\n            for ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\n            {\n                columns[i].nTh.style.width = columns[i].sWidth;\n            }\n        }\n    \n        var scroll = settings.oScroll;\n        if ( scroll.sY !== '' || scroll.sX !== '')\n        {\n            _fnScrollDraw( settings );\n        }\n    \n        _fnCallbackFire( settings, null, 'column-sizing', [settings] );\n    }\n    \n    \n    /**\n     * Covert the index of a visible column to the index in the data array (take account\n     * of hidden columns)\n     *  @param {object} oSettings dataTables settings object\n     *  @param {int} iMatch Visible column index to lookup\n     *  @returns {int} i the data index\n     *  @memberof DataTable#oApi\n     */\n    function _fnVisibleToColumnIndex( oSettings, iMatch )\n    {\n        var aiVis = _fnGetColumns( oSettings, 'bVisible' );\n    \n        return typeof aiVis[iMatch] === 'number' ?\n            aiVis[iMatch] :\n            null;\n    }\n    \n    \n    /**\n     * Covert the index of an index in the data array and convert it to the visible\n     *   column index (take account of hidden columns)\n     *  @param {int} iMatch Column index to lookup\n     *  @param {object} oSettings dataTables settings object\n     *  @returns {int} i the data index\n     *  @memberof DataTable#oApi\n     */\n    function _fnColumnIndexToVisible( oSettings, iMatch )\n    {\n        var aiVis = _fnGetColumns( oSettings, 'bVisible' );\n        var iPos = $.inArray( iMatch, aiVis );\n    \n        return iPos !== -1 ? iPos : null;\n    }\n    \n    \n    /**\n     * Get the number of visible columns\n     *  @param {object} oSettings dataTables settings object\n     *  @returns {int} i the number of visible columns\n     *  @memberof DataTable#oApi\n     */\n    function _fnVisbleColumns( oSettings )\n    {\n        var vis = 0;\n    \n        // No reduce in IE8, use a loop for now\n        $.each( oSettings.aoColumns, function ( i, col ) {\n            if ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\n                vis++;\n            }\n        } );\n    \n        return vis;\n    }\n    \n    \n    /**\n     * Get an array of column indexes that match a given property\n     *  @param {object} oSettings dataTables settings object\n     *  @param {string} sParam Parameter in aoColumns to look for - typically\n     *    bVisible or bSearchable\n     *  @returns {array} Array of indexes with matched properties\n     *  @memberof DataTable#oApi\n     */\n    function _fnGetColumns( oSettings, sParam )\n    {\n        var a = [];\n    \n        $.map( oSettings.aoColumns, function(val, i) {\n            if ( val[sParam] ) {\n                a.push( i );\n            }\n        } );\n    \n        return a;\n    }\n    \n    \n    /**\n     * Calculate the 'type' of a column\n     *  @param {object} settings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnColumnTypes ( settings )\n    {\n        var columns = settings.aoColumns;\n        var data = settings.aoData;\n        var types = DataTable.ext.type.detect;\n        var i, ien, j, jen, k, ken;\n        var col, cell, detectedType, cache;\n    \n        // For each column, spin over the \n        for ( i=0, ien=columns.length ; i<ien ; i++ ) {\n            col = columns[i];\n            cache = [];\n    \n            if ( ! col.sType && col._sManualType ) {\n                col.sType = col._sManualType;\n            }\n            else if ( ! col.sType ) {\n                for ( j=0, jen=types.length ; j<jen ; j++ ) {\n                    for ( k=0, ken=data.length ; k<ken ; k++ ) {\n                        // Use a cache array so we only need to get the type data\n                        // from the formatter once (when using multiple detectors)\n                        if ( cache[k] === undefined ) {\n                            cache[k] = _fnGetCellData( settings, k, i, 'type' );\n                        }\n    \n                        detectedType = types[j]( cache[k], settings );\n    \n                        // If null, then this type can't apply to this column, so\n                        // rather than testing all cells, break out. There is an\n                        // exception for the last type which is `html`. We need to\n                        // scan all rows since it is possible to mix string and HTML\n                        // types\n                        if ( ! detectedType && j !== types.length-1 ) {\n                            break;\n                        }\n    \n                        // Only a single match is needed for html type since it is\n                        // bottom of the pile and very similar to string\n                        if ( detectedType === 'html' ) {\n                            break;\n                        }\n                    }\n    \n                    // Type is valid for all data points in the column - use this\n                    // type\n                    if ( detectedType ) {\n                        col.sType = detectedType;\n                        break;\n                    }\n                }\n    \n                // Fall back - if no type was detected, always use string\n                if ( ! col.sType ) {\n                    col.sType = 'string';\n                }\n            }\n        }\n    }\n    \n    \n    /**\n     * Take the column definitions and static columns arrays and calculate how\n     * they relate to column indexes. The callback function will then apply the\n     * definition found for a column to a suitable configuration object.\n     *  @param {object} oSettings dataTables settings object\n     *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n     *  @param {array} aoCols The aoColumns array that defines columns individually\n     *  @param {function} fn Callback function - takes two parameters, the calculated\n     *    column index and the definition for that column.\n     *  @memberof DataTable#oApi\n     */\n    function _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n    {\n        var i, iLen, j, jLen, k, kLen, def;\n        var columns = oSettings.aoColumns;\n    \n        // Column definitions with aTargets\n        if ( aoColDefs )\n        {\n            /* Loop over the definitions array - loop in reverse so first instance has priority */\n            for ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n            {\n                def = aoColDefs[i];\n    \n                /* Each definition can target multiple columns, as it is an array */\n                var aTargets = def.targets !== undefined ?\n                    def.targets :\n                    def.aTargets;\n    \n                if ( ! $.isArray( aTargets ) )\n                {\n                    aTargets = [ aTargets ];\n                }\n    \n                for ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n                {\n                    if ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n                    {\n                        /* Add columns that we don't yet know about */\n                        while( columns.length <= aTargets[j] )\n                        {\n                            _fnAddColumn( oSettings );\n                        }\n    \n                        /* Integer, basic index */\n                        fn( aTargets[j], def );\n                    }\n                    else if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n                    {\n                        /* Negative integer, right to left column counting */\n                        fn( columns.length+aTargets[j], def );\n                    }\n                    else if ( typeof aTargets[j] === 'string' )\n                    {\n                        /* Class name matching on TH element */\n                        for ( k=0, kLen=columns.length ; k<kLen ; k++ )\n                        {\n                            if ( aTargets[j] == \"_all\" ||\n                                 $(columns[k].nTh).hasClass( aTargets[j] ) )\n                            {\n                                fn( k, def );\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    \n        // Statically defined columns array\n        if ( aoCols )\n        {\n            for ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n            {\n                fn( i, aoCols[i] );\n            }\n        }\n    }\n    \n    /**\n     * Add a data array to the table, creating DOM node etc. This is the parallel to\n     * _fnGatherData, but for adding rows from a Javascript source, rather than a\n     * DOM source.\n     *  @param {object} oSettings dataTables settings object\n     *  @param {array} aData data array to be added\n     *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n     *    DataTables will create a row automatically\n     *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n     *    if nTr is.\n     *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n     *  @memberof DataTable#oApi\n     */\n    function _fnAddData ( oSettings, aDataIn, nTr, anTds )\n    {\n        /* Create the object for storing information about this new row */\n        var iRow = oSettings.aoData.length;\n        var oData = $.extend( true, {}, DataTable.models.oRow, {\n            src: nTr ? 'dom' : 'data',\n            idx: iRow\n        } );\n    \n        oData._aData = aDataIn;\n        oSettings.aoData.push( oData );\n    \n        /* Create the cells */\n        var nTd, sThisType;\n        var columns = oSettings.aoColumns;\n    \n        // Invalidate the column types as the new data needs to be revalidated\n        for ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n        {\n            columns[i].sType = null;\n        }\n    \n        /* Add to the display array */\n        oSettings.aiDisplayMaster.push( iRow );\n    \n        var id = oSettings.rowIdFn( aDataIn );\n        if ( id !== undefined ) {\n            oSettings.aIds[ id ] = oData;\n        }\n    \n        /* Create the DOM information, or register it if already present */\n        if ( nTr || ! oSettings.oFeatures.bDeferRender )\n        {\n            _fnCreateTr( oSettings, iRow, nTr, anTds );\n        }\n    \n        return iRow;\n    }\n    \n    \n    /**\n     * Add one or more TR elements to the table. Generally we'd expect to\n     * use this for reading data from a DOM sourced table, but it could be\n     * used for an TR element. Note that if a TR is given, it is used (i.e.\n     * it is not cloned).\n     *  @param {object} settings dataTables settings object\n     *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n     *  @returns {array} Array of indexes for the added rows\n     *  @memberof DataTable#oApi\n     */\n    function _fnAddTr( settings, trs )\n    {\n        var row;\n    \n        // Allow an individual node to be passed in\n        if ( ! (trs instanceof $) ) {\n            trs = $(trs);\n        }\n    \n        return trs.map( function (i, el) {\n            row = _fnGetRowElements( settings, el );\n            return _fnAddData( settings, row.data, el, row.cells );\n        } );\n    }\n    \n    \n    /**\n     * Take a TR element and convert it to an index in aoData\n     *  @param {object} oSettings dataTables settings object\n     *  @param {node} n the TR element to find\n     *  @returns {int} index if the node is found, null if not\n     *  @memberof DataTable#oApi\n     */\n    function _fnNodeToDataIndex( oSettings, n )\n    {\n        return (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n    }\n    \n    \n    /**\n     * Take a TD element and convert it into a column data index (not the visible index)\n     *  @param {object} oSettings dataTables settings object\n     *  @param {int} iRow The row number the TD/TH can be found in\n     *  @param {node} n The TD/TH element to find\n     *  @returns {int} index if the node is found, -1 if not\n     *  @memberof DataTable#oApi\n     */\n    function _fnNodeToColumnIndex( oSettings, iRow, n )\n    {\n        return $.inArray( n, oSettings.aoData[ iRow ].anCells );\n    }\n    \n    \n    /**\n     * Get the data for a given cell from the internal cache, taking into account data mapping\n     *  @param {object} settings dataTables settings object\n     *  @param {int} rowIdx aoData row id\n     *  @param {int} colIdx Column index\n     *  @param {string} type data get type ('display', 'type' 'filter' 'sort')\n     *  @returns {*} Cell data\n     *  @memberof DataTable#oApi\n     */\n    function _fnGetCellData( settings, rowIdx, colIdx, type )\n    {\n        var draw           = settings.iDraw;\n        var col            = settings.aoColumns[colIdx];\n        var rowData        = settings.aoData[rowIdx]._aData;\n        var defaultContent = col.sDefaultContent;\n        var cellData       = col.fnGetData( rowData, type, {\n            settings: settings,\n            row:      rowIdx,\n            col:      colIdx\n        } );\n    \n        if ( cellData === undefined ) {\n            if ( settings.iDrawError != draw && defaultContent === null ) {\n                _fnLog( settings, 0, \"Requested unknown parameter \"+\n                    (typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n                    \" for row \"+rowIdx+\", column \"+colIdx, 4 );\n                settings.iDrawError = draw;\n            }\n            return defaultContent;\n        }\n    \n        // When the data source is null and a specific data type is requested (i.e.\n        // not the original data), we can use default column data\n        if ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n            cellData = defaultContent;\n        }\n        else if ( typeof cellData === 'function' ) {\n            // If the data source is a function, then we run it and use the return,\n            // executing in the scope of the data object (for instances)\n            return cellData.call( rowData );\n        }\n    \n        if ( cellData === null && type == 'display' ) {\n            return '';\n        }\n        return cellData;\n    }\n    \n    \n    /**\n     * Set the value for a specific cell, into the internal data cache\n     *  @param {object} settings dataTables settings object\n     *  @param {int} rowIdx aoData row id\n     *  @param {int} colIdx Column index\n     *  @param {*} val Value to set\n     *  @memberof DataTable#oApi\n     */\n    function _fnSetCellData( settings, rowIdx, colIdx, val )\n    {\n        var col     = settings.aoColumns[colIdx];\n        var rowData = settings.aoData[rowIdx]._aData;\n    \n        col.fnSetData( rowData, val, {\n            settings: settings,\n            row:      rowIdx,\n            col:      colIdx\n        }  );\n    }\n    \n    \n    // Private variable that is used to match action syntax in the data property object\n    var __reArray = /\\[.*?\\]$/;\n    var __reFn = /\\(\\)$/;\n    \n    /**\n     * Split string on periods, taking into account escaped periods\n     * @param  {string} str String to split\n     * @return {array} Split string\n     */\n    function _fnSplitObjNotation( str )\n    {\n        return $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\n            return s.replace(/\\\\\\./g, '.');\n        } );\n    }\n    \n    \n    /**\n     * Return a function that can be used to get data from a source object, taking\n     * into account the ability to use nested objects as a source\n     *  @param {string|int|function} mSource The data source for the object\n     *  @returns {function} Data get function\n     *  @memberof DataTable#oApi\n     */\n    function _fnGetObjectDataFn( mSource )\n    {\n        if ( $.isPlainObject( mSource ) )\n        {\n            /* Build an object of get functions, and wrap them in a single call */\n            var o = {};\n            $.each( mSource, function (key, val) {\n                if ( val ) {\n                    o[key] = _fnGetObjectDataFn( val );\n                }\n            } );\n    \n            return function (data, type, row, meta) {\n                var t = o[type] || o._;\n                return t !== undefined ?\n                    t(data, type, row, meta) :\n                    data;\n            };\n        }\n        else if ( mSource === null )\n        {\n            /* Give an empty string for rendering / sorting etc */\n            return function (data) { // type, row and meta also passed, but not used\n                return data;\n            };\n        }\n        else if ( typeof mSource === 'function' )\n        {\n            return function (data, type, row, meta) {\n                return mSource( data, type, row, meta );\n            };\n        }\n        else if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n                  mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n        {\n            /* If there is a . in the source string then the data source is in a\n             * nested object so we loop over the data for each level to get the next\n             * level down. On each loop we test for undefined, and if found immediately\n             * return. This allows entire objects to be missing and sDefaultContent to\n             * be used if defined, rather than throwing an error\n             */\n            var fetchData = function (data, type, src) {\n                var arrayNotation, funcNotation, out, innerSrc;\n    \n                if ( src !== \"\" )\n                {\n                    var a = _fnSplitObjNotation( src );\n    \n                    for ( var i=0, iLen=a.length ; i<iLen ; i++ )\n                    {\n                        // Check if we are dealing with special notation\n                        arrayNotation = a[i].match(__reArray);\n                        funcNotation = a[i].match(__reFn);\n    \n                        if ( arrayNotation )\n                        {\n                            // Array notation\n                            a[i] = a[i].replace(__reArray, '');\n    \n                            // Condition allows simply [] to be passed in\n                            if ( a[i] !== \"\" ) {\n                                data = data[ a[i] ];\n                            }\n                            out = [];\n    \n                            // Get the remainder of the nested object to get\n                            a.splice( 0, i+1 );\n                            innerSrc = a.join('.');\n    \n                            // Traverse each entry in the array getting the properties requested\n                            if ( $.isArray( data ) ) {\n                                for ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n                                    out.push( fetchData( data[j], type, innerSrc ) );\n                                }\n                            }\n    \n                            // If a string is given in between the array notation indicators, that\n                            // is used to join the strings together, otherwise an array is returned\n                            var join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n                            data = (join===\"\") ? out : out.join(join);\n    \n                            // The inner call to fetchData has already traversed through the remainder\n                            // of the source requested, so we exit from the loop\n                            break;\n                        }\n                        else if ( funcNotation )\n                        {\n                            // Function call\n                            a[i] = a[i].replace(__reFn, '');\n                            data = data[ a[i] ]();\n                            continue;\n                        }\n    \n                        if ( data === null || data[ a[i] ] === undefined )\n                        {\n                            return undefined;\n                        }\n                        data = data[ a[i] ];\n                    }\n                }\n    \n                return data;\n            };\n    \n            return function (data, type) { // row and meta also passed, but not used\n                return fetchData( data, type, mSource );\n            };\n        }\n        else\n        {\n            /* Array or flat object mapping */\n            return function (data, type) { // row and meta also passed, but not used\n                return data[mSource];\n            };\n        }\n    }\n    \n    \n    /**\n     * Return a function that can be used to set data from a source object, taking\n     * into account the ability to use nested objects as a source\n     *  @param {string|int|function} mSource The data source for the object\n     *  @returns {function} Data set function\n     *  @memberof DataTable#oApi\n     */\n    function _fnSetObjectDataFn( mSource )\n    {\n        if ( $.isPlainObject( mSource ) )\n        {\n            /* Unlike get, only the underscore (global) option is used for for\n             * setting data since we don't know the type here. This is why an object\n             * option is not documented for `mData` (which is read/write), but it is\n             * for `mRender` which is read only.\n             */\n            return _fnSetObjectDataFn( mSource._ );\n        }\n        else if ( mSource === null )\n        {\n            /* Nothing to do when the data source is null */\n            return function () {};\n        }\n        else if ( typeof mSource === 'function' )\n        {\n            return function (data, val, meta) {\n                mSource( data, 'set', val, meta );\n            };\n        }\n        else if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n                  mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n        {\n            /* Like the get, we need to get data from a nested object */\n            var setData = function (data, val, src) {\n                var a = _fnSplitObjNotation( src ), b;\n                var aLast = a[a.length-1];\n                var arrayNotation, funcNotation, o, innerSrc;\n    \n                for ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )\n                {\n                    // Check if we are dealing with an array notation request\n                    arrayNotation = a[i].match(__reArray);\n                    funcNotation = a[i].match(__reFn);\n    \n                    if ( arrayNotation )\n                    {\n                        a[i] = a[i].replace(__reArray, '');\n                        data[ a[i] ] = [];\n    \n                        // Get the remainder of the nested object to set so we can recurse\n                        b = a.slice();\n                        b.splice( 0, i+1 );\n                        innerSrc = b.join('.');\n    \n                        // Traverse each entry in the array setting the properties requested\n                        if ( $.isArray( val ) )\n                        {\n                            for ( var j=0, jLen=val.length ; j<jLen ; j++ )\n                            {\n                                o = {};\n                                setData( o, val[j], innerSrc );\n                                data[ a[i] ].push( o );\n                            }\n                        }\n                        else\n                        {\n                            // We've been asked to save data to an array, but it\n                            // isn't array data to be saved. Best that can be done\n                            // is to just save the value.\n                            data[ a[i] ] = val;\n                        }\n    \n                        // The inner call to setData has already traversed through the remainder\n                        // of the source and has set the data, thus we can exit here\n                        return;\n                    }\n                    else if ( funcNotation )\n                    {\n                        // Function call\n                        a[i] = a[i].replace(__reFn, '');\n                        data = data[ a[i] ]( val );\n                    }\n    \n                    // If the nested object doesn't currently exist - since we are\n                    // trying to set the value - create it\n                    if ( data[ a[i] ] === null || data[ a[i] ] === undefined )\n                    {\n                        data[ a[i] ] = {};\n                    }\n                    data = data[ a[i] ];\n                }\n    \n                // Last item in the input - i.e, the actual set\n                if ( aLast.match(__reFn ) )\n                {\n                    // Function call\n                    data = data[ aLast.replace(__reFn, '') ]( val );\n                }\n                else\n                {\n                    // If array notation is used, we just want to strip it and use the property name\n                    // and assign the value. If it isn't used, then we get the result we want anyway\n                    data[ aLast.replace(__reArray, '') ] = val;\n                }\n            };\n    \n            return function (data, val) { // meta is also passed in, but not used\n                return setData( data, val, mSource );\n            };\n        }\n        else\n        {\n            /* Array or flat object mapping */\n            return function (data, val) { // meta is also passed in, but not used\n                data[mSource] = val;\n            };\n        }\n    }\n    \n    \n    /**\n     * Return an array with the full table data\n     *  @param {object} oSettings dataTables settings object\n     *  @returns array {array} aData Master data array\n     *  @memberof DataTable#oApi\n     */\n    function _fnGetDataMaster ( settings )\n    {\n        return _pluck( settings.aoData, '_aData' );\n    }\n    \n    \n    /**\n     * Nuke the table\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnClearTable( settings )\n    {\n        settings.aoData.length = 0;\n        settings.aiDisplayMaster.length = 0;\n        settings.aiDisplay.length = 0;\n        settings.aIds = {};\n    }\n    \n    \n     /**\n     * Take an array of integers (index array) and remove a target integer (value - not\n     * the key!)\n     *  @param {array} a Index array to target\n     *  @param {int} iTarget value to find\n     *  @memberof DataTable#oApi\n     */\n    function _fnDeleteIndex( a, iTarget, splice )\n    {\n        var iTargetIndex = -1;\n    \n        for ( var i=0, iLen=a.length ; i<iLen ; i++ )\n        {\n            if ( a[i] == iTarget )\n            {\n                iTargetIndex = i;\n            }\n            else if ( a[i] > iTarget )\n            {\n                a[i]--;\n            }\n        }\n    \n        if ( iTargetIndex != -1 && splice === undefined )\n        {\n            a.splice( iTargetIndex, 1 );\n        }\n    }\n    \n    \n    /**\n     * Mark cached data as invalid such that a re-read of the data will occur when\n     * the cached data is next requested. Also update from the data source object.\n     *\n     * @param {object} settings DataTables settings object\n     * @param {int}    rowIdx   Row index to invalidate\n     * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n     *     or 'data'\n     * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n     *     row will be invalidated\n     * @memberof DataTable#oApi\n     *\n     * @todo For the modularisation of v1.11 this will need to become a callback, so\n     *   the sort and filter methods can subscribe to it. That will required\n     *   initialisation options for sorting, which is why it is not already baked in\n     */\n    function _fnInvalidate( settings, rowIdx, src, colIdx )\n    {\n        var row = settings.aoData[ rowIdx ];\n        var i, ien;\n        var cellWrite = function ( cell, col ) {\n            // This is very frustrating, but in IE if you just write directly\n            // to innerHTML, and elements that are overwritten are GC'ed,\n            // even if there is a reference to them elsewhere\n            while ( cell.childNodes.length ) {\n                cell.removeChild( cell.firstChild );\n            }\n    \n            cell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\n        };\n    \n        // Are we reading last data from DOM or the data object?\n        if ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n            // Read the data from the DOM\n            row._aData = _fnGetRowElements(\n                    settings, row, colIdx, colIdx === undefined ? undefined : row._aData\n                )\n                .data;\n        }\n        else {\n            // Reading from data object, update the DOM\n            var cells = row.anCells;\n    \n            if ( cells ) {\n                if ( colIdx !== undefined ) {\n                    cellWrite( cells[colIdx], colIdx );\n                }\n                else {\n                    for ( i=0, ien=cells.length ; i<ien ; i++ ) {\n                        cellWrite( cells[i], i );\n                    }\n                }\n            }\n        }\n    \n        // For both row and cell invalidation, the cached data for sorting and\n        // filtering is nulled out\n        row._aSortData = null;\n        row._aFilterData = null;\n    \n        // Invalidate the type for a specific column (if given) or all columns since\n        // the data might have changed\n        var cols = settings.aoColumns;\n        if ( colIdx !== undefined ) {\n            cols[ colIdx ].sType = null;\n        }\n        else {\n            for ( i=0, ien=cols.length ; i<ien ; i++ ) {\n                cols[i].sType = null;\n            }\n    \n            // Update DataTables special `DT_*` attributes for the row\n            _fnRowAttributes( settings, row );\n        }\n    }\n    \n    \n    /**\n     * Build a data source object from an HTML row, reading the contents of the\n     * cells that are in the row.\n     *\n     * @param {object} settings DataTables settings object\n     * @param {node|object} TR element from which to read data or existing row\n     *   object from which to re-read the data from the cells\n     * @param {int} [colIdx] Optional column index\n     * @param {array|object} [d] Data source object. If `colIdx` is given then this\n     *   parameter should also be given and will be used to write the data into.\n     *   Only the column in question will be written\n     * @returns {object} Object with two parameters: `data` the data read, in\n     *   document order, and `cells` and array of nodes (they can be useful to the\n     *   caller, so rather than needing a second traversal to get them, just return\n     *   them from here).\n     * @memberof DataTable#oApi\n     */\n    function _fnGetRowElements( settings, row, colIdx, d )\n    {\n        var\n            tds = [],\n            td = row.firstChild,\n            name, col, o, i=0, contents,\n            columns = settings.aoColumns,\n            objectRead = settings._rowReadObject;\n    \n        // Allow the data object to be passed in, or construct\n        d = d !== undefined ?\n            d :\n            objectRead ?\n                {} :\n                [];\n    \n        var attr = function ( str, td  ) {\n            if ( typeof str === 'string' ) {\n                var idx = str.indexOf('@');\n    \n                if ( idx !== -1 ) {\n                    var attr = str.substring( idx+1 );\n                    var setter = _fnSetObjectDataFn( str );\n                    setter( d, td.getAttribute( attr ) );\n                }\n            }\n        };\n    \n        // Read data from a cell and store into the data object\n        var cellProcess = function ( cell ) {\n            if ( colIdx === undefined || colIdx === i ) {\n                col = columns[i];\n                contents = $.trim(cell.innerHTML);\n    \n                if ( col && col._bAttrSrc ) {\n                    var setter = _fnSetObjectDataFn( col.mData._ );\n                    setter( d, contents );\n    \n                    attr( col.mData.sort, cell );\n                    attr( col.mData.type, cell );\n                    attr( col.mData.filter, cell );\n                }\n                else {\n                    // Depending on the `data` option for the columns the data can\n                    // be read to either an object or an array.\n                    if ( objectRead ) {\n                        if ( ! col._setter ) {\n                            // Cache the setter function\n                            col._setter = _fnSetObjectDataFn( col.mData );\n                        }\n                        col._setter( d, contents );\n                    }\n                    else {\n                        d[i] = contents;\n                    }\n                }\n            }\n    \n            i++;\n        };\n    \n        if ( td ) {\n            // `tr` element was passed in\n            while ( td ) {\n                name = td.nodeName.toUpperCase();\n    \n                if ( name == \"TD\" || name == \"TH\" ) {\n                    cellProcess( td );\n                    tds.push( td );\n                }\n    \n                td = td.nextSibling;\n            }\n        }\n        else {\n            // Existing row object passed in\n            tds = row.anCells;\n    \n            for ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n                cellProcess( tds[j] );\n            }\n        }\n    \n        // Read the ID from the DOM if present\n        var rowNode = row.firstChild ? row : row.nTr;\n    \n        if ( rowNode ) {\n            var id = rowNode.getAttribute( 'id' );\n    \n            if ( id ) {\n                _fnSetObjectDataFn( settings.rowId )( d, id );\n            }\n        }\n    \n        return {\n            data: d,\n            cells: tds\n        };\n    }\n    /**\n     * Create a new TR element (and it's TD children) for a row\n     *  @param {object} oSettings dataTables settings object\n     *  @param {int} iRow Row to consider\n     *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n     *    DataTables will create a row automatically\n     *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n     *    if nTr is.\n     *  @memberof DataTable#oApi\n     */\n    function _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n    {\n        var\n            row = oSettings.aoData[iRow],\n            rowData = row._aData,\n            cells = [],\n            nTr, nTd, oCol,\n            i, iLen;\n    \n        if ( row.nTr === null )\n        {\n            nTr = nTrIn || document.createElement('tr');\n    \n            row.nTr = nTr;\n            row.anCells = cells;\n    \n            /* Use a private property on the node to allow reserve mapping from the node\n             * to the aoData array for fast look up\n             */\n            nTr._DT_RowIndex = iRow;\n    \n            /* Special parameters can be given by the data source to be used on the row */\n            _fnRowAttributes( oSettings, row );\n    \n            /* Process each column */\n            for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n            {\n                oCol = oSettings.aoColumns[i];\n    \n                nTd = nTrIn ? anTds[i] : document.createElement( oCol.sCellType );\n                nTd._DT_CellIndex = {\n                    row: iRow,\n                    column: i\n                };\n                \n                cells.push( nTd );\n    \n                // Need to create the HTML if new, or if a rendering function is defined\n                if ( (!nTrIn || oCol.mRender || oCol.mData !== i) &&\n                     (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n                ) {\n                    nTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\n                }\n    \n                /* Add user defined class */\n                if ( oCol.sClass )\n                {\n                    nTd.className += ' '+oCol.sClass;\n                }\n    \n                // Visibility - add or remove as required\n                if ( oCol.bVisible && ! nTrIn )\n                {\n                    nTr.appendChild( nTd );\n                }\n                else if ( ! oCol.bVisible && nTrIn )\n                {\n                    nTd.parentNode.removeChild( nTd );\n                }\n    \n                if ( oCol.fnCreatedCell )\n                {\n                    oCol.fnCreatedCell.call( oSettings.oInstance,\n                        nTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n                    );\n                }\n            }\n    \n            _fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow] );\n        }\n    \n        // Remove once webkit bug 131819 and Chromium bug 365619 have been resolved\n        // and deployed\n        row.nTr.setAttribute( 'role', 'row' );\n    }\n    \n    \n    /**\n     * Add attributes to a row based on the special `DT_*` parameters in a data\n     * source object.\n     *  @param {object} settings DataTables settings object\n     *  @param {object} DataTables row object for the row to be modified\n     *  @memberof DataTable#oApi\n     */\n    function _fnRowAttributes( settings, row )\n    {\n        var tr = row.nTr;\n        var data = row._aData;\n    \n        if ( tr ) {\n            var id = settings.rowIdFn( data );\n    \n            if ( id ) {\n                tr.id = id;\n            }\n    \n            if ( data.DT_RowClass ) {\n                // Remove any classes added by DT_RowClass before\n                var a = data.DT_RowClass.split(' ');\n                row.__rowc = row.__rowc ?\n                    _unique( row.__rowc.concat( a ) ) :\n                    a;\n    \n                $(tr)\n                    .removeClass( row.__rowc.join(' ') )\n                    .addClass( data.DT_RowClass );\n            }\n    \n            if ( data.DT_RowAttr ) {\n                $(tr).attr( data.DT_RowAttr );\n            }\n    \n            if ( data.DT_RowData ) {\n                $(tr).data( data.DT_RowData );\n            }\n        }\n    }\n    \n    \n    /**\n     * Create the HTML header for the table\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnBuildHead( oSettings )\n    {\n        var i, ien, cell, row, column;\n        var thead = oSettings.nTHead;\n        var tfoot = oSettings.nTFoot;\n        var createHeader = $('th, td', thead).length === 0;\n        var classes = oSettings.oClasses;\n        var columns = oSettings.aoColumns;\n    \n        if ( createHeader ) {\n            row = $('<tr/>').appendTo( thead );\n        }\n    \n        for ( i=0, ien=columns.length ; i<ien ; i++ ) {\n            column = columns[i];\n            cell = $( column.nTh ).addClass( column.sClass );\n    \n            if ( createHeader ) {\n                cell.appendTo( row );\n            }\n    \n            // 1.11 move into sorting\n            if ( oSettings.oFeatures.bSort ) {\n                cell.addClass( column.sSortingClass );\n    \n                if ( column.bSortable !== false ) {\n                    cell\n                        .attr( 'tabindex', oSettings.iTabIndex )\n                        .attr( 'aria-controls', oSettings.sTableId );\n    \n                    _fnSortAttachListener( oSettings, column.nTh, i );\n                }\n            }\n    \n            if ( column.sTitle != cell[0].innerHTML ) {\n                cell.html( column.sTitle );\n            }\n    \n            _fnRenderer( oSettings, 'header' )(\n                oSettings, cell, column, classes\n            );\n        }\n    \n        if ( createHeader ) {\n            _fnDetectHeader( oSettings.aoHeader, thead );\n        }\n        \n        /* ARIA role for the rows */\n        $(thead).find('>tr').attr('role', 'row');\n    \n        /* Deal with the footer - add classes if required */\n        $(thead).find('>tr>th, >tr>td').addClass( classes.sHeaderTH );\n        $(tfoot).find('>tr>th, >tr>td').addClass( classes.sFooterTH );\n    \n        // Cache the footer cells. Note that we only take the cells from the first\n        // row in the footer. If there is more than one row the user wants to\n        // interact with, they need to use the table().foot() method. Note also this\n        // allows cells to be used for multiple columns using colspan\n        if ( tfoot !== null ) {\n            var cells = oSettings.aoFooter[0];\n    \n            for ( i=0, ien=cells.length ; i<ien ; i++ ) {\n                column = columns[i];\n                column.nTf = cells[i].cell;\n    \n                if ( column.sClass ) {\n                    $(column.nTf).addClass( column.sClass );\n                }\n            }\n        }\n    }\n    \n    \n    /**\n     * Draw the header (or footer) element based on the column visibility states. The\n     * methodology here is to use the layout array from _fnDetectHeader, modified for\n     * the instantaneous column visibility, to construct the new layout. The grid is\n     * traversed over cell at a time in a rows x columns grid fashion, although each\n     * cell insert can cover multiple elements in the grid - which is tracks using the\n     * aApplied array. Cell inserts in the grid will only occur where there isn't\n     * already a cell in that position.\n     *  @param {object} oSettings dataTables settings object\n     *  @param array {objects} aoSource Layout array from _fnDetectHeader\n     *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n     *  @memberof DataTable#oApi\n     */\n    function _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n    {\n        var i, iLen, j, jLen, k, kLen, n, nLocalTr;\n        var aoLocal = [];\n        var aApplied = [];\n        var iColumns = oSettings.aoColumns.length;\n        var iRowspan, iColspan;\n    \n        if ( ! aoSource )\n        {\n            return;\n        }\n    \n        if (  bIncludeHidden === undefined )\n        {\n            bIncludeHidden = false;\n        }\n    \n        /* Make a copy of the master layout array, but without the visible columns in it */\n        for ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n        {\n            aoLocal[i] = aoSource[i].slice();\n            aoLocal[i].nTr = aoSource[i].nTr;\n    \n            /* Remove any columns which are currently hidden */\n            for ( j=iColumns-1 ; j>=0 ; j-- )\n            {\n                if ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n                {\n                    aoLocal[i].splice( j, 1 );\n                }\n            }\n    \n            /* Prep the applied array - it needs an element for each row */\n            aApplied.push( [] );\n        }\n    \n        for ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n        {\n            nLocalTr = aoLocal[i].nTr;\n    \n            /* All cells are going to be replaced, so empty out the row */\n            if ( nLocalTr )\n            {\n                while( (n = nLocalTr.firstChild) )\n                {\n                    nLocalTr.removeChild( n );\n                }\n            }\n    \n            for ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n            {\n                iRowspan = 1;\n                iColspan = 1;\n    \n                /* Check to see if there is already a cell (row/colspan) covering our target\n                 * insert point. If there is, then there is nothing to do.\n                 */\n                if ( aApplied[i][j] === undefined )\n                {\n                    nLocalTr.appendChild( aoLocal[i][j].cell );\n                    aApplied[i][j] = 1;\n    \n                    /* Expand the cell to cover as many rows as needed */\n                    while ( aoLocal[i+iRowspan] !== undefined &&\n                            aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n                    {\n                        aApplied[i+iRowspan][j] = 1;\n                        iRowspan++;\n                    }\n    \n                    /* Expand the cell to cover as many columns as needed */\n                    while ( aoLocal[i][j+iColspan] !== undefined &&\n                            aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n                    {\n                        /* Must update the applied array over the rows for the columns */\n                        for ( k=0 ; k<iRowspan ; k++ )\n                        {\n                            aApplied[i+k][j+iColspan] = 1;\n                        }\n                        iColspan++;\n                    }\n    \n                    /* Do the actual expansion in the DOM */\n                    $(aoLocal[i][j].cell)\n                        .attr('rowspan', iRowspan)\n                        .attr('colspan', iColspan);\n                }\n            }\n        }\n    }\n    \n    \n    /**\n     * Insert the required TR nodes into the table for display\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnDraw( oSettings )\n    {\n        /* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n        var aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n        if ( $.inArray( false, aPreDraw ) !== -1 )\n        {\n            _fnProcessingDisplay( oSettings, false );\n            return;\n        }\n    \n        var i, iLen, n;\n        var anRows = [];\n        var iRowCount = 0;\n        var asStripeClasses = oSettings.asStripeClasses;\n        var iStripes = asStripeClasses.length;\n        var iOpenRows = oSettings.aoOpenRows.length;\n        var oLang = oSettings.oLanguage;\n        var iInitDisplayStart = oSettings.iInitDisplayStart;\n        var bServerSide = _fnDataSource( oSettings ) == 'ssp';\n        var aiDisplay = oSettings.aiDisplay;\n    \n        oSettings.bDrawing = true;\n    \n        /* Check and see if we have an initial draw position from state saving */\n        if ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n        {\n            oSettings._iDisplayStart = bServerSide ?\n                iInitDisplayStart :\n                iInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n                    0 :\n                    iInitDisplayStart;\n    \n            oSettings.iInitDisplayStart = -1;\n        }\n    \n        var iDisplayStart = oSettings._iDisplayStart;\n        var iDisplayEnd = oSettings.fnDisplayEnd();\n    \n        /* Server-side processing draw intercept */\n        if ( oSettings.bDeferLoading )\n        {\n            oSettings.bDeferLoading = false;\n            oSettings.iDraw++;\n            _fnProcessingDisplay( oSettings, false );\n        }\n        else if ( !bServerSide )\n        {\n            oSettings.iDraw++;\n        }\n        else if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )\n        {\n            return;\n        }\n    \n        if ( aiDisplay.length !== 0 )\n        {\n            var iStart = bServerSide ? 0 : iDisplayStart;\n            var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n    \n            for ( var j=iStart ; j<iEnd ; j++ )\n            {\n                var iDataIndex = aiDisplay[j];\n                var aoData = oSettings.aoData[ iDataIndex ];\n                if ( aoData.nTr === null )\n                {\n                    _fnCreateTr( oSettings, iDataIndex );\n                }\n    \n                var nRow = aoData.nTr;\n    \n                /* Remove the old striping classes and then add the new one */\n                if ( iStripes !== 0 )\n                {\n                    var sStripe = asStripeClasses[ iRowCount % iStripes ];\n                    if ( aoData._sRowStripe != sStripe )\n                    {\n                        $(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n                        aoData._sRowStripe = sStripe;\n                    }\n                }\n    \n                // Row callback functions - might want to manipulate the row\n                // iRowCount and j are not currently documented. Are they at all\n                // useful?\n                _fnCallbackFire( oSettings, 'aoRowCallback', null,\n                    [nRow, aoData._aData, iRowCount, j] );\n    \n                anRows.push( nRow );\n                iRowCount++;\n            }\n        }\n        else\n        {\n            /* Table is empty - create a row with an empty message in it */\n            var sZero = oLang.sZeroRecords;\n            if ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\n            {\n                sZero = oLang.sLoadingRecords;\n            }\n            else if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n            {\n                sZero = oLang.sEmptyTable;\n            }\n    \n            anRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\n                .append( $('<td />', {\n                    'valign':  'top',\n                    'colSpan': _fnVisbleColumns( oSettings ),\n                    'class':   oSettings.oClasses.sRowEmpty\n                } ).html( sZero ) )[0];\n        }\n    \n        /* Header and footer callbacks */\n        _fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n            _fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n    \n        _fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n            _fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n    \n        var body = $(oSettings.nTBody);\n    \n        body.children().detach();\n        body.append( $(anRows) );\n    \n        /* Call all required callback functions for the end of a draw */\n        _fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n    \n        /* Draw is complete, sorting and filtering must be as well */\n        oSettings.bSorted = false;\n        oSettings.bFiltered = false;\n        oSettings.bDrawing = false;\n    }\n    \n    \n    /**\n     * Redraw the table - taking account of the various features which are enabled\n     *  @param {object} oSettings dataTables settings object\n     *  @param {boolean} [holdPosition] Keep the current paging position. By default\n     *    the paging is reset to the first page\n     *  @memberof DataTable#oApi\n     */\n    function _fnReDraw( settings, holdPosition )\n    {\n        var\n            features = settings.oFeatures,\n            sort     = features.bSort,\n            filter   = features.bFilter;\n    \n        if ( sort ) {\n            _fnSort( settings );\n        }\n    \n        if ( filter ) {\n            _fnFilterComplete( settings, settings.oPreviousSearch );\n        }\n        else {\n            // No filtering, so we want to just use the display master\n            settings.aiDisplay = settings.aiDisplayMaster.slice();\n        }\n    \n        if ( holdPosition !== true ) {\n            settings._iDisplayStart = 0;\n        }\n    \n        // Let any modules know about the draw hold position state (used by\n        // scrolling internally)\n        settings._drawHold = holdPosition;\n    \n        _fnDraw( settings );\n    \n        settings._drawHold = false;\n    }\n    \n    \n    /**\n     * Add the options to the page HTML for the table\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnAddOptionsHtml ( oSettings )\n    {\n        var classes = oSettings.oClasses;\n        var table = $(oSettings.nTable);\n        var holding = $('<div/>').insertBefore( table ); // Holding element for speed\n        var features = oSettings.oFeatures;\n    \n        // All DataTables are wrapped in a div\n        var insert = $('<div/>', {\n            id:      oSettings.sTableId+'_wrapper',\n            'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\n        } );\n    \n        oSettings.nHolding = holding[0];\n        oSettings.nTableWrapper = insert[0];\n        oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n    \n        /* Loop over the user set positioning and place the elements as needed */\n        var aDom = oSettings.sDom.split('');\n        var featureNode, cOption, nNewNode, cNext, sAttr, j;\n        for ( var i=0 ; i<aDom.length ; i++ )\n        {\n            featureNode = null;\n            cOption = aDom[i];\n    \n            if ( cOption == '<' )\n            {\n                /* New container div */\n                nNewNode = $('<div/>')[0];\n    \n                /* Check to see if we should append an id and/or a class name to the container */\n                cNext = aDom[i+1];\n                if ( cNext == \"'\" || cNext == '\"' )\n                {\n                    sAttr = \"\";\n                    j = 2;\n                    while ( aDom[i+j] != cNext )\n                    {\n                        sAttr += aDom[i+j];\n                        j++;\n                    }\n    \n                    /* Replace jQuery UI constants @todo depreciated */\n                    if ( sAttr == \"H\" )\n                    {\n                        sAttr = classes.sJUIHeader;\n                    }\n                    else if ( sAttr == \"F\" )\n                    {\n                        sAttr = classes.sJUIFooter;\n                    }\n    \n                    /* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n                     * breaks the string into parts and applies them as needed\n                     */\n                    if ( sAttr.indexOf('.') != -1 )\n                    {\n                        var aSplit = sAttr.split('.');\n                        nNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n                        nNewNode.className = aSplit[1];\n                    }\n                    else if ( sAttr.charAt(0) == \"#\" )\n                    {\n                        nNewNode.id = sAttr.substr(1, sAttr.length-1);\n                    }\n                    else\n                    {\n                        nNewNode.className = sAttr;\n                    }\n    \n                    i += j; /* Move along the position array */\n                }\n    \n                insert.append( nNewNode );\n                insert = $(nNewNode);\n            }\n            else if ( cOption == '>' )\n            {\n                /* End container div */\n                insert = insert.parent();\n            }\n            // @todo Move options into their own plugins?\n            else if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\n            {\n                /* Length */\n                featureNode = _fnFeatureHtmlLength( oSettings );\n            }\n            else if ( cOption == 'f' && features.bFilter )\n            {\n                /* Filter */\n                featureNode = _fnFeatureHtmlFilter( oSettings );\n            }\n            else if ( cOption == 'r' && features.bProcessing )\n            {\n                /* pRocessing */\n                featureNode = _fnFeatureHtmlProcessing( oSettings );\n            }\n            else if ( cOption == 't' )\n            {\n                /* Table */\n                featureNode = _fnFeatureHtmlTable( oSettings );\n            }\n            else if ( cOption ==  'i' && features.bInfo )\n            {\n                /* Info */\n                featureNode = _fnFeatureHtmlInfo( oSettings );\n            }\n            else if ( cOption == 'p' && features.bPaginate )\n            {\n                /* Pagination */\n                featureNode = _fnFeatureHtmlPaginate( oSettings );\n            }\n            else if ( DataTable.ext.feature.length !== 0 )\n            {\n                /* Plug-in features */\n                var aoFeatures = DataTable.ext.feature;\n                for ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n                {\n                    if ( cOption == aoFeatures[k].cFeature )\n                    {\n                        featureNode = aoFeatures[k].fnInit( oSettings );\n                        break;\n                    }\n                }\n            }\n    \n            /* Add to the 2D features array */\n            if ( featureNode )\n            {\n                var aanFeatures = oSettings.aanFeatures;\n    \n                if ( ! aanFeatures[cOption] )\n                {\n                    aanFeatures[cOption] = [];\n                }\n    \n                aanFeatures[cOption].push( featureNode );\n                insert.append( featureNode );\n            }\n        }\n    \n        /* Built our DOM structure - replace the holding div with what we want */\n        holding.replaceWith( insert );\n        oSettings.nHolding = null;\n    }\n    \n    \n    /**\n     * Use the DOM source to create up an array of header cells. The idea here is to\n     * create a layout grid (array) of rows x columns, which contains a reference\n     * to the cell that that point in the grid (regardless of col/rowspan), such that\n     * any column / row could be removed and the new grid constructed\n     *  @param array {object} aLayout Array to store the calculated layout in\n     *  @param {node} nThead The header/footer element for the table\n     *  @memberof DataTable#oApi\n     */\n    function _fnDetectHeader ( aLayout, nThead )\n    {\n        var nTrs = $(nThead).children('tr');\n        var nTr, nCell;\n        var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n        var bUnique;\n        var fnShiftCol = function ( a, i, j ) {\n            var k = a[i];\n                    while ( k[j] ) {\n                j++;\n            }\n            return j;\n        };\n    \n        aLayout.splice( 0, aLayout.length );\n    \n        /* We know how many rows there are in the layout - so prep it */\n        for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n        {\n            aLayout.push( [] );\n        }\n    \n        /* Calculate a layout array */\n        for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n        {\n            nTr = nTrs[i];\n            iColumn = 0;\n    \n            /* For every cell in the row... */\n            nCell = nTr.firstChild;\n            while ( nCell ) {\n                if ( nCell.nodeName.toUpperCase() == \"TD\" ||\n                     nCell.nodeName.toUpperCase() == \"TH\" )\n                {\n                    /* Get the col and rowspan attributes from the DOM and sanitise them */\n                    iColspan = nCell.getAttribute('colspan') * 1;\n                    iRowspan = nCell.getAttribute('rowspan') * 1;\n                    iColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n                    iRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n    \n                    /* There might be colspan cells already in this row, so shift our target\n                     * accordingly\n                     */\n                    iColShifted = fnShiftCol( aLayout, i, iColumn );\n    \n                    /* Cache calculation for unique columns */\n                    bUnique = iColspan === 1 ? true : false;\n    \n                    /* If there is col / rowspan, copy the information into the layout grid */\n                    for ( l=0 ; l<iColspan ; l++ )\n                    {\n                        for ( k=0 ; k<iRowspan ; k++ )\n                        {\n                            aLayout[i+k][iColShifted+l] = {\n                                \"cell\": nCell,\n                                \"unique\": bUnique\n                            };\n                            aLayout[i+k].nTr = nTr;\n                        }\n                    }\n                }\n                nCell = nCell.nextSibling;\n            }\n        }\n    }\n    \n    \n    /**\n     * Get an array of unique th elements, one for each column\n     *  @param {object} oSettings dataTables settings object\n     *  @param {node} nHeader automatically detect the layout from this node - optional\n     *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n     *  @returns array {node} aReturn list of unique th's\n     *  @memberof DataTable#oApi\n     */\n    function _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n    {\n        var aReturn = [];\n        if ( !aLayout )\n        {\n            aLayout = oSettings.aoHeader;\n            if ( nHeader )\n            {\n                aLayout = [];\n                _fnDetectHeader( aLayout, nHeader );\n            }\n        }\n    \n        for ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n        {\n            for ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n            {\n                if ( aLayout[i][j].unique &&\n                     (!aReturn[j] || !oSettings.bSortCellsTop) )\n                {\n                    aReturn[j] = aLayout[i][j].cell;\n                }\n            }\n        }\n    \n        return aReturn;\n    }\n    \n    /**\n     * Create an Ajax call based on the table's settings, taking into account that\n     * parameters can have multiple forms, and backwards compatibility.\n     *\n     * @param {object} oSettings dataTables settings object\n     * @param {array} data Data to send to the server, required by\n     *     DataTables - may be augmented by developer callbacks\n     * @param {function} fn Callback function to run when data is obtained\n     */\n    function _fnBuildAjax( oSettings, data, fn )\n    {\n        // Compatibility with 1.9-, allow fnServerData and event to manipulate\n        _fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\n    \n        // Convert to object based for 1.10+ if using the old array scheme which can\n        // come from server-side processing or serverParams\n        if ( data && $.isArray(data) ) {\n            var tmp = {};\n            var rbracket = /(.*?)\\[\\]$/;\n    \n            $.each( data, function (key, val) {\n                var match = val.name.match(rbracket);\n    \n                if ( match ) {\n                    // Support for arrays\n                    var name = match[0];\n    \n                    if ( ! tmp[ name ] ) {\n                        tmp[ name ] = [];\n                    }\n                    tmp[ name ].push( val.value );\n                }\n                else {\n                    tmp[val.name] = val.value;\n                }\n            } );\n            data = tmp;\n        }\n    \n        var ajaxData;\n        var ajax = oSettings.ajax;\n        var instance = oSettings.oInstance;\n        var callback = function ( json ) {\n            _fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\n            fn( json );\n        };\n    \n        if ( $.isPlainObject( ajax ) && ajax.data )\n        {\n            ajaxData = ajax.data;\n    \n            var newData = $.isFunction( ajaxData ) ?\n                ajaxData( data, oSettings ) :  // fn can manipulate data or return\n                ajaxData;                      // an object object or array to merge\n    \n            // If the function returned something, use that alone\n            data = $.isFunction( ajaxData ) && newData ?\n                newData :\n                $.extend( true, data, newData );\n    \n            // Remove the data property as we've resolved it already and don't want\n            // jQuery to do it again (it is restored at the end of the function)\n            delete ajax.data;\n        }\n    \n        var baseAjax = {\n            \"data\": data,\n            \"success\": function (json) {\n                var error = json.error || json.sError;\n                if ( error ) {\n                    _fnLog( oSettings, 0, error );\n                }\n    \n                oSettings.json = json;\n                callback( json );\n            },\n            \"dataType\": \"json\",\n            \"cache\": false,\n            \"type\": oSettings.sServerMethod,\n            \"error\": function (xhr, error, thrown) {\n                var ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\n    \n                if ( $.inArray( true, ret ) === -1 ) {\n                    if ( error == \"parsererror\" ) {\n                        _fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n                    }\n                    else if ( xhr.readyState === 4 ) {\n                        _fnLog( oSettings, 0, 'Ajax error', 7 );\n                    }\n                }\n    \n                _fnProcessingDisplay( oSettings, false );\n            }\n        };\n    \n        // Store the data submitted for the API\n        oSettings.oAjaxData = data;\n    \n        // Allow plug-ins and external processes to modify the data\n        _fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\n    \n        if ( oSettings.fnServerData )\n        {\n            // DataTables 1.9- compatibility\n            oSettings.fnServerData.call( instance,\n                oSettings.sAjaxSource,\n                $.map( data, function (val, key) { // Need to convert back to 1.9 trad format\n                    return { name: key, value: val };\n                } ),\n                callback,\n                oSettings\n            );\n        }\n        else if ( oSettings.sAjaxSource || typeof ajax === 'string' )\n        {\n            // DataTables 1.9- compatibility\n            oSettings.jqXHR = $.ajax( $.extend( baseAjax, {\n                url: ajax || oSettings.sAjaxSource\n            } ) );\n        }\n        else if ( $.isFunction( ajax ) )\n        {\n            // Is a function - let the caller define what needs to be done\n            oSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n        }\n        else\n        {\n            // Object to extend the base settings\n            oSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\n    \n            // Restore for next time around\n            ajax.data = ajaxData;\n        }\n    }\n    \n    \n    /**\n     * Update the table using an Ajax call\n     *  @param {object} settings dataTables settings object\n     *  @returns {boolean} Block the table drawing or not\n     *  @memberof DataTable#oApi\n     */\n    function _fnAjaxUpdate( settings )\n    {\n        if ( settings.bAjaxDataGet ) {\n            settings.iDraw++;\n            _fnProcessingDisplay( settings, true );\n    \n            _fnBuildAjax(\n                settings,\n                _fnAjaxParameters( settings ),\n                function(json) {\n                    _fnAjaxUpdateDraw( settings, json );\n                }\n            );\n    \n            return false;\n        }\n        return true;\n    }\n    \n    \n    /**\n     * Build up the parameters in an object needed for a server-side processing\n     * request. Note that this is basically done twice, is different ways - a modern\n     * method which is used by default in DataTables 1.10 which uses objects and\n     * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n     * the sAjaxSource option is used in the initialisation, or the legacyAjax\n     * option is set.\n     *  @param {object} oSettings dataTables settings object\n     *  @returns {bool} block the table drawing or not\n     *  @memberof DataTable#oApi\n     */\n    function _fnAjaxParameters( settings )\n    {\n        var\n            columns = settings.aoColumns,\n            columnCount = columns.length,\n            features = settings.oFeatures,\n            preSearch = settings.oPreviousSearch,\n            preColSearch = settings.aoPreSearchCols,\n            i, data = [], dataProp, column, columnSearch,\n            sort = _fnSortFlatten( settings ),\n            displayStart = settings._iDisplayStart,\n            displayLength = features.bPaginate !== false ?\n                settings._iDisplayLength :\n                -1;\n    \n        var param = function ( name, value ) {\n            data.push( { 'name': name, 'value': value } );\n        };\n    \n        // DataTables 1.9- compatible method\n        param( 'sEcho',          settings.iDraw );\n        param( 'iColumns',       columnCount );\n        param( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\n        param( 'iDisplayStart',  displayStart );\n        param( 'iDisplayLength', displayLength );\n    \n        // DataTables 1.10+ method\n        var d = {\n            draw:    settings.iDraw,\n            columns: [],\n            order:   [],\n            start:   displayStart,\n            length:  displayLength,\n            search:  {\n                value: preSearch.sSearch,\n                regex: preSearch.bRegex\n            }\n        };\n    \n        for ( i=0 ; i<columnCount ; i++ ) {\n            column = columns[i];\n            columnSearch = preColSearch[i];\n            dataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\n    \n            d.columns.push( {\n                data:       dataProp,\n                name:       column.sName,\n                searchable: column.bSearchable,\n                orderable:  column.bSortable,\n                search:     {\n                    value: columnSearch.sSearch,\n                    regex: columnSearch.bRegex\n                }\n            } );\n    \n            param( \"mDataProp_\"+i, dataProp );\n    \n            if ( features.bFilter ) {\n                param( 'sSearch_'+i,     columnSearch.sSearch );\n                param( 'bRegex_'+i,      columnSearch.bRegex );\n                param( 'bSearchable_'+i, column.bSearchable );\n            }\n    \n            if ( features.bSort ) {\n                param( 'bSortable_'+i, column.bSortable );\n            }\n        }\n    \n        if ( features.bFilter ) {\n            param( 'sSearch', preSearch.sSearch );\n            param( 'bRegex', preSearch.bRegex );\n        }\n    \n        if ( features.bSort ) {\n            $.each( sort, function ( i, val ) {\n                d.order.push( { column: val.col, dir: val.dir } );\n    \n                param( 'iSortCol_'+i, val.col );\n                param( 'sSortDir_'+i, val.dir );\n            } );\n    \n            param( 'iSortingCols', sort.length );\n        }\n    \n        // If the legacy.ajax parameter is null, then we automatically decide which\n        // form to use, based on sAjaxSource\n        var legacy = DataTable.ext.legacy.ajax;\n        if ( legacy === null ) {\n            return settings.sAjaxSource ? data : d;\n        }\n    \n        // Otherwise, if legacy has been specified then we use that to decide on the\n        // form\n        return legacy ? data : d;\n    }\n    \n    \n    /**\n     * Data the data from the server (nuking the old) and redraw the table\n     *  @param {object} oSettings dataTables settings object\n     *  @param {object} json json data return from the server.\n     *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n     *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n     *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n     *  @param {array} json.aaData The data to display on this page\n     *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n     *  @memberof DataTable#oApi\n     */\n    function _fnAjaxUpdateDraw ( settings, json )\n    {\n        // v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n        // Support both\n        var compat = function ( old, modern ) {\n            return json[old] !== undefined ? json[old] : json[modern];\n        };\n    \n        var data = _fnAjaxDataSrc( settings, json );\n        var draw            = compat( 'sEcho',                'draw' );\n        var recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\n        var recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\n    \n        if ( draw ) {\n            // Protect against out of sequence returns\n            if ( draw*1 < settings.iDraw ) {\n                return;\n            }\n            settings.iDraw = draw * 1;\n        }\n    \n        _fnClearTable( settings );\n        settings._iRecordsTotal   = parseInt(recordsTotal, 10);\n        settings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n    \n        for ( var i=0, ien=data.length ; i<ien ; i++ ) {\n            _fnAddData( settings, data[i] );\n        }\n        settings.aiDisplay = settings.aiDisplayMaster.slice();\n    \n        settings.bAjaxDataGet = false;\n        _fnDraw( settings );\n    \n        if ( ! settings._bInitComplete ) {\n            _fnInitComplete( settings, json );\n        }\n    \n        settings.bAjaxDataGet = true;\n        _fnProcessingDisplay( settings, false );\n    }\n    \n    \n    /**\n     * Get the data from the JSON data source to use for drawing a table. Using\n     * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n     * source object, or from a processing function.\n     *  @param {object} oSettings dataTables settings object\n     *  @param  {object} json Data source object / array from the server\n     *  @return {array} Array of data to use\n     */\n    function _fnAjaxDataSrc ( oSettings, json )\n    {\n        var dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\n            oSettings.ajax.dataSrc :\n            oSettings.sAjaxDataProp; // Compatibility with 1.9-.\n    \n        // Compatibility with 1.9-. In order to read from aaData, check if the\n        // default has been changed, if not, check for aaData\n        if ( dataSrc === 'data' ) {\n            return json.aaData || json[dataSrc];\n        }\n    \n        return dataSrc !== \"\" ?\n            _fnGetObjectDataFn( dataSrc )( json ) :\n            json;\n    }\n    \n    /**\n     * Generate the node required for filtering text\n     *  @returns {node} Filter control element\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnFeatureHtmlFilter ( settings )\n    {\n        var classes = settings.oClasses;\n        var tableId = settings.sTableId;\n        var language = settings.oLanguage;\n        var previousSearch = settings.oPreviousSearch;\n        var features = settings.aanFeatures;\n        var input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\n    \n        var str = language.sSearch;\n        str = str.match(/_INPUT_/) ?\n            str.replace('_INPUT_', input) :\n            str+input;\n    \n        var filter = $('<div/>', {\n                'id': ! features.f ? tableId+'_filter' : null,\n                'class': classes.sFilter\n            } )\n            .append( $('<label/>' ).append( str ) );\n    \n        var searchFn = function() {\n            /* Update all other filter input elements for the new display */\n            var n = features.f;\n            var val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n    \n            /* Now do the filter */\n            if ( val != previousSearch.sSearch ) {\n                _fnFilterComplete( settings, {\n                    \"sSearch\": val,\n                    \"bRegex\": previousSearch.bRegex,\n                    \"bSmart\": previousSearch.bSmart ,\n                    \"bCaseInsensitive\": previousSearch.bCaseInsensitive\n                } );\n    \n                // Need to redraw, without resorting\n                settings._iDisplayStart = 0;\n                _fnDraw( settings );\n            }\n        };\n    \n        var searchDelay = settings.searchDelay !== null ?\n            settings.searchDelay :\n            _fnDataSource( settings ) === 'ssp' ?\n                400 :\n                0;\n    \n        var jqFilter = $('input', filter)\n            .val( previousSearch.sSearch )\n            .attr( 'placeholder', language.sSearchPlaceholder )\n            .on(\n                'keyup.DT search.DT input.DT paste.DT cut.DT',\n                searchDelay ?\n                    _fnThrottle( searchFn, searchDelay ) :\n                    searchFn\n            )\n            .on( 'keypress.DT', function(e) {\n                /* Prevent form submission */\n                if ( e.keyCode == 13 ) {\n                    return false;\n                }\n            } )\n            .attr('aria-controls', tableId);\n    \n        // Update the input elements whenever the table is filtered\n        $(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n            if ( settings === s ) {\n                // IE9 throws an 'unknown error' if document.activeElement is used\n                // inside an iframe or frame...\n                try {\n                    if ( jqFilter[0] !== document.activeElement ) {\n                        jqFilter.val( previousSearch.sSearch );\n                    }\n                }\n                catch ( e ) {}\n            }\n        } );\n    \n        return filter[0];\n    }\n    \n    \n    /**\n     * Filter the table using both the global filter and column based filtering\n     *  @param {object} oSettings dataTables settings object\n     *  @param {object} oSearch search information\n     *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n     *  @memberof DataTable#oApi\n     */\n    function _fnFilterComplete ( oSettings, oInput, iForce )\n    {\n        var oPrevSearch = oSettings.oPreviousSearch;\n        var aoPrevSearch = oSettings.aoPreSearchCols;\n        var fnSaveFilter = function ( oFilter ) {\n            /* Save the filtering values */\n            oPrevSearch.sSearch = oFilter.sSearch;\n            oPrevSearch.bRegex = oFilter.bRegex;\n            oPrevSearch.bSmart = oFilter.bSmart;\n            oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n        };\n        var fnRegex = function ( o ) {\n            // Backwards compatibility with the bEscapeRegex option\n            return o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n        };\n    \n        // Resolve any column types that are unknown due to addition or invalidation\n        // @todo As per sort - can this be moved into an event handler?\n        _fnColumnTypes( oSettings );\n    \n        /* In server-side processing all filtering is done by the server, so no point hanging around here */\n        if ( _fnDataSource( oSettings ) != 'ssp' )\n        {\n            /* Global filter */\n            _fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );\n            fnSaveFilter( oInput );\n    \n            /* Now do the individual column filter */\n            for ( var i=0 ; i<aoPrevSearch.length ; i++ )\n            {\n                _fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n                    aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n            }\n    \n            /* Custom filtering */\n            _fnFilterCustom( oSettings );\n        }\n        else\n        {\n            fnSaveFilter( oInput );\n        }\n    \n        /* Tell the draw function we have been filtering */\n        oSettings.bFiltered = true;\n        _fnCallbackFire( oSettings, null, 'search', [oSettings] );\n    }\n    \n    \n    /**\n     * Apply custom filtering functions\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnFilterCustom( settings )\n    {\n        var filters = DataTable.ext.search;\n        var displayRows = settings.aiDisplay;\n        var row, rowIdx;\n    \n        for ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n            var rows = [];\n    \n            // Loop over each row and see if it should be included\n            for ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n                rowIdx = displayRows[ j ];\n                row = settings.aoData[ rowIdx ];\n    \n                if ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n                    rows.push( rowIdx );\n                }\n            }\n    \n            // So the array reference doesn't break set the results into the\n            // existing array\n            displayRows.length = 0;\n            $.merge( displayRows, rows );\n        }\n    }\n    \n    \n    /**\n     * Filter the table on a per-column basis\n     *  @param {object} oSettings dataTables settings object\n     *  @param {string} sInput string to filter on\n     *  @param {int} iColumn column to filter\n     *  @param {bool} bRegex treat search string as a regular expression or not\n     *  @param {bool} bSmart use smart filtering or not\n     *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n     *  @memberof DataTable#oApi\n     */\n    function _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\n    {\n        if ( searchStr === '' ) {\n            return;\n        }\n    \n        var data;\n        var out = [];\n        var display = settings.aiDisplay;\n        var rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\n    \n        for ( var i=0 ; i<display.length ; i++ ) {\n            data = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n    \n            if ( rpSearch.test( data ) ) {\n                out.push( display[i] );\n            }\n        }\n    \n        settings.aiDisplay = out;\n    }\n    \n    \n    /**\n     * Filter the data table based on user input and draw the table\n     *  @param {object} settings dataTables settings object\n     *  @param {string} input string to filter on\n     *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n     *  @param {bool} regex treat as a regular expression or not\n     *  @param {bool} smart perform smart filtering or not\n     *  @param {bool} caseInsensitive Do case insenstive matching or not\n     *  @memberof DataTable#oApi\n     */\n    function _fnFilter( settings, input, force, regex, smart, caseInsensitive )\n    {\n        var rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\n        var prevSearch = settings.oPreviousSearch.sSearch;\n        var displayMaster = settings.aiDisplayMaster;\n        var display, invalidated, i;\n        var filtered = [];\n    \n        // Need to take account of custom filtering functions - always filter\n        if ( DataTable.ext.search.length !== 0 ) {\n            force = true;\n        }\n    \n        // Check if any of the rows were invalidated\n        invalidated = _fnFilterData( settings );\n    \n        // If the input is blank - we just want the full data set\n        if ( input.length <= 0 ) {\n            settings.aiDisplay = displayMaster.slice();\n        }\n        else {\n            // New search - start from the master array\n            if ( invalidated ||\n                 force ||\n                 prevSearch.length > input.length ||\n                 input.indexOf(prevSearch) !== 0 ||\n                 settings.bSorted // On resort, the display master needs to be\n                                  // re-filtered since indexes will have changed\n            ) {\n                settings.aiDisplay = displayMaster.slice();\n            }\n    \n            // Search the display array\n            display = settings.aiDisplay;\n    \n            for ( i=0 ; i<display.length ; i++ ) {\n                if ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\n                    filtered.push( display[i] );\n                }\n            }\n    \n            settings.aiDisplay = filtered;\n        }\n    }\n    \n    \n    /**\n     * Build a regular expression object suitable for searching a table\n     *  @param {string} sSearch string to search for\n     *  @param {bool} bRegex treat as a regular expression or not\n     *  @param {bool} bSmart perform smart filtering or not\n     *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n     *  @returns {RegExp} constructed object\n     *  @memberof DataTable#oApi\n     */\n    function _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\n    {\n        search = regex ?\n            search :\n            _fnEscapeRegex( search );\n        \n        if ( smart ) {\n            /* For smart filtering we want to allow the search to work regardless of\n             * word order. We also want double quoted text to be preserved, so word\n             * order is important - a la google. So this is what we want to\n             * generate:\n             * \n             * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n             */\n            var a = $.map( search.match( /\"[^\"]+\"|[^ ]+/g ) || [''], function ( word ) {\n                if ( word.charAt(0) === '\"' ) {\n                    var m = word.match( /^\"(.*)\"$/ );\n                    word = m ? m[1] : word;\n                }\n    \n                return word.replace('\"', '');\n            } );\n    \n            search = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\n        }\n    \n        return new RegExp( search, caseInsensitive ? 'i' : '' );\n    }\n    \n    \n    /**\n     * Escape a string such that it can be used in a regular expression\n     *  @param {string} sVal string to escape\n     *  @returns {string} escaped string\n     *  @memberof DataTable#oApi\n     */\n    var _fnEscapeRegex = DataTable.util.escapeRegex;\n    \n    var __filter_div = $('<div>')[0];\n    var __filter_div_textContent = __filter_div.textContent !== undefined;\n    \n    // Update the filtering data for each row if needed (by invalidation or first run)\n    function _fnFilterData ( settings )\n    {\n        var columns = settings.aoColumns;\n        var column;\n        var i, j, ien, jen, filterData, cellData, row;\n        var fomatters = DataTable.ext.type.search;\n        var wasInvalidated = false;\n    \n        for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n            row = settings.aoData[i];\n    \n            if ( ! row._aFilterData ) {\n                filterData = [];\n    \n                for ( j=0, jen=columns.length ; j<jen ; j++ ) {\n                    column = columns[j];\n    \n                    if ( column.bSearchable ) {\n                        cellData = _fnGetCellData( settings, i, j, 'filter' );\n    \n                        if ( fomatters[ column.sType ] ) {\n                            cellData = fomatters[ column.sType ]( cellData );\n                        }\n    \n                        // Search in DataTables 1.10 is string based. In 1.11 this\n                        // should be altered to also allow strict type checking.\n                        if ( cellData === null ) {\n                            cellData = '';\n                        }\n    \n                        if ( typeof cellData !== 'string' && cellData.toString ) {\n                            cellData = cellData.toString();\n                        }\n                    }\n                    else {\n                        cellData = '';\n                    }\n    \n                    // If it looks like there is an HTML entity in the string,\n                    // attempt to decode it so sorting works as expected. Note that\n                    // we could use a single line of jQuery to do this, but the DOM\n                    // method used here is much faster http://jsperf.com/html-decode\n                    if ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n                        __filter_div.innerHTML = cellData;\n                        cellData = __filter_div_textContent ?\n                            __filter_div.textContent :\n                            __filter_div.innerText;\n                    }\n    \n                    if ( cellData.replace ) {\n                        cellData = cellData.replace(/[\\r\\n]/g, '');\n                    }\n    \n                    filterData.push( cellData );\n                }\n    \n                row._aFilterData = filterData;\n                row._sFilterRow = filterData.join('  ');\n                wasInvalidated = true;\n            }\n        }\n    \n        return wasInvalidated;\n    }\n    \n    \n    /**\n     * Convert from the internal Hungarian notation to camelCase for external\n     * interaction\n     *  @param {object} obj Object to convert\n     *  @returns {object} Inverted object\n     *  @memberof DataTable#oApi\n     */\n    function _fnSearchToCamel ( obj )\n    {\n        return {\n            search:          obj.sSearch,\n            smart:           obj.bSmart,\n            regex:           obj.bRegex,\n            caseInsensitive: obj.bCaseInsensitive\n        };\n    }\n    \n    \n    \n    /**\n     * Convert from camelCase notation to the internal Hungarian. We could use the\n     * Hungarian convert function here, but this is cleaner\n     *  @param {object} obj Object to convert\n     *  @returns {object} Inverted object\n     *  @memberof DataTable#oApi\n     */\n    function _fnSearchToHung ( obj )\n    {\n        return {\n            sSearch:          obj.search,\n            bSmart:           obj.smart,\n            bRegex:           obj.regex,\n            bCaseInsensitive: obj.caseInsensitive\n        };\n    }\n    \n    /**\n     * Generate the node required for the info display\n     *  @param {object} oSettings dataTables settings object\n     *  @returns {node} Information element\n     *  @memberof DataTable#oApi\n     */\n    function _fnFeatureHtmlInfo ( settings )\n    {\n        var\n            tid = settings.sTableId,\n            nodes = settings.aanFeatures.i,\n            n = $('<div/>', {\n                'class': settings.oClasses.sInfo,\n                'id': ! nodes ? tid+'_info' : null\n            } );\n    \n        if ( ! nodes ) {\n            // Update display on each draw\n            settings.aoDrawCallback.push( {\n                \"fn\": _fnUpdateInfo,\n                \"sName\": \"information\"\n            } );\n    \n            n\n                .attr( 'role', 'status' )\n                .attr( 'aria-live', 'polite' );\n    \n            // Table is described by our info div\n            $(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n        }\n    \n        return n[0];\n    }\n    \n    \n    /**\n     * Update the information elements in the display\n     *  @param {object} settings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnUpdateInfo ( settings )\n    {\n        /* Show information about the table */\n        var nodes = settings.aanFeatures.i;\n        if ( nodes.length === 0 ) {\n            return;\n        }\n    \n        var\n            lang  = settings.oLanguage,\n            start = settings._iDisplayStart+1,\n            end   = settings.fnDisplayEnd(),\n            max   = settings.fnRecordsTotal(),\n            total = settings.fnRecordsDisplay(),\n            out   = total ?\n                lang.sInfo :\n                lang.sInfoEmpty;\n    \n        if ( total !== max ) {\n            /* Record set after filtering */\n            out += ' ' + lang.sInfoFiltered;\n        }\n    \n        // Convert the macros\n        out += lang.sInfoPostFix;\n        out = _fnInfoMacros( settings, out );\n    \n        var callback = lang.fnInfoCallback;\n        if ( callback !== null ) {\n            out = callback.call( settings.oInstance,\n                settings, start, end, max, total, out\n            );\n        }\n    \n        $(nodes).html( out );\n    }\n    \n    \n    function _fnInfoMacros ( settings, str )\n    {\n        // When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n        // internally\n        var\n            formatter  = settings.fnFormatNumber,\n            start      = settings._iDisplayStart+1,\n            len        = settings._iDisplayLength,\n            vis        = settings.fnRecordsDisplay(),\n            all        = len === -1;\n    \n        return str.\n            replace(/_START_/g, formatter.call( settings, start ) ).\n            replace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n            replace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\n            replace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n            replace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n            replace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\n    }\n    \n    \n    \n    /**\n     * Draw the table for the first time, adding all required features\n     *  @param {object} settings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnInitialise ( settings )\n    {\n        var i, iLen, iAjaxStart=settings.iInitDisplayStart;\n        var columns = settings.aoColumns, column;\n        var features = settings.oFeatures;\n        var deferLoading = settings.bDeferLoading; // value modified by the draw\n    \n        /* Ensure that the table data is fully initialised */\n        if ( ! settings.bInitialised ) {\n            setTimeout( function(){ _fnInitialise( settings ); }, 200 );\n            return;\n        }\n    \n        /* Show the display HTML options */\n        _fnAddOptionsHtml( settings );\n    \n        /* Build and draw the header / footer for the table */\n        _fnBuildHead( settings );\n        _fnDrawHead( settings, settings.aoHeader );\n        _fnDrawHead( settings, settings.aoFooter );\n    \n        /* Okay to show that something is going on now */\n        _fnProcessingDisplay( settings, true );\n    \n        /* Calculate sizes for columns */\n        if ( features.bAutoWidth ) {\n            _fnCalculateColumnWidths( settings );\n        }\n    \n        for ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\n            column = columns[i];\n    \n            if ( column.sWidth ) {\n                column.nTh.style.width = _fnStringToCss( column.sWidth );\n            }\n        }\n    \n        _fnCallbackFire( settings, null, 'preInit', [settings] );\n    \n        // If there is default sorting required - let's do it. The sort function\n        // will do the drawing for us. Otherwise we draw the table regardless of the\n        // Ajax source - this allows the table to look initialised for Ajax sourcing\n        // data (show 'loading' message possibly)\n        _fnReDraw( settings );\n    \n        // Server-side processing init complete is done by _fnAjaxUpdateDraw\n        var dataSrc = _fnDataSource( settings );\n        if ( dataSrc != 'ssp' || deferLoading ) {\n            // if there is an ajax source load the data\n            if ( dataSrc == 'ajax' ) {\n                _fnBuildAjax( settings, [], function(json) {\n                    var aData = _fnAjaxDataSrc( settings, json );\n    \n                    // Got the data - add it to the table\n                    for ( i=0 ; i<aData.length ; i++ ) {\n                        _fnAddData( settings, aData[i] );\n                    }\n    \n                    // Reset the init display for cookie saving. We've already done\n                    // a filter, and therefore cleared it before. So we need to make\n                    // it appear 'fresh'\n                    settings.iInitDisplayStart = iAjaxStart;\n    \n                    _fnReDraw( settings );\n    \n                    _fnProcessingDisplay( settings, false );\n                    _fnInitComplete( settings, json );\n                }, settings );\n            }\n            else {\n                _fnProcessingDisplay( settings, false );\n                _fnInitComplete( settings );\n            }\n        }\n    }\n    \n    \n    /**\n     * Draw the table for the first time, adding all required features\n     *  @param {object} oSettings dataTables settings object\n     *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n     *    with client-side processing (optional)\n     *  @memberof DataTable#oApi\n     */\n    function _fnInitComplete ( settings, json )\n    {\n        settings._bInitComplete = true;\n    \n        // When data was added after the initialisation (data or Ajax) we need to\n        // calculate the column sizing\n        if ( json || settings.oInit.aaData ) {\n            _fnAdjustColumnSizing( settings );\n        }\n    \n        _fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\n        _fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\n    }\n    \n    \n    function _fnLengthChange ( settings, val )\n    {\n        var len = parseInt( val, 10 );\n        settings._iDisplayLength = len;\n    \n        _fnLengthOverflow( settings );\n    \n        // Fire length change event\n        _fnCallbackFire( settings, null, 'length', [settings, len] );\n    }\n    \n    \n    /**\n     * Generate the node required for user display length changing\n     *  @param {object} settings dataTables settings object\n     *  @returns {node} Display length feature node\n     *  @memberof DataTable#oApi\n     */\n    function _fnFeatureHtmlLength ( settings )\n    {\n        var\n            classes  = settings.oClasses,\n            tableId  = settings.sTableId,\n            menu     = settings.aLengthMenu,\n            d2       = $.isArray( menu[0] ),\n            lengths  = d2 ? menu[0] : menu,\n            language = d2 ? menu[1] : menu;\n    \n        var select = $('<select/>', {\n            'name':          tableId+'_length',\n            'aria-controls': tableId,\n            'class':         classes.sLengthSelect\n        } );\n    \n        for ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\n            select[0][ i ] = new Option( language[i], lengths[i] );\n        }\n    \n        var div = $('<div><label/></div>').addClass( classes.sLength );\n        if ( ! settings.aanFeatures.l ) {\n            div[0].id = tableId+'_length';\n        }\n    \n        div.children().append(\n            settings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\n        );\n    \n        // Can't use `select` variable as user might provide their own and the\n        // reference is broken by the use of outerHTML\n        $('select', div)\n            .val( settings._iDisplayLength )\n            .on( 'change.DT', function(e) {\n                _fnLengthChange( settings, $(this).val() );\n                _fnDraw( settings );\n            } );\n    \n        // Update node value whenever anything changes the table's length\n        $(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n            if ( settings === s ) {\n                $('select', div).val( len );\n            }\n        } );\n    \n        return div[0];\n    }\n    \n    \n    \n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Note that most of the paging logic is done in\n     * DataTable.ext.pager\n     */\n    \n    /**\n     * Generate the node required for default pagination\n     *  @param {object} oSettings dataTables settings object\n     *  @returns {node} Pagination feature node\n     *  @memberof DataTable#oApi\n     */\n    function _fnFeatureHtmlPaginate ( settings )\n    {\n        var\n            type   = settings.sPaginationType,\n            plugin = DataTable.ext.pager[ type ],\n            modern = typeof plugin === 'function',\n            redraw = function( settings ) {\n                _fnDraw( settings );\n            },\n            node = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\n            features = settings.aanFeatures;\n    \n        if ( ! modern ) {\n            plugin.fnInit( settings, node, redraw );\n        }\n    \n        /* Add a draw callback for the pagination on first instance, to update the paging display */\n        if ( ! features.p )\n        {\n            node.id = settings.sTableId+'_paginate';\n    \n            settings.aoDrawCallback.push( {\n                \"fn\": function( settings ) {\n                    if ( modern ) {\n                        var\n                            start      = settings._iDisplayStart,\n                            len        = settings._iDisplayLength,\n                            visRecords = settings.fnRecordsDisplay(),\n                            all        = len === -1,\n                            page = all ? 0 : Math.ceil( start / len ),\n                            pages = all ? 1 : Math.ceil( visRecords / len ),\n                            buttons = plugin(page, pages),\n                            i, ien;\n    \n                        for ( i=0, ien=features.p.length ; i<ien ; i++ ) {\n                            _fnRenderer( settings, 'pageButton' )(\n                                settings, features.p[i], i, buttons, page, pages\n                            );\n                        }\n                    }\n                    else {\n                        plugin.fnUpdate( settings, redraw );\n                    }\n                },\n                \"sName\": \"pagination\"\n            } );\n        }\n    \n        return node;\n    }\n    \n    \n    /**\n     * Alter the display settings to change the page\n     *  @param {object} settings DataTables settings object\n     *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n     *    \"next\" or \"last\" or page number to jump to (integer)\n     *  @param [bool] redraw Automatically draw the update or not\n     *  @returns {bool} true page has changed, false - no change\n     *  @memberof DataTable#oApi\n     */\n    function _fnPageChange ( settings, action, redraw )\n    {\n        var\n            start     = settings._iDisplayStart,\n            len       = settings._iDisplayLength,\n            records   = settings.fnRecordsDisplay();\n    \n        if ( records === 0 || len === -1 )\n        {\n            start = 0;\n        }\n        else if ( typeof action === \"number\" )\n        {\n            start = action * len;\n    \n            if ( start > records )\n            {\n                start = 0;\n            }\n        }\n        else if ( action == \"first\" )\n        {\n            start = 0;\n        }\n        else if ( action == \"previous\" )\n        {\n            start = len >= 0 ?\n                start - len :\n                0;\n    \n            if ( start < 0 )\n            {\n              start = 0;\n            }\n        }\n        else if ( action == \"next\" )\n        {\n            if ( start + len < records )\n            {\n                start += len;\n            }\n        }\n        else if ( action == \"last\" )\n        {\n            start = Math.floor( (records-1) / len) * len;\n        }\n        else\n        {\n            _fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n        }\n    \n        var changed = settings._iDisplayStart !== start;\n        settings._iDisplayStart = start;\n    \n        if ( changed ) {\n            _fnCallbackFire( settings, null, 'page', [settings] );\n    \n            if ( redraw ) {\n                _fnDraw( settings );\n            }\n        }\n    \n        return changed;\n    }\n    \n    \n    \n    /**\n     * Generate the node required for the processing node\n     *  @param {object} settings dataTables settings object\n     *  @returns {node} Processing element\n     *  @memberof DataTable#oApi\n     */\n    function _fnFeatureHtmlProcessing ( settings )\n    {\n        return $('<div/>', {\n                'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\n                'class': settings.oClasses.sProcessing\n            } )\n            .html( settings.oLanguage.sProcessing )\n            .insertBefore( settings.nTable )[0];\n    }\n    \n    \n    /**\n     * Display or hide the processing indicator\n     *  @param {object} settings dataTables settings object\n     *  @param {bool} show Show the processing indicator (true) or not (false)\n     *  @memberof DataTable#oApi\n     */\n    function _fnProcessingDisplay ( settings, show )\n    {\n        if ( settings.oFeatures.bProcessing ) {\n            $(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\n        }\n    \n        _fnCallbackFire( settings, null, 'processing', [settings, show] );\n    }\n    \n    /**\n     * Add any control elements for the table - specifically scrolling\n     *  @param {object} settings dataTables settings object\n     *  @returns {node} Node to add to the DOM\n     *  @memberof DataTable#oApi\n     */\n    function _fnFeatureHtmlTable ( settings )\n    {\n        var table = $(settings.nTable);\n    \n        // Add the ARIA grid role to the table\n        table.attr( 'role', 'grid' );\n    \n        // Scrolling from here on in\n        var scroll = settings.oScroll;\n    \n        if ( scroll.sX === '' && scroll.sY === '' ) {\n            return settings.nTable;\n        }\n    \n        var scrollX = scroll.sX;\n        var scrollY = scroll.sY;\n        var classes = settings.oClasses;\n        var caption = table.children('caption');\n        var captionSide = caption.length ? caption[0]._captionSide : null;\n        var headerClone = $( table[0].cloneNode(false) );\n        var footerClone = $( table[0].cloneNode(false) );\n        var footer = table.children('tfoot');\n        var _div = '<div/>';\n        var size = function ( s ) {\n            return !s ? null : _fnStringToCss( s );\n        };\n    \n        if ( ! footer.length ) {\n            footer = null;\n        }\n    \n        /*\n         * The HTML structure that we want to generate in this function is:\n         *  div - scroller\n         *    div - scroll head\n         *      div - scroll head inner\n         *        table - scroll head table\n         *          thead - thead\n         *    div - scroll body\n         *      table - table (master table)\n         *        thead - thead clone for sizing\n         *        tbody - tbody\n         *    div - scroll foot\n         *      div - scroll foot inner\n         *        table - scroll foot table\n         *          tfoot - tfoot\n         */\n        var scroller = $( _div, { 'class': classes.sScrollWrapper } )\n            .append(\n                $(_div, { 'class': classes.sScrollHead } )\n                    .css( {\n                        overflow: 'hidden',\n                        position: 'relative',\n                        border: 0,\n                        width: scrollX ? size(scrollX) : '100%'\n                    } )\n                    .append(\n                        $(_div, { 'class': classes.sScrollHeadInner } )\n                            .css( {\n                                'box-sizing': 'content-box',\n                                width: scroll.sXInner || '100%'\n                            } )\n                            .append(\n                                headerClone\n                                    .removeAttr('id')\n                                    .css( 'margin-left', 0 )\n                                    .append( captionSide === 'top' ? caption : null )\n                                    .append(\n                                        table.children('thead')\n                                    )\n                            )\n                    )\n            )\n            .append(\n                $(_div, { 'class': classes.sScrollBody } )\n                    .css( {\n                        position: 'relative',\n                        overflow: 'auto',\n                        width: size( scrollX )\n                    } )\n                    .append( table )\n            );\n    \n        if ( footer ) {\n            scroller.append(\n                $(_div, { 'class': classes.sScrollFoot } )\n                    .css( {\n                        overflow: 'hidden',\n                        border: 0,\n                        width: scrollX ? size(scrollX) : '100%'\n                    } )\n                    .append(\n                        $(_div, { 'class': classes.sScrollFootInner } )\n                            .append(\n                                footerClone\n                                    .removeAttr('id')\n                                    .css( 'margin-left', 0 )\n                                    .append( captionSide === 'bottom' ? caption : null )\n                                    .append(\n                                        table.children('tfoot')\n                                    )\n                            )\n                    )\n            );\n        }\n    \n        var children = scroller.children();\n        var scrollHead = children[0];\n        var scrollBody = children[1];\n        var scrollFoot = footer ? children[2] : null;\n    \n        // When the body is scrolled, then we also want to scroll the headers\n        if ( scrollX ) {\n            $(scrollBody).on( 'scroll.DT', function (e) {\n                var scrollLeft = this.scrollLeft;\n    \n                scrollHead.scrollLeft = scrollLeft;\n    \n                if ( footer ) {\n                    scrollFoot.scrollLeft = scrollLeft;\n                }\n            } );\n        }\n    \n        $(scrollBody).css(\n            scrollY && scroll.bCollapse ? 'max-height' : 'height', \n            scrollY\n        );\n    \n        settings.nScrollHead = scrollHead;\n        settings.nScrollBody = scrollBody;\n        settings.nScrollFoot = scrollFoot;\n    \n        // On redraw - align columns\n        settings.aoDrawCallback.push( {\n            \"fn\": _fnScrollDraw,\n            \"sName\": \"scrolling\"\n        } );\n    \n        return scroller[0];\n    }\n    \n    \n    \n    /**\n     * Update the header, footer and body tables for resizing - i.e. column\n     * alignment.\n     *\n     * Welcome to the most horrible function DataTables. The process that this\n     * function follows is basically:\n     *   1. Re-create the table inside the scrolling div\n     *   2. Take live measurements from the DOM\n     *   3. Apply the measurements to align the columns\n     *   4. Clean up\n     *\n     *  @param {object} settings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnScrollDraw ( settings )\n    {\n        // Given that this is such a monster function, a lot of variables are use\n        // to try and keep the minimised size as small as possible\n        var\n            scroll         = settings.oScroll,\n            scrollX        = scroll.sX,\n            scrollXInner   = scroll.sXInner,\n            scrollY        = scroll.sY,\n            barWidth       = scroll.iBarWidth,\n            divHeader      = $(settings.nScrollHead),\n            divHeaderStyle = divHeader[0].style,\n            divHeaderInner = divHeader.children('div'),\n            divHeaderInnerStyle = divHeaderInner[0].style,\n            divHeaderTable = divHeaderInner.children('table'),\n            divBodyEl      = settings.nScrollBody,\n            divBody        = $(divBodyEl),\n            divBodyStyle   = divBodyEl.style,\n            divFooter      = $(settings.nScrollFoot),\n            divFooterInner = divFooter.children('div'),\n            divFooterTable = divFooterInner.children('table'),\n            header         = $(settings.nTHead),\n            table          = $(settings.nTable),\n            tableEl        = table[0],\n            tableStyle     = tableEl.style,\n            footer         = settings.nTFoot ? $(settings.nTFoot) : null,\n            browser        = settings.oBrowser,\n            ie67           = browser.bScrollOversize,\n            dtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\n            headerTrgEls, footerTrgEls,\n            headerSrcEls, footerSrcEls,\n            headerCopy, footerCopy,\n            headerWidths=[], footerWidths=[],\n            headerContent=[], footerContent=[],\n            idx, correction, sanityWidth,\n            zeroOut = function(nSizer) {\n                var style = nSizer.style;\n                style.paddingTop = \"0\";\n                style.paddingBottom = \"0\";\n                style.borderTopWidth = \"0\";\n                style.borderBottomWidth = \"0\";\n                style.height = 0;\n            };\n    \n        // If the scrollbar visibility has changed from the last draw, we need to\n        // adjust the column sizes as the table width will have changed to account\n        // for the scrollbar\n        var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n        \n        if ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n            settings.scrollBarVis = scrollBarVis;\n            _fnAdjustColumnSizing( settings );\n            return; // adjust column sizing will call this function again\n        }\n        else {\n            settings.scrollBarVis = scrollBarVis;\n        }\n    \n        /*\n         * 1. Re-create the table inside the scrolling div\n         */\n    \n        // Remove the old minimised thead and tfoot elements in the inner table\n        table.children('thead, tfoot').remove();\n    \n        if ( footer ) {\n            footerCopy = footer.clone().prependTo( table );\n            footerTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n            footerSrcEls = footerCopy.find('tr');\n        }\n    \n        // Clone the current header and footer elements and then place it into the inner table\n        headerCopy = header.clone().prependTo( table );\n        headerTrgEls = header.find('tr'); // original header is in its own table\n        headerSrcEls = headerCopy.find('tr');\n        headerCopy.find('th, td').removeAttr('tabindex');\n    \n    \n        /*\n         * 2. Take live measurements from the DOM - do not alter the DOM itself!\n         */\n    \n        // Remove old sizing and apply the calculated column widths\n        // Get the unique column headers in the newly created (cloned) header. We want to apply the\n        // calculated sizes to this header\n        if ( ! scrollX )\n        {\n            divBodyStyle.width = '100%';\n            divHeader[0].style.width = '100%';\n        }\n    \n        $.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\n            idx = _fnVisibleToColumnIndex( settings, i );\n            el.style.width = settings.aoColumns[idx].sWidth;\n        } );\n    \n        if ( footer ) {\n            _fnApplyToChildren( function(n) {\n                n.style.width = \"\";\n            }, footerSrcEls );\n        }\n    \n        // Size the table as a whole\n        sanityWidth = table.outerWidth();\n        if ( scrollX === \"\" ) {\n            // No x scrolling\n            tableStyle.width = \"100%\";\n    \n            // IE7 will make the width of the table when 100% include the scrollbar\n            // - which is shouldn't. When there is a scrollbar we need to take this\n            // into account.\n            if ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n                divBody.css('overflow-y') == \"scroll\")\n            ) {\n                tableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\n            }\n    \n            // Recalculate the sanity width\n            sanityWidth = table.outerWidth();\n        }\n        else if ( scrollXInner !== \"\" ) {\n            // legacy x scroll inner has been given - use it\n            tableStyle.width = _fnStringToCss(scrollXInner);\n    \n            // Recalculate the sanity width\n            sanityWidth = table.outerWidth();\n        }\n    \n        // Hidden header should have zero height, so remove padding and borders. Then\n        // set the width based on the real headers\n    \n        // Apply all styles in one pass\n        _fnApplyToChildren( zeroOut, headerSrcEls );\n    \n        // Read all widths in next pass\n        _fnApplyToChildren( function(nSizer) {\n            headerContent.push( nSizer.innerHTML );\n            headerWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n        }, headerSrcEls );\n    \n        // Apply all widths in final pass\n        _fnApplyToChildren( function(nToSize, i) {\n            // Only apply widths to the DataTables detected header cells - this\n            // prevents complex headers from having contradictory sizes applied\n            if ( $.inArray( nToSize, dtHeaderCells ) !== -1 ) {\n                nToSize.style.width = headerWidths[i];\n            }\n        }, headerTrgEls );\n    \n        $(headerSrcEls).height(0);\n    \n        /* Same again with the footer if we have one */\n        if ( footer )\n        {\n            _fnApplyToChildren( zeroOut, footerSrcEls );\n    \n            _fnApplyToChildren( function(nSizer) {\n                footerContent.push( nSizer.innerHTML );\n                footerWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n            }, footerSrcEls );\n    \n            _fnApplyToChildren( function(nToSize, i) {\n                nToSize.style.width = footerWidths[i];\n            }, footerTrgEls );\n    \n            $(footerSrcEls).height(0);\n        }\n    \n    \n        /*\n         * 3. Apply the measurements\n         */\n    \n        // \"Hide\" the header and footer that we used for the sizing. We need to keep\n        // the content of the cell so that the width applied to the header and body\n        // both match, but we want to hide it completely. We want to also fix their\n        // width to what they currently are\n        _fnApplyToChildren( function(nSizer, i) {\n            nSizer.innerHTML = '<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">'+headerContent[i]+'</div>';\n            nSizer.style.width = headerWidths[i];\n        }, headerSrcEls );\n    \n        if ( footer )\n        {\n            _fnApplyToChildren( function(nSizer, i) {\n                nSizer.innerHTML = '<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">'+footerContent[i]+'</div>';\n                nSizer.style.width = footerWidths[i];\n            }, footerSrcEls );\n        }\n    \n        // Sanity check that the table is of a sensible width. If not then we are going to get\n        // misalignment - try to prevent this by not allowing the table to shrink below its min width\n        if ( table.outerWidth() < sanityWidth )\n        {\n            // The min width depends upon if we have a vertical scrollbar visible or not */\n            correction = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n                divBody.css('overflow-y') == \"scroll\")) ?\n                    sanityWidth+barWidth :\n                    sanityWidth;\n    \n            // IE6/7 are a law unto themselves...\n            if ( ie67 && (divBodyEl.scrollHeight >\n                divBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n            ) {\n                tableStyle.width = _fnStringToCss( correction-barWidth );\n            }\n    \n            // And give the user a warning that we've stopped the table getting too small\n            if ( scrollX === \"\" || scrollXInner !== \"\" ) {\n                _fnLog( settings, 1, 'Possible column misalignment', 6 );\n            }\n        }\n        else\n        {\n            correction = '100%';\n        }\n    \n        // Apply to the container elements\n        divBodyStyle.width = _fnStringToCss( correction );\n        divHeaderStyle.width = _fnStringToCss( correction );\n    \n        if ( footer ) {\n            settings.nScrollFoot.style.width = _fnStringToCss( correction );\n        }\n    \n    \n        /*\n         * 4. Clean up\n         */\n        if ( ! scrollY ) {\n            /* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n             * the scrollbar height from the visible display, rather than adding it on. We need to\n             * set the height in order to sort this. Don't want to do it in any other browsers.\n             */\n            if ( ie67 ) {\n                divBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\n            }\n        }\n    \n        /* Finally set the width's of the header and footer tables */\n        var iOuterWidth = table.outerWidth();\n        divHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\n        divHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\n    \n        // Figure out if there are scrollbar present - if so then we need a the header and footer to\n        // provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n        var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n        var padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n        divHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\n    \n        if ( footer ) {\n            divFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\n            divFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\n            divFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\n        }\n    \n        // Correct DOM ordering for colgroup - comes before the thead\n        table.children('colgroup').insertBefore( table.children('thead') );\n    \n        /* Adjust the position of the header in case we loose the y-scrollbar */\n        divBody.scroll();\n    \n        // If sorting or filtering has occurred, jump the scrolling back to the top\n        // only if we aren't holding the position\n        if ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n            divBodyEl.scrollTop = 0;\n        }\n    }\n    \n    \n    \n    /**\n     * Apply a given function to the display child nodes of an element array (typically\n     * TD children of TR rows\n     *  @param {function} fn Method to apply to the objects\n     *  @param array {nodes} an1 List of elements to look through for display children\n     *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n     *  @memberof DataTable#oApi\n     */\n    function _fnApplyToChildren( fn, an1, an2 )\n    {\n        var index=0, i=0, iLen=an1.length;\n        var nNode1, nNode2;\n    \n        while ( i < iLen ) {\n            nNode1 = an1[i].firstChild;\n            nNode2 = an2 ? an2[i].firstChild : null;\n    \n            while ( nNode1 ) {\n                if ( nNode1.nodeType === 1 ) {\n                    if ( an2 ) {\n                        fn( nNode1, nNode2, index );\n                    }\n                    else {\n                        fn( nNode1, index );\n                    }\n    \n                    index++;\n                }\n    \n                nNode1 = nNode1.nextSibling;\n                nNode2 = an2 ? nNode2.nextSibling : null;\n            }\n    \n            i++;\n        }\n    }\n    \n    \n    \n    var __re_html_remove = /<.*?>/g;\n    \n    \n    /**\n     * Calculate the width of columns for the table\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnCalculateColumnWidths ( oSettings )\n    {\n        var\n            table = oSettings.nTable,\n            columns = oSettings.aoColumns,\n            scroll = oSettings.oScroll,\n            scrollY = scroll.sY,\n            scrollX = scroll.sX,\n            scrollXInner = scroll.sXInner,\n            columnCount = columns.length,\n            visibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\n            headerCells = $('th', oSettings.nTHead),\n            tableWidthAttr = table.getAttribute('width'), // from DOM element\n            tableContainer = table.parentNode,\n            userInputs = false,\n            i, column, columnIdx, width, outerWidth,\n            browser = oSettings.oBrowser,\n            ie67 = browser.bScrollOversize;\n    \n        var styleWidth = table.style.width;\n        if ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n            tableWidthAttr = styleWidth;\n        }\n    \n        /* Convert any user input sizes into pixel sizes */\n        for ( i=0 ; i<visibleColumns.length ; i++ ) {\n            column = columns[ visibleColumns[i] ];\n    \n            if ( column.sWidth !== null ) {\n                column.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );\n    \n                userInputs = true;\n            }\n        }\n    \n        /* If the number of columns in the DOM equals the number that we have to\n         * process in DataTables, then we can use the offsets that are created by\n         * the web- browser. No custom sizes can be set in order for this to happen,\n         * nor scrolling used\n         */\n        if ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\n             columnCount == _fnVisbleColumns( oSettings ) &&\n             columnCount == headerCells.length\n        ) {\n            for ( i=0 ; i<columnCount ; i++ ) {\n                var colIdx = _fnVisibleToColumnIndex( oSettings, i );\n    \n                if ( colIdx !== null ) {\n                    columns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\n                }\n            }\n        }\n        else\n        {\n            // Otherwise construct a single row, worst case, table with the widest\n            // node in the data, assign any user defined widths, then insert it into\n            // the DOM and allow the browser to do all the hard work of calculating\n            // table widths\n            var tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n                .css( 'visibility', 'hidden' )\n                .removeAttr( 'id' );\n    \n            // Clean up the table body\n            tmpTable.find('tbody tr').remove();\n            var tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n    \n            // Clone the table header and footer - we can't use the header / footer\n            // from the cloned table, since if scrolling is active, the table's\n            // real header and footer are contained in different table tags\n            tmpTable.find('thead, tfoot').remove();\n            tmpTable\n                .append( $(oSettings.nTHead).clone() )\n                .append( $(oSettings.nTFoot).clone() );\n    \n            // Remove any assigned widths from the footer (from scrolling)\n            tmpTable.find('tfoot th, tfoot td').css('width', '');\n    \n            // Apply custom sizing to the cloned header\n            headerCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\n    \n            for ( i=0 ; i<visibleColumns.length ; i++ ) {\n                column = columns[ visibleColumns[i] ];\n    \n                headerCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n                    _fnStringToCss( column.sWidthOrig ) :\n                    '';\n    \n                // For scrollX we need to force the column width otherwise the\n                // browser will collapse it. If this width is smaller than the\n                // width the column requires, then it will have no effect\n                if ( column.sWidthOrig && scrollX ) {\n                    $( headerCells[i] ).append( $('<div/>').css( {\n                        width: column.sWidthOrig,\n                        margin: 0,\n                        padding: 0,\n                        border: 0,\n                        height: 1\n                    } ) );\n                }\n            }\n    \n            // Find the widest cell for each column and put it into the table\n            if ( oSettings.aoData.length ) {\n                for ( i=0 ; i<visibleColumns.length ; i++ ) {\n                    columnIdx = visibleColumns[i];\n                    column = columns[ columnIdx ];\n    \n                    $( _fnGetWidestNode( oSettings, columnIdx ) )\n                        .clone( false )\n                        .append( column.sContentPadding )\n                        .appendTo( tr );\n                }\n            }\n    \n            // Tidy the temporary table - remove name attributes so there aren't\n            // duplicated in the dom (radio elements for example)\n            $('[name]', tmpTable).removeAttr('name');\n    \n            // Table has been built, attach to the document so we can work with it.\n            // A holding element is used, positioned at the top of the container\n            // with minimal height, so it has no effect on if the container scrolls\n            // or not. Otherwise it might trigger scrolling when it actually isn't\n            // needed\n            var holder = $('<div/>').css( scrollX || scrollY ?\n                    {\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        height: 1,\n                        right: 0,\n                        overflow: 'hidden'\n                    } :\n                    {}\n                )\n                .append( tmpTable )\n                .appendTo( tableContainer );\n    \n            // When scrolling (X or Y) we want to set the width of the table as \n            // appropriate. However, when not scrolling leave the table width as it\n            // is. This results in slightly different, but I think correct behaviour\n            if ( scrollX && scrollXInner ) {\n                tmpTable.width( scrollXInner );\n            }\n            else if ( scrollX ) {\n                tmpTable.css( 'width', 'auto' );\n                tmpTable.removeAttr('width');\n    \n                // If there is no width attribute or style, then allow the table to\n                // collapse\n                if ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n                    tmpTable.width( tableContainer.clientWidth );\n                }\n            }\n            else if ( scrollY ) {\n                tmpTable.width( tableContainer.clientWidth );\n            }\n            else if ( tableWidthAttr ) {\n                tmpTable.width( tableWidthAttr );\n            }\n    \n            // Get the width of each column in the constructed table - we need to\n            // know the inner width (so it can be assigned to the other table's\n            // cells) and the outer width so we can calculate the full width of the\n            // table. This is safe since DataTables requires a unique cell for each\n            // column, but if ever a header can span multiple columns, this will\n            // need to be modified.\n            var total = 0;\n            for ( i=0 ; i<visibleColumns.length ; i++ ) {\n                var cell = $(headerCells[i]);\n                var border = cell.outerWidth() - cell.width();\n    \n                // Use getBounding... where possible (not IE8-) because it can give\n                // sub-pixel accuracy, which we then want to round up!\n                var bounding = browser.bBounding ?\n                    Math.ceil( headerCells[i].getBoundingClientRect().width ) :\n                    cell.outerWidth();\n    \n                // Total is tracked to remove any sub-pixel errors as the outerWidth\n                // of the table might not equal the total given here (IE!).\n                total += bounding;\n    \n                // Width for each column to use\n                columns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\n            }\n    \n            table.style.width = _fnStringToCss( total );\n    \n            // Finished with the table - ditch it\n            holder.remove();\n        }\n    \n        // If there is a width attr, we want to attach an event listener which\n        // allows the table sizing to automatically adjust when the window is\n        // resized. Use the width attr rather than CSS, since we can't know if the\n        // CSS is a relative value or absolute - DOM read is always px.\n        if ( tableWidthAttr ) {\n            table.style.width = _fnStringToCss( tableWidthAttr );\n        }\n    \n        if ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\n            var bindResize = function () {\n                $(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\n                    _fnAdjustColumnSizing( oSettings );\n                } ) );\n            };\n    \n            // IE6/7 will crash if we bind a resize event handler on page load.\n            // To be removed in 1.11 which drops IE6/7 support\n            if ( ie67 ) {\n                setTimeout( bindResize, 1000 );\n            }\n            else {\n                bindResize();\n            }\n    \n            oSettings._reszEvt = true;\n        }\n    }\n    \n    \n    /**\n     * Throttle the calls to a function. Arguments and context are maintained for\n     * the throttled function\n     *  @param {function} fn Function to be called\n     *  @param {int} [freq=200] call frequency in mS\n     *  @returns {function} wrapped function\n     *  @memberof DataTable#oApi\n     */\n    var _fnThrottle = DataTable.util.throttle;\n    \n    \n    /**\n     * Convert a CSS unit width to pixels (e.g. 2em)\n     *  @param {string} width width to be converted\n     *  @param {node} parent parent to get the with for (required for relative widths) - optional\n     *  @returns {int} width in pixels\n     *  @memberof DataTable#oApi\n     */\n    function _fnConvertToWidth ( width, parent )\n    {\n        if ( ! width ) {\n            return 0;\n        }\n    \n        var n = $('<div/>')\n            .css( 'width', _fnStringToCss( width ) )\n            .appendTo( parent || document.body );\n    \n        var val = n[0].offsetWidth;\n        n.remove();\n    \n        return val;\n    }\n    \n    \n    /**\n     * Get the widest node\n     *  @param {object} settings dataTables settings object\n     *  @param {int} colIdx column of interest\n     *  @returns {node} widest table node\n     *  @memberof DataTable#oApi\n     */\n    function _fnGetWidestNode( settings, colIdx )\n    {\n        var idx = _fnGetMaxLenString( settings, colIdx );\n        if ( idx < 0 ) {\n            return null;\n        }\n    \n        var data = settings.aoData[ idx ];\n        return ! data.nTr ? // Might not have been created when deferred rendering\n            $('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\n            data.anCells[ colIdx ];\n    }\n    \n    \n    /**\n     * Get the maximum strlen for each data column\n     *  @param {object} settings dataTables settings object\n     *  @param {int} colIdx column of interest\n     *  @returns {string} max string length for each column\n     *  @memberof DataTable#oApi\n     */\n    function _fnGetMaxLenString( settings, colIdx )\n    {\n        var s, max=-1, maxIdx = -1;\n    \n        for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n            s = _fnGetCellData( settings, i, colIdx, 'display' )+'';\n            s = s.replace( __re_html_remove, '' );\n            s = s.replace( /&nbsp;/g, ' ' );\n    \n            if ( s.length > max ) {\n                max = s.length;\n                maxIdx = i;\n            }\n        }\n    \n        return maxIdx;\n    }\n    \n    \n    /**\n     * Append a CSS unit (only if required) to a string\n     *  @param {string} value to css-ify\n     *  @returns {string} value with css unit\n     *  @memberof DataTable#oApi\n     */\n    function _fnStringToCss( s )\n    {\n        if ( s === null ) {\n            return '0px';\n        }\n    \n        if ( typeof s == 'number' ) {\n            return s < 0 ?\n                '0px' :\n                s+'px';\n        }\n    \n        // Check it has a unit character already\n        return s.match(/\\d$/) ?\n            s+'px' :\n            s;\n    }\n    \n    \n    \n    function _fnSortFlatten ( settings )\n    {\n        var\n            i, iLen, k, kLen,\n            aSort = [],\n            aiOrig = [],\n            aoColumns = settings.aoColumns,\n            aDataSort, iCol, sType, srcCol,\n            fixed = settings.aaSortingFixed,\n            fixedObj = $.isPlainObject( fixed ),\n            nestedSort = [],\n            add = function ( a ) {\n                if ( a.length && ! $.isArray( a[0] ) ) {\n                    // 1D array\n                    nestedSort.push( a );\n                }\n                else {\n                    // 2D array\n                    $.merge( nestedSort, a );\n                }\n            };\n    \n        // Build the sort array, with pre-fix and post-fix options if they have been\n        // specified\n        if ( $.isArray( fixed ) ) {\n            add( fixed );\n        }\n    \n        if ( fixedObj && fixed.pre ) {\n            add( fixed.pre );\n        }\n    \n        add( settings.aaSorting );\n    \n        if (fixedObj && fixed.post ) {\n            add( fixed.post );\n        }\n    \n        for ( i=0 ; i<nestedSort.length ; i++ )\n        {\n            srcCol = nestedSort[i][0];\n            aDataSort = aoColumns[ srcCol ].aDataSort;\n    \n            for ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n            {\n                iCol = aDataSort[k];\n                sType = aoColumns[ iCol ].sType || 'string';\n    \n                if ( nestedSort[i]._idx === undefined ) {\n                    nestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\n                }\n    \n                aSort.push( {\n                    src:       srcCol,\n                    col:       iCol,\n                    dir:       nestedSort[i][1],\n                    index:     nestedSort[i]._idx,\n                    type:      sType,\n                    formatter: DataTable.ext.type.order[ sType+\"-pre\" ]\n                } );\n            }\n        }\n    \n        return aSort;\n    }\n    \n    /**\n     * Change the order of the table\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     *  @todo This really needs split up!\n     */\n    function _fnSort ( oSettings )\n    {\n        var\n            i, ien, iLen, j, jLen, k, kLen,\n            sDataType, nTh,\n            aiOrig = [],\n            oExtSort = DataTable.ext.type.order,\n            aoData = oSettings.aoData,\n            aoColumns = oSettings.aoColumns,\n            aDataSort, data, iCol, sType, oSort,\n            formatters = 0,\n            sortCol,\n            displayMaster = oSettings.aiDisplayMaster,\n            aSort;\n    \n        // Resolve any column types that are unknown due to addition or invalidation\n        // @todo Can this be moved into a 'data-ready' handler which is called when\n        //   data is going to be used in the table?\n        _fnColumnTypes( oSettings );\n    \n        aSort = _fnSortFlatten( oSettings );\n    \n        for ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n            sortCol = aSort[i];\n    \n            // Track if we can use the fast sort algorithm\n            if ( sortCol.formatter ) {\n                formatters++;\n            }\n    \n            // Load the data needed for the sort, for each cell\n            _fnSortData( oSettings, sortCol.col );\n        }\n    \n        /* No sorting required if server-side or no sorting array */\n        if ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n        {\n            // Create a value - key array of the current row positions such that we can use their\n            // current position during the sort, if values match, in order to perform stable sorting\n            for ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n                aiOrig[ displayMaster[i] ] = i;\n            }\n    \n            /* Do the sort - here we want multi-column sorting based on a given data source (column)\n             * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n             * follow on it's own, but this is what we want (example two column sorting):\n             *  fnLocalSorting = function(a,b){\n             *    var iTest;\n             *    iTest = oSort['string-asc']('data11', 'data12');\n             *      if (iTest !== 0)\n             *        return iTest;\n             *    iTest = oSort['numeric-desc']('data21', 'data22');\n             *    if (iTest !== 0)\n             *      return iTest;\n             *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n             *  }\n             * Basically we have a test for each sorting column, if the data in that column is equal,\n             * test the next column. If all columns match, then we use a numeric sort on the row\n             * positions in the original data array to provide a stable sort.\n             *\n             * Note - I know it seems excessive to have two sorting methods, but the first is around\n             * 15% faster, so the second is only maintained for backwards compatibility with sorting\n             * methods which do not have a pre-sort formatting function.\n             */\n            if ( formatters === aSort.length ) {\n                // All sort types have formatting functions\n                displayMaster.sort( function ( a, b ) {\n                    var\n                        x, y, k, test, sort,\n                        len=aSort.length,\n                        dataA = aoData[a]._aSortData,\n                        dataB = aoData[b]._aSortData;\n    \n                    for ( k=0 ; k<len ; k++ ) {\n                        sort = aSort[k];\n    \n                        x = dataA[ sort.col ];\n                        y = dataB[ sort.col ];\n    \n                        test = x<y ? -1 : x>y ? 1 : 0;\n                        if ( test !== 0 ) {\n                            return sort.dir === 'asc' ? test : -test;\n                        }\n                    }\n    \n                    x = aiOrig[a];\n                    y = aiOrig[b];\n                    return x<y ? -1 : x>y ? 1 : 0;\n                } );\n            }\n            else {\n                // Depreciated - remove in 1.11 (providing a plug-in option)\n                // Not all sort types have formatting methods, so we have to call their sorting\n                // methods.\n                displayMaster.sort( function ( a, b ) {\n                    var\n                        x, y, k, l, test, sort, fn,\n                        len=aSort.length,\n                        dataA = aoData[a]._aSortData,\n                        dataB = aoData[b]._aSortData;\n    \n                    for ( k=0 ; k<len ; k++ ) {\n                        sort = aSort[k];\n    \n                        x = dataA[ sort.col ];\n                        y = dataB[ sort.col ];\n    \n                        fn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\n                        test = fn( x, y );\n                        if ( test !== 0 ) {\n                            return test;\n                        }\n                    }\n    \n                    x = aiOrig[a];\n                    y = aiOrig[b];\n                    return x<y ? -1 : x>y ? 1 : 0;\n                } );\n            }\n        }\n    \n        /* Tell the draw function that we have sorted the data */\n        oSettings.bSorted = true;\n    }\n    \n    \n    function _fnSortAria ( settings )\n    {\n        var label;\n        var nextSort;\n        var columns = settings.aoColumns;\n        var aSort = _fnSortFlatten( settings );\n        var oAria = settings.oLanguage.oAria;\n    \n        // ARIA attributes - need to loop all columns, to update all (removing old\n        // attributes as needed)\n        for ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n        {\n            var col = columns[i];\n            var asSorting = col.asSorting;\n            var sTitle = col.sTitle.replace( /<.*?>/g, \"\" );\n            var th = col.nTh;\n    \n            // IE7 is throwing an error when setting these properties with jQuery's\n            // attr() and removeAttr() methods...\n            th.removeAttribute('aria-sort');\n    \n            /* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n            if ( col.bSortable ) {\n                if ( aSort.length > 0 && aSort[0].col == i ) {\n                    th.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\n                    nextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\n                }\n                else {\n                    nextSort = asSorting[0];\n                }\n    \n                label = sTitle + ( nextSort === \"asc\" ?\n                    oAria.sSortAscending :\n                    oAria.sSortDescending\n                );\n            }\n            else {\n                label = sTitle;\n            }\n    \n            th.setAttribute('aria-label', label);\n        }\n    }\n    \n    \n    /**\n     * Function to run on user sort request\n     *  @param {object} settings dataTables settings object\n     *  @param {node} attachTo node to attach the handler to\n     *  @param {int} colIdx column sorting index\n     *  @param {boolean} [append=false] Append the requested sort to the existing\n     *    sort if true (i.e. multi-column sort)\n     *  @param {function} [callback] callback function\n     *  @memberof DataTable#oApi\n     */\n    function _fnSortListener ( settings, colIdx, append, callback )\n    {\n        var col = settings.aoColumns[ colIdx ];\n        var sorting = settings.aaSorting;\n        var asSorting = col.asSorting;\n        var nextSortIdx;\n        var next = function ( a, overflow ) {\n            var idx = a._idx;\n            if ( idx === undefined ) {\n                idx = $.inArray( a[1], asSorting );\n            }\n    \n            return idx+1 < asSorting.length ?\n                idx+1 :\n                overflow ?\n                    null :\n                    0;\n        };\n    \n        // Convert to 2D array if needed\n        if ( typeof sorting[0] === 'number' ) {\n            sorting = settings.aaSorting = [ sorting ];\n        }\n    \n        // If appending the sort then we are multi-column sorting\n        if ( append && settings.oFeatures.bSortMulti ) {\n            // Are we already doing some kind of sort on this column?\n            var sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\n    \n            if ( sortIdx !== -1 ) {\n                // Yes, modify the sort\n                nextSortIdx = next( sorting[sortIdx], true );\n    \n                if ( nextSortIdx === null && sorting.length === 1 ) {\n                    nextSortIdx = 0; // can't remove sorting completely\n                }\n    \n                if ( nextSortIdx === null ) {\n                    sorting.splice( sortIdx, 1 );\n                }\n                else {\n                    sorting[sortIdx][1] = asSorting[ nextSortIdx ];\n                    sorting[sortIdx]._idx = nextSortIdx;\n                }\n            }\n            else {\n                // No sort on this column yet\n                sorting.push( [ colIdx, asSorting[0], 0 ] );\n                sorting[sorting.length-1]._idx = 0;\n            }\n        }\n        else if ( sorting.length && sorting[0][0] == colIdx ) {\n            // Single column - already sorting on this column, modify the sort\n            nextSortIdx = next( sorting[0] );\n    \n            sorting.length = 1;\n            sorting[0][1] = asSorting[ nextSortIdx ];\n            sorting[0]._idx = nextSortIdx;\n        }\n        else {\n            // Single column - sort only on this column\n            sorting.length = 0;\n            sorting.push( [ colIdx, asSorting[0] ] );\n            sorting[0]._idx = 0;\n        }\n    \n        // Run the sort by calling a full redraw\n        _fnReDraw( settings );\n    \n        // callback used for async user interaction\n        if ( typeof callback == 'function' ) {\n            callback( settings );\n        }\n    }\n    \n    \n    /**\n     * Attach a sort handler (click) to a node\n     *  @param {object} settings dataTables settings object\n     *  @param {node} attachTo node to attach the handler to\n     *  @param {int} colIdx column sorting index\n     *  @param {function} [callback] callback function\n     *  @memberof DataTable#oApi\n     */\n    function _fnSortAttachListener ( settings, attachTo, colIdx, callback )\n    {\n        var col = settings.aoColumns[ colIdx ];\n    \n        _fnBindAction( attachTo, {}, function (e) {\n            /* If the column is not sortable - don't to anything */\n            if ( col.bSortable === false ) {\n                return;\n            }\n    \n            // If processing is enabled use a timeout to allow the processing\n            // display to be shown - otherwise to it synchronously\n            if ( settings.oFeatures.bProcessing ) {\n                _fnProcessingDisplay( settings, true );\n    \n                setTimeout( function() {\n                    _fnSortListener( settings, colIdx, e.shiftKey, callback );\n    \n                    // In server-side processing, the draw callback will remove the\n                    // processing display\n                    if ( _fnDataSource( settings ) !== 'ssp' ) {\n                        _fnProcessingDisplay( settings, false );\n                    }\n                }, 0 );\n            }\n            else {\n                _fnSortListener( settings, colIdx, e.shiftKey, callback );\n            }\n        } );\n    }\n    \n    \n    /**\n     * Set the sorting classes on table's body, Note: it is safe to call this function\n     * when bSort and bSortClasses are false\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnSortingClasses( settings )\n    {\n        var oldSort = settings.aLastSort;\n        var sortClass = settings.oClasses.sSortColumn;\n        var sort = _fnSortFlatten( settings );\n        var features = settings.oFeatures;\n        var i, ien, colIdx;\n    \n        if ( features.bSort && features.bSortClasses ) {\n            // Remove old sorting classes\n            for ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n                colIdx = oldSort[i].src;\n    \n                // Remove column sorting\n                $( _pluck( settings.aoData, 'anCells', colIdx ) )\n                    .removeClass( sortClass + (i<2 ? i+1 : 3) );\n            }\n    \n            // Add new column sorting\n            for ( i=0, ien=sort.length ; i<ien ; i++ ) {\n                colIdx = sort[i].src;\n    \n                $( _pluck( settings.aoData, 'anCells', colIdx ) )\n                    .addClass( sortClass + (i<2 ? i+1 : 3) );\n            }\n        }\n    \n        settings.aLastSort = sort;\n    }\n    \n    \n    // Get the data to sort a column, be it from cache, fresh (populating the\n    // cache), or from a sort formatter\n    function _fnSortData( settings, idx )\n    {\n        // Custom sorting function - provided by the sort data type\n        var column = settings.aoColumns[ idx ];\n        var customSort = DataTable.ext.order[ column.sSortDataType ];\n        var customData;\n    \n        if ( customSort ) {\n            customData = customSort.call( settings.oInstance, settings, idx,\n                _fnColumnIndexToVisible( settings, idx )\n            );\n        }\n    \n        // Use / populate cache\n        var row, cellData;\n        var formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n    \n        for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n            row = settings.aoData[i];\n    \n            if ( ! row._aSortData ) {\n                row._aSortData = [];\n            }\n    \n            if ( ! row._aSortData[idx] || customSort ) {\n                cellData = customSort ?\n                    customData[i] : // If there was a custom sort function, use data from there\n                    _fnGetCellData( settings, i, idx, 'sort' );\n    \n                row._aSortData[ idx ] = formatter ?\n                    formatter( cellData ) :\n                    cellData;\n            }\n        }\n    }\n    \n    \n    \n    /**\n     * Save the state of a table\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnSaveState ( settings )\n    {\n        if ( !settings.oFeatures.bStateSave || settings.bDestroying )\n        {\n            return;\n        }\n    \n        /* Store the interesting variables */\n        var state = {\n            time:    +new Date(),\n            start:   settings._iDisplayStart,\n            length:  settings._iDisplayLength,\n            order:   $.extend( true, [], settings.aaSorting ),\n            search:  _fnSearchToCamel( settings.oPreviousSearch ),\n            columns: $.map( settings.aoColumns, function ( col, i ) {\n                return {\n                    visible: col.bVisible,\n                    search: _fnSearchToCamel( settings.aoPreSearchCols[i] )\n                };\n            } )\n        };\n    \n        _fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n    \n        settings.oSavedState = state;\n        settings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n    }\n    \n    \n    /**\n     * Attempt to load a saved table state\n     *  @param {object} oSettings dataTables settings object\n     *  @param {object} oInit DataTables init object so we can override settings\n     *  @param {function} callback Callback to execute when the state has been loaded\n     *  @memberof DataTable#oApi\n     */\n    function _fnLoadState ( settings, oInit, callback )\n    {\n        var i, ien;\n        var columns = settings.aoColumns;\n        var loaded = function ( s ) {\n            if ( ! s || ! s.time ) {\n                callback();\n                return;\n            }\n    \n            // Allow custom and plug-in manipulation functions to alter the saved data set and\n            // cancelling of loading by returning false\n            var abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n            if ( $.inArray( false, abStateLoad ) !== -1 ) {\n                callback();\n                return;\n            }\n    \n            // Reject old data\n            var duration = settings.iStateDuration;\n            if ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n                callback();\n                return;\n            }\n    \n            // Number of columns have changed - all bets are off, no restore of settings\n            if ( s.columns && columns.length !== s.columns.length ) {\n                callback();\n                return;\n            }\n    \n            // Store the saved state so it might be accessed at any time\n            settings.oLoadedState = $.extend( true, {}, s );\n    \n            // Restore key features - todo - for 1.11 this needs to be done by\n            // subscribed events\n            if ( s.start !== undefined ) {\n                settings._iDisplayStart    = s.start;\n                settings.iInitDisplayStart = s.start;\n            }\n            if ( s.length !== undefined ) {\n                settings._iDisplayLength   = s.length;\n            }\n    \n            // Order\n            if ( s.order !== undefined ) {\n                settings.aaSorting = [];\n                $.each( s.order, function ( i, col ) {\n                    settings.aaSorting.push( col[0] >= columns.length ?\n                        [ 0, col[1] ] :\n                        col\n                    );\n                } );\n            }\n    \n            // Search\n            if ( s.search !== undefined ) {\n                $.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\n            }\n    \n            // Columns\n            //\n            if ( s.columns ) {\n                for ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n                    var col = s.columns[i];\n    \n                    // Visibility\n                    if ( col.visible !== undefined ) {\n                        columns[i].bVisible = col.visible;\n                    }\n    \n                    // Search\n                    if ( col.search !== undefined ) {\n                        $.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\n                    }\n                }\n            }\n    \n            _fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n            callback();\n        }\n    \n        if ( ! settings.oFeatures.bStateSave ) {\n            callback();\n            return;\n        }\n    \n        var state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n    \n        if ( state !== undefined ) {\n            loaded( state );\n        }\n        // otherwise, wait for the loaded callback to be executed\n    }\n    \n    \n    /**\n     * Return the settings object for a particular table\n     *  @param {node} table table we are using as a dataTable\n     *  @returns {object} Settings object - or null if not found\n     *  @memberof DataTable#oApi\n     */\n    function _fnSettingsFromNode ( table )\n    {\n        var settings = DataTable.settings;\n        var idx = $.inArray( table, _pluck( settings, 'nTable' ) );\n    \n        return idx !== -1 ?\n            settings[ idx ] :\n            null;\n    }\n    \n    \n    /**\n     * Log an error message\n     *  @param {object} settings dataTables settings object\n     *  @param {int} level log error messages, or display them to the user\n     *  @param {string} msg error message\n     *  @param {int} tn Technical note id to get more information about the error.\n     *  @memberof DataTable#oApi\n     */\n    function _fnLog( settings, level, msg, tn )\n    {\n        msg = 'DataTables warning: '+\n            (settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n    \n        if ( tn ) {\n            msg += '. For more information about this error, please see '+\n            'http://datatables.net/tn/'+tn;\n        }\n    \n        if ( ! level  ) {\n            // Backwards compatibility pre 1.10\n            var ext = DataTable.ext;\n            var type = ext.sErrMode || ext.errMode;\n    \n            if ( settings ) {\n                _fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\n            }\n    \n            if ( type == 'alert' ) {\n                alert( msg );\n            }\n            else if ( type == 'throw' ) {\n                throw new Error(msg);\n            }\n            else if ( typeof type == 'function' ) {\n                type( settings, tn, msg );\n            }\n        }\n        else if ( window.console && console.log ) {\n            console.log( msg );\n        }\n    }\n    \n    \n    /**\n     * See if a property is defined on one object, if so assign it to the other object\n     *  @param {object} ret target object\n     *  @param {object} src source object\n     *  @param {string} name property\n     *  @param {string} [mappedName] name to map too - optional, name used if not given\n     *  @memberof DataTable#oApi\n     */\n    function _fnMap( ret, src, name, mappedName )\n    {\n        if ( $.isArray( name ) ) {\n            $.each( name, function (i, val) {\n                if ( $.isArray( val ) ) {\n                    _fnMap( ret, src, val[0], val[1] );\n                }\n                else {\n                    _fnMap( ret, src, val );\n                }\n            } );\n    \n            return;\n        }\n    \n        if ( mappedName === undefined ) {\n            mappedName = name;\n        }\n    \n        if ( src[name] !== undefined ) {\n            ret[mappedName] = src[name];\n        }\n    }\n    \n    \n    /**\n     * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n     * shallow copy arrays. The reason we need to do this, is that we don't want to\n     * deep copy array init values (such as aaSorting) since the dev wouldn't be\n     * able to override them, but we do want to deep copy arrays.\n     *  @param {object} out Object to extend\n     *  @param {object} extender Object from which the properties will be applied to\n     *      out\n     *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n     *      independent copy with the exception of the `data` or `aaData` parameters\n     *      if they are present. This is so you can pass in a collection to\n     *      DataTables and have that used as your data source without breaking the\n     *      references\n     *  @returns {object} out Reference, just for convenience - out === the return.\n     *  @memberof DataTable#oApi\n     *  @todo This doesn't take account of arrays inside the deep copied objects.\n     */\n    function _fnExtend( out, extender, breakRefs )\n    {\n        var val;\n    \n        for ( var prop in extender ) {\n            if ( extender.hasOwnProperty(prop) ) {\n                val = extender[prop];\n    \n                if ( $.isPlainObject( val ) ) {\n                    if ( ! $.isPlainObject( out[prop] ) ) {\n                        out[prop] = {};\n                    }\n                    $.extend( true, out[prop], val );\n                }\n                else if ( breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val) ) {\n                    out[prop] = val.slice();\n                }\n                else {\n                    out[prop] = val;\n                }\n            }\n        }\n    \n        return out;\n    }\n    \n    \n    /**\n     * Bind an event handers to allow a click or return key to activate the callback.\n     * This is good for accessibility since a return on the keyboard will have the\n     * same effect as a click, if the element has focus.\n     *  @param {element} n Element to bind the action to\n     *  @param {object} oData Data object to pass to the triggered function\n     *  @param {function} fn Callback function for when the event is triggered\n     *  @memberof DataTable#oApi\n     */\n    function _fnBindAction( n, oData, fn )\n    {\n        $(n)\n            .on( 'click.DT', oData, function (e) {\n                    n.blur(); // Remove focus outline for mouse users\n                    fn(e);\n                } )\n            .on( 'keypress.DT', oData, function (e){\n                    if ( e.which === 13 ) {\n                        e.preventDefault();\n                        fn(e);\n                    }\n                } )\n            .on( 'selectstart.DT', function () {\n                    /* Take the brutal approach to cancelling text selection */\n                    return false;\n                } );\n    }\n    \n    \n    /**\n     * Register a callback function. Easily allows a callback function to be added to\n     * an array store of callback functions that can then all be called together.\n     *  @param {object} oSettings dataTables settings object\n     *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n     *  @param {function} fn Function to be called back\n     *  @param {string} sName Identifying name for the callback (i.e. a label)\n     *  @memberof DataTable#oApi\n     */\n    function _fnCallbackReg( oSettings, sStore, fn, sName )\n    {\n        if ( fn )\n        {\n            oSettings[sStore].push( {\n                \"fn\": fn,\n                \"sName\": sName\n            } );\n        }\n    }\n    \n    \n    /**\n     * Fire callback functions and trigger events. Note that the loop over the\n     * callback array store is done backwards! Further note that you do not want to\n     * fire off triggers in time sensitive applications (for example cell creation)\n     * as its slow.\n     *  @param {object} settings dataTables settings object\n     *  @param {string} callbackArr Name of the array storage for the callbacks in\n     *      oSettings\n     *  @param {string} eventName Name of the jQuery custom event to trigger. If\n     *      null no trigger is fired\n     *  @param {array} args Array of arguments to pass to the callback function /\n     *      trigger\n     *  @memberof DataTable#oApi\n     */\n    function _fnCallbackFire( settings, callbackArr, eventName, args )\n    {\n        var ret = [];\n    \n        if ( callbackArr ) {\n            ret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\n                return val.fn.apply( settings.oInstance, args );\n            } );\n        }\n    \n        if ( eventName !== null ) {\n            var e = $.Event( eventName+'.dt' );\n    \n            $(settings.nTable).trigger( e, args );\n    \n            ret.push( e.result );\n        }\n    \n        return ret;\n    }\n    \n    \n    function _fnLengthOverflow ( settings )\n    {\n        var\n            start = settings._iDisplayStart,\n            end = settings.fnDisplayEnd(),\n            len = settings._iDisplayLength;\n    \n        /* If we have space to show extra rows (backing up from the end point - then do so */\n        if ( start >= end )\n        {\n            start = end - len;\n        }\n    \n        // Keep the start record on the current page\n        start -= (start % len);\n    \n        if ( len === -1 || start < 0 )\n        {\n            start = 0;\n        }\n    \n        settings._iDisplayStart = start;\n    }\n    \n    \n    function _fnRenderer( settings, type )\n    {\n        var renderer = settings.renderer;\n        var host = DataTable.ext.renderer[type];\n    \n        if ( $.isPlainObject( renderer ) && renderer[type] ) {\n            // Specific renderer for this type. If available use it, otherwise use\n            // the default.\n            return host[renderer[type]] || host._;\n        }\n        else if ( typeof renderer === 'string' ) {\n            // Common renderer - if there is one available for this type use it,\n            // otherwise use the default\n            return host[renderer] || host._;\n        }\n    \n        // Use the default\n        return host._;\n    }\n    \n    \n    /**\n     * Detect the data source being used for the table. Used to simplify the code\n     * a little (ajax) and to make it compress a little smaller.\n     *\n     *  @param {object} settings dataTables settings object\n     *  @returns {string} Data source\n     *  @memberof DataTable#oApi\n     */\n    function _fnDataSource ( settings )\n    {\n        if ( settings.oFeatures.bServerSide ) {\n            return 'ssp';\n        }\n        else if ( settings.ajax || settings.sAjaxSource ) {\n            return 'ajax';\n        }\n        return 'dom';\n    }\n    \n\n    \n    \n    /**\n     * Computed structure of the DataTables API, defined by the options passed to\n     * `DataTable.Api.register()` when building the API.\n     *\n     * The structure is built in order to speed creation and extension of the Api\n     * objects since the extensions are effectively pre-parsed.\n     *\n     * The array is an array of objects with the following structure, where this\n     * base array represents the Api prototype base:\n     *\n     *     [\n     *       {\n     *         name:      'data'                -- string   - Property name\n     *         val:       function () {},       -- function - Api method (or undefined if just an object\n     *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n     *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n     *       },\n     *       {\n     *         name:     'row'\n     *         val:       {},\n     *         methodExt: [ ... ],\n     *         propExt:   [\n     *           {\n     *             name:      'data'\n     *             val:       function () {},\n     *             methodExt: [ ... ],\n     *             propExt:   [ ... ]\n     *           },\n     *           ...\n     *         ]\n     *       }\n     *     ]\n     *\n     * @type {Array}\n     * @ignore\n     */\n    var __apiStruct = [];\n    \n    \n    /**\n     * `Array.prototype` reference.\n     *\n     * @type object\n     * @ignore\n     */\n    var __arrayProto = Array.prototype;\n    \n    \n    /**\n     * Abstraction for `context` parameter of the `Api` constructor to allow it to\n     * take several different forms for ease of use.\n     *\n     * Each of the input parameter types will be converted to a DataTables settings\n     * object where possible.\n     *\n     * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n     *   of:\n     *\n     *   * `string` - jQuery selector. Any DataTables' matching the given selector\n     *     with be found and used.\n     *   * `node` - `TABLE` node which has already been formed into a DataTable.\n     *   * `jQuery` - A jQuery object of `TABLE` nodes.\n     *   * `object` - DataTables settings object\n     *   * `DataTables.Api` - API instance\n     * @return {array|null} Matching DataTables settings objects. `null` or\n     *   `undefined` is returned if no matching DataTable is found.\n     * @ignore\n     */\n    var _toSettings = function ( mixed )\n    {\n        var idx, jq;\n        var settings = DataTable.settings;\n        var tables = $.map( settings, function (el, i) {\n            return el.nTable;\n        } );\n    \n        if ( ! mixed ) {\n            return [];\n        }\n        else if ( mixed.nTable && mixed.oApi ) {\n            // DataTables settings object\n            return [ mixed ];\n        }\n        else if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n            // Table node\n            idx = $.inArray( mixed, tables );\n            return idx !== -1 ? [ settings[idx] ] : null;\n        }\n        else if ( mixed && typeof mixed.settings === 'function' ) {\n            return mixed.settings().toArray();\n        }\n        else if ( typeof mixed === 'string' ) {\n            // jQuery selector\n            jq = $(mixed);\n        }\n        else if ( mixed instanceof $ ) {\n            // jQuery object (also DataTables instance)\n            jq = mixed;\n        }\n    \n        if ( jq ) {\n            return jq.map( function(i) {\n                idx = $.inArray( this, tables );\n                return idx !== -1 ? settings[idx] : null;\n            } ).toArray();\n        }\n    };\n    \n    \n    /**\n     * DataTables API class - used to control and interface with  one or more\n     * DataTables enhanced tables.\n     *\n     * The API class is heavily based on jQuery, presenting a chainable interface\n     * that you can use to interact with tables. Each instance of the API class has\n     * a \"context\" - i.e. the tables that it will operate on. This could be a single\n     * table, all tables on a page or a sub-set thereof.\n     *\n     * Additionally the API is designed to allow you to easily work with the data in\n     * the tables, retrieving and manipulating it as required. This is done by\n     * presenting the API class as an array like interface. The contents of the\n     * array depend upon the actions requested by each method (for example\n     * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n     * return an array of objects or arrays depending upon your table's\n     * configuration). The API object has a number of array like methods (`push`,\n     * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n     * `unique` etc) to assist your working with the data held in a table.\n     *\n     * Most methods (those which return an Api instance) are chainable, which means\n     * the return from a method call also has all of the methods available that the\n     * top level object had. For example, these two calls are equivalent:\n     *\n     *     // Not chained\n     *     api.row.add( {...} );\n     *     api.draw();\n     *\n     *     // Chained\n     *     api.row.add( {...} ).draw();\n     *\n     * @class DataTable.Api\n     * @param {array|object|string|jQuery} context DataTable identifier. This is\n     *   used to define which DataTables enhanced tables this API will operate on.\n     *   Can be one of:\n     *\n     *   * `string` - jQuery selector. Any DataTables' matching the given selector\n     *     with be found and used.\n     *   * `node` - `TABLE` node which has already been formed into a DataTable.\n     *   * `jQuery` - A jQuery object of `TABLE` nodes.\n     *   * `object` - DataTables settings object\n     * @param {array} [data] Data to initialise the Api instance with.\n     *\n     * @example\n     *   // Direct initialisation during DataTables construction\n     *   var api = $('#example').DataTable();\n     *\n     * @example\n     *   // Initialisation using a DataTables jQuery object\n     *   var api = $('#example').dataTable().api();\n     *\n     * @example\n     *   // Initialisation as a constructor\n     *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n     */\n    _Api = function ( context, data )\n    {\n        if ( ! (this instanceof _Api) ) {\n            return new _Api( context, data );\n        }\n    \n        var settings = [];\n        var ctxSettings = function ( o ) {\n            var a = _toSettings( o );\n            if ( a ) {\n                settings = settings.concat( a );\n            }\n        };\n    \n        if ( $.isArray( context ) ) {\n            for ( var i=0, ien=context.length ; i<ien ; i++ ) {\n                ctxSettings( context[i] );\n            }\n        }\n        else {\n            ctxSettings( context );\n        }\n    \n        // Remove duplicates\n        this.context = _unique( settings );\n    \n        // Initial data\n        if ( data ) {\n            $.merge( this, data );\n        }\n    \n        // selector\n        this.selector = {\n            rows: null,\n            cols: null,\n            opts: null\n        };\n    \n        _Api.extend( this, this, __apiStruct );\n    };\n    \n    DataTable.Api = _Api;\n    \n    // Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n    // isPlainObject.\n    $.extend( _Api.prototype, {\n        any: function ()\n        {\n            return this.count() !== 0;\n        },\n    \n    \n        concat:  __arrayProto.concat,\n    \n    \n        context: [], // array of table settings objects\n    \n    \n        count: function ()\n        {\n            return this.flatten().length;\n        },\n    \n    \n        each: function ( fn )\n        {\n            for ( var i=0, ien=this.length ; i<ien; i++ ) {\n                fn.call( this, this[i], i, this );\n            }\n    \n            return this;\n        },\n    \n    \n        eq: function ( idx )\n        {\n            var ctx = this.context;\n    \n            return ctx.length > idx ?\n                new _Api( ctx[idx], this[idx] ) :\n                null;\n        },\n    \n    \n        filter: function ( fn )\n        {\n            var a = [];\n    \n            if ( __arrayProto.filter ) {\n                a = __arrayProto.filter.call( this, fn, this );\n            }\n            else {\n                // Compatibility for browsers without EMCA-252-5 (JS 1.6)\n                for ( var i=0, ien=this.length ; i<ien ; i++ ) {\n                    if ( fn.call( this, this[i], i, this ) ) {\n                        a.push( this[i] );\n                    }\n                }\n            }\n    \n            return new _Api( this.context, a );\n        },\n    \n    \n        flatten: function ()\n        {\n            var a = [];\n            return new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n        },\n    \n    \n        join:    __arrayProto.join,\n    \n    \n        indexOf: __arrayProto.indexOf || function (obj, start)\n        {\n            for ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\n                if ( this[i] === obj ) {\n                    return i;\n                }\n            }\n            return -1;\n        },\n    \n        iterator: function ( flatten, type, fn, alwaysNew ) {\n            var\n                a = [], ret,\n                i, ien, j, jen,\n                context = this.context,\n                rows, items, item,\n                selector = this.selector;\n    \n            // Argument shifting\n            if ( typeof flatten === 'string' ) {\n                alwaysNew = fn;\n                fn = type;\n                type = flatten;\n                flatten = false;\n            }\n    \n            for ( i=0, ien=context.length ; i<ien ; i++ ) {\n                var apiInst = new _Api( context[i] );\n    \n                if ( type === 'table' ) {\n                    ret = fn.call( apiInst, context[i], i );\n    \n                    if ( ret !== undefined ) {\n                        a.push( ret );\n                    }\n                }\n                else if ( type === 'columns' || type === 'rows' ) {\n                    // this has same length as context - one entry for each table\n                    ret = fn.call( apiInst, context[i], this[i], i );\n    \n                    if ( ret !== undefined ) {\n                        a.push( ret );\n                    }\n                }\n                else if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n                    // columns and rows share the same structure.\n                    // 'this' is an array of column indexes for each context\n                    items = this[i];\n    \n                    if ( type === 'column-rows' ) {\n                        rows = _selector_row_indexes( context[i], selector.opts );\n                    }\n    \n                    for ( j=0, jen=items.length ; j<jen ; j++ ) {\n                        item = items[j];\n    \n                        if ( type === 'cell' ) {\n                            ret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n                        }\n                        else {\n                            ret = fn.call( apiInst, context[i], item, i, j, rows );\n                        }\n    \n                        if ( ret !== undefined ) {\n                            a.push( ret );\n                        }\n                    }\n                }\n            }\n    \n            if ( a.length || alwaysNew ) {\n                var api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n                var apiSelector = api.selector;\n                apiSelector.rows = selector.rows;\n                apiSelector.cols = selector.cols;\n                apiSelector.opts = selector.opts;\n                return api;\n            }\n            return this;\n        },\n    \n    \n        lastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\n        {\n            // Bit cheeky...\n            return this.indexOf.apply( this.toArray.reverse(), arguments );\n        },\n    \n    \n        length:  0,\n    \n    \n        map: function ( fn )\n        {\n            var a = [];\n    \n            if ( __arrayProto.map ) {\n                a = __arrayProto.map.call( this, fn, this );\n            }\n            else {\n                // Compatibility for browsers without EMCA-252-5 (JS 1.6)\n                for ( var i=0, ien=this.length ; i<ien ; i++ ) {\n                    a.push( fn.call( this, this[i], i ) );\n                }\n            }\n    \n            return new _Api( this.context, a );\n        },\n    \n    \n        pluck: function ( prop )\n        {\n            return this.map( function ( el ) {\n                return el[ prop ];\n            } );\n        },\n    \n        pop:     __arrayProto.pop,\n    \n    \n        push:    __arrayProto.push,\n    \n    \n        // Does not return an API instance\n        reduce: __arrayProto.reduce || function ( fn, init )\n        {\n            return _fnReduce( this, fn, init, 0, this.length, 1 );\n        },\n    \n    \n        reduceRight: __arrayProto.reduceRight || function ( fn, init )\n        {\n            return _fnReduce( this, fn, init, this.length-1, -1, -1 );\n        },\n    \n    \n        reverse: __arrayProto.reverse,\n    \n    \n        // Object with rows, columns and opts\n        selector: null,\n    \n    \n        shift:   __arrayProto.shift,\n    \n    \n        slice: function () {\n            return new _Api( this.context, this );\n        },\n    \n    \n        sort:    __arrayProto.sort, // ? name - order?\n    \n    \n        splice:  __arrayProto.splice,\n    \n    \n        toArray: function ()\n        {\n            return __arrayProto.slice.call( this );\n        },\n    \n    \n        to$: function ()\n        {\n            return $( this );\n        },\n    \n    \n        toJQuery: function ()\n        {\n            return $( this );\n        },\n    \n    \n        unique: function ()\n        {\n            return new _Api( this.context, _unique(this) );\n        },\n    \n    \n        unshift: __arrayProto.unshift\n    } );\n    \n    \n    _Api.extend = function ( scope, obj, ext )\n    {\n        // Only extend API instances and static properties of the API\n        if ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n            return;\n        }\n    \n        var\n            i, ien,\n            j, jen,\n            struct, inner,\n            methodScoping = function ( scope, fn, struc ) {\n                return function () {\n                    var ret = fn.apply( scope, arguments );\n    \n                    // Method extension\n                    _Api.extend( ret, ret, struc.methodExt );\n                    return ret;\n                };\n            };\n    \n        for ( i=0, ien=ext.length ; i<ien ; i++ ) {\n            struct = ext[i];\n    \n            // Value\n            obj[ struct.name ] = typeof struct.val === 'function' ?\n                methodScoping( scope, struct.val, struct ) :\n                $.isPlainObject( struct.val ) ?\n                    {} :\n                    struct.val;\n    \n            obj[ struct.name ].__dt_wrapper = true;\n    \n            // Property extension\n            _Api.extend( scope, obj[ struct.name ], struct.propExt );\n        }\n    };\n    \n    \n    // @todo - Is there need for an augment function?\n    // _Api.augment = function ( inst, name )\n    // {\n    //  // Find src object in the structure from the name\n    //  var parts = name.split('.');\n    \n    //  _Api.extend( inst, obj );\n    // };\n    \n    \n    //     [\n    //       {\n    //         name:      'data'                -- string   - Property name\n    //         val:       function () {},       -- function - Api method (or undefined if just an object\n    //         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n    //         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n    //       },\n    //       {\n    //         name:     'row'\n    //         val:       {},\n    //         methodExt: [ ... ],\n    //         propExt:   [\n    //           {\n    //             name:      'data'\n    //             val:       function () {},\n    //             methodExt: [ ... ],\n    //             propExt:   [ ... ]\n    //           },\n    //           ...\n    //         ]\n    //       }\n    //     ]\n    \n    _Api.register = _api_register = function ( name, val )\n    {\n        if ( $.isArray( name ) ) {\n            for ( var j=0, jen=name.length ; j<jen ; j++ ) {\n                _Api.register( name[j], val );\n            }\n            return;\n        }\n    \n        var\n            i, ien,\n            heir = name.split('.'),\n            struct = __apiStruct,\n            key, method;\n    \n        var find = function ( src, name ) {\n            for ( var i=0, ien=src.length ; i<ien ; i++ ) {\n                if ( src[i].name === name ) {\n                    return src[i];\n                }\n            }\n            return null;\n        };\n    \n        for ( i=0, ien=heir.length ; i<ien ; i++ ) {\n            method = heir[i].indexOf('()') !== -1;\n            key = method ?\n                heir[i].replace('()', '') :\n                heir[i];\n    \n            var src = find( struct, key );\n            if ( ! src ) {\n                src = {\n                    name:      key,\n                    val:       {},\n                    methodExt: [],\n                    propExt:   []\n                };\n                struct.push( src );\n            }\n    \n            if ( i === ien-1 ) {\n                src.val = val;\n            }\n            else {\n                struct = method ?\n                    src.methodExt :\n                    src.propExt;\n            }\n        }\n    };\n    \n    \n    _Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n        _Api.register( pluralName, val );\n    \n        _Api.register( singularName, function () {\n            var ret = val.apply( this, arguments );\n    \n            if ( ret === this ) {\n                // Returned item is the API instance that was passed in, return it\n                return this;\n            }\n            else if ( ret instanceof _Api ) {\n                // New API instance returned, want the value from the first item\n                // in the returned array for the singular result.\n                return ret.length ?\n                    $.isArray( ret[0] ) ?\n                        new _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n                        ret[0] :\n                    undefined;\n            }\n    \n            // Non-API return - just fire it back\n            return ret;\n        } );\n    };\n    \n    \n    /**\n     * Selector for HTML tables. Apply the given selector to the give array of\n     * DataTables settings objects.\n     *\n     * @param {string|integer} [selector] jQuery selector string or integer\n     * @param  {array} Array of DataTables settings objects to be filtered\n     * @return {array}\n     * @ignore\n     */\n    var __table_selector = function ( selector, a )\n    {\n        // Integer is used to pick out a table by index\n        if ( typeof selector === 'number' ) {\n            return [ a[ selector ] ];\n        }\n    \n        // Perform a jQuery selector on the table nodes\n        var nodes = $.map( a, function (el, i) {\n            return el.nTable;\n        } );\n    \n        return $(nodes)\n            .filter( selector )\n            .map( function (i) {\n                // Need to translate back from the table node to the settings\n                var idx = $.inArray( this, nodes );\n                return a[ idx ];\n            } )\n            .toArray();\n    };\n    \n    \n    \n    /**\n     * Context selector for the API's context (i.e. the tables the API instance\n     * refers to.\n     *\n     * @name    DataTable.Api#tables\n     * @param {string|integer} [selector] Selector to pick which tables the iterator\n     *   should operate on. If not given, all tables in the current context are\n     *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n     *   select multiple tables or as an integer to select a single table.\n     * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n     */\n    _api_register( 'tables()', function ( selector ) {\n        // A new instance is created if there was a selector specified\n        return selector ?\n            new _Api( __table_selector( selector, this.context ) ) :\n            this;\n    } );\n    \n    \n    _api_register( 'table()', function ( selector ) {\n        var tables = this.tables( selector );\n        var ctx = tables.context;\n    \n        // Truncate to the first matched table\n        return ctx.length ?\n            new _Api( ctx[0] ) :\n            tables;\n    } );\n    \n    \n    _api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\n        return this.iterator( 'table', function ( ctx ) {\n            return ctx.nTable;\n        }, 1 );\n    } );\n    \n    \n    _api_registerPlural( 'tables().body()', 'table().body()' , function () {\n        return this.iterator( 'table', function ( ctx ) {\n            return ctx.nTBody;\n        }, 1 );\n    } );\n    \n    \n    _api_registerPlural( 'tables().header()', 'table().header()' , function () {\n        return this.iterator( 'table', function ( ctx ) {\n            return ctx.nTHead;\n        }, 1 );\n    } );\n    \n    \n    _api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\n        return this.iterator( 'table', function ( ctx ) {\n            return ctx.nTFoot;\n        }, 1 );\n    } );\n    \n    \n    _api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n        return this.iterator( 'table', function ( ctx ) {\n            return ctx.nTableWrapper;\n        }, 1 );\n    } );\n    \n    \n    \n    /**\n     * Redraw the tables in the current context.\n     */\n    _api_register( 'draw()', function ( paging ) {\n        return this.iterator( 'table', function ( settings ) {\n            if ( paging === 'page' ) {\n                _fnDraw( settings );\n            }\n            else {\n                if ( typeof paging === 'string' ) {\n                    paging = paging === 'full-hold' ?\n                        false :\n                        true;\n                }\n    \n                _fnReDraw( settings, paging===false );\n            }\n        } );\n    } );\n    \n    \n    \n    /**\n     * Get the current page index.\n     *\n     * @return {integer} Current page index (zero based)\n     *//**\n     * Set the current page.\n     *\n     * Note that if you attempt to show a page which does not exist, DataTables will\n     * not throw an error, but rather reset the paging.\n     *\n     * @param {integer|string} action The paging action to take. This can be one of:\n     *  * `integer` - The page index to jump to\n     *  * `string` - An action to take:\n     *    * `first` - Jump to first page.\n     *    * `next` - Jump to the next page\n     *    * `previous` - Jump to previous page\n     *    * `last` - Jump to the last page.\n     * @returns {DataTables.Api} this\n     */\n    _api_register( 'page()', function ( action ) {\n        if ( action === undefined ) {\n            return this.page.info().page; // not an expensive call\n        }\n    \n        // else, have an action to take on all tables\n        return this.iterator( 'table', function ( settings ) {\n            _fnPageChange( settings, action );\n        } );\n    } );\n    \n    \n    /**\n     * Paging information for the first table in the current context.\n     *\n     * If you require paging information for another table, use the `table()` method\n     * with a suitable selector.\n     *\n     * @return {object} Object with the following properties set:\n     *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n     *  * `pages` - Total number of pages\n     *  * `start` - Display index for the first record shown on the current page\n     *  * `end` - Display index for the last record shown on the current page\n     *  * `length` - Display length (number of records). Note that generally `start\n     *    + length = end`, but this is not always true, for example if there are\n     *    only 2 records to show on the final page, with a length of 10.\n     *  * `recordsTotal` - Full data set length\n     *  * `recordsDisplay` - Data set length once the current filtering criterion\n     *    are applied.\n     */\n    _api_register( 'page.info()', function ( action ) {\n        if ( this.context.length === 0 ) {\n            return undefined;\n        }\n    \n        var\n            settings   = this.context[0],\n            start      = settings._iDisplayStart,\n            len        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n            visRecords = settings.fnRecordsDisplay(),\n            all        = len === -1;\n    \n        return {\n            \"page\":           all ? 0 : Math.floor( start / len ),\n            \"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n            \"start\":          start,\n            \"end\":            settings.fnDisplayEnd(),\n            \"length\":         len,\n            \"recordsTotal\":   settings.fnRecordsTotal(),\n            \"recordsDisplay\": visRecords,\n            \"serverSide\":     _fnDataSource( settings ) === 'ssp'\n        };\n    } );\n    \n    \n    /**\n     * Get the current page length.\n     *\n     * @return {integer} Current page length. Note `-1` indicates that all records\n     *   are to be shown.\n     *//**\n     * Set the current page length.\n     *\n     * @param {integer} Page length to set. Use `-1` to show all records.\n     * @returns {DataTables.Api} this\n     */\n    _api_register( 'page.len()', function ( len ) {\n        // Note that we can't call this function 'length()' because `length`\n        // is a Javascript property of functions which defines how many arguments\n        // the function expects.\n        if ( len === undefined ) {\n            return this.context.length !== 0 ?\n                this.context[0]._iDisplayLength :\n                undefined;\n        }\n    \n        // else, set the page length\n        return this.iterator( 'table', function ( settings ) {\n            _fnLengthChange( settings, len );\n        } );\n    } );\n    \n    \n    \n    var __reload = function ( settings, holdPosition, callback ) {\n        // Use the draw event to trigger a callback\n        if ( callback ) {\n            var api = new _Api( settings );\n    \n            api.one( 'draw', function () {\n                callback( api.ajax.json() );\n            } );\n        }\n    \n        if ( _fnDataSource( settings ) == 'ssp' ) {\n            _fnReDraw( settings, holdPosition );\n        }\n        else {\n            _fnProcessingDisplay( settings, true );\n    \n            // Cancel an existing request\n            var xhr = settings.jqXHR;\n            if ( xhr && xhr.readyState !== 4 ) {\n                xhr.abort();\n            }\n    \n            // Trigger xhr\n            _fnBuildAjax( settings, [], function( json ) {\n                _fnClearTable( settings );\n    \n                var data = _fnAjaxDataSrc( settings, json );\n                for ( var i=0, ien=data.length ; i<ien ; i++ ) {\n                    _fnAddData( settings, data[i] );\n                }\n    \n                _fnReDraw( settings, holdPosition );\n                _fnProcessingDisplay( settings, false );\n            } );\n        }\n    };\n    \n    \n    /**\n     * Get the JSON response from the last Ajax request that DataTables made to the\n     * server. Note that this returns the JSON from the first table in the current\n     * context.\n     *\n     * @return {object} JSON received from the server.\n     */\n    _api_register( 'ajax.json()', function () {\n        var ctx = this.context;\n    \n        if ( ctx.length > 0 ) {\n            return ctx[0].json;\n        }\n    \n        // else return undefined;\n    } );\n    \n    \n    /**\n     * Get the data submitted in the last Ajax request\n     */\n    _api_register( 'ajax.params()', function () {\n        var ctx = this.context;\n    \n        if ( ctx.length > 0 ) {\n            return ctx[0].oAjaxData;\n        }\n    \n        // else return undefined;\n    } );\n    \n    \n    /**\n     * Reload tables from the Ajax data source. Note that this function will\n     * automatically re-draw the table when the remote data has been loaded.\n     *\n     * @param {boolean} [reset=true] Reset (default) or hold the current paging\n     *   position. A full re-sort and re-filter is performed when this method is\n     *   called, which is why the pagination reset is the default action.\n     * @returns {DataTables.Api} this\n     */\n    _api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n        return this.iterator( 'table', function (settings) {\n            __reload( settings, resetPaging===false, callback );\n        } );\n    } );\n    \n    \n    /**\n     * Get the current Ajax URL. Note that this returns the URL from the first\n     * table in the current context.\n     *\n     * @return {string} Current Ajax source URL\n     *//**\n     * Set the Ajax URL. Note that this will set the URL for all tables in the\n     * current context.\n     *\n     * @param {string} url URL to set.\n     * @returns {DataTables.Api} this\n     */\n    _api_register( 'ajax.url()', function ( url ) {\n        var ctx = this.context;\n    \n        if ( url === undefined ) {\n            // get\n            if ( ctx.length === 0 ) {\n                return undefined;\n            }\n            ctx = ctx[0];\n    \n            return ctx.ajax ?\n                $.isPlainObject( ctx.ajax ) ?\n                    ctx.ajax.url :\n                    ctx.ajax :\n                ctx.sAjaxSource;\n        }\n    \n        // set\n        return this.iterator( 'table', function ( settings ) {\n            if ( $.isPlainObject( settings.ajax ) ) {\n                settings.ajax.url = url;\n            }\n            else {\n                settings.ajax = url;\n            }\n            // No need to consider sAjaxSource here since DataTables gives priority\n            // to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n            // value of `sAjaxSource` redundant.\n        } );\n    } );\n    \n    \n    /**\n     * Load data from the newly set Ajax URL. Note that this method is only\n     * available when `ajax.url()` is used to set a URL. Additionally, this method\n     * has the same effect as calling `ajax.reload()` but is provided for\n     * convenience when setting a new URL. Like `ajax.reload()` it will\n     * automatically redraw the table once the remote data has been loaded.\n     *\n     * @returns {DataTables.Api} this\n     */\n    _api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n        // Same as a reload, but makes sense to present it for easy access after a\n        // url change\n        return this.iterator( 'table', function ( ctx ) {\n            __reload( ctx, resetPaging===false, callback );\n        } );\n    } );\n    \n    \n    \n    \n    var _selector_run = function ( type, selector, selectFn, settings, opts )\n    {\n        var\n            out = [], res,\n            a, i, ien, j, jen,\n            selectorType = typeof selector;\n    \n        // Can't just check for isArray here, as an API or jQuery instance might be\n        // given with their array like look\n        if ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n            selector = [ selector ];\n        }\n    \n        for ( i=0, ien=selector.length ; i<ien ; i++ ) {\n            // Only split on simple strings - complex expressions will be jQuery selectors\n            a = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\n                selector[i].split(',') :\n                [ selector[i] ];\n    \n            for ( j=0, jen=a.length ; j<jen ; j++ ) {\n                res = selectFn( typeof a[j] === 'string' ? $.trim(a[j]) : a[j] );\n    \n                if ( res && res.length ) {\n                    out = out.concat( res );\n                }\n            }\n        }\n    \n        // selector extensions\n        var ext = _ext.selector[ type ];\n        if ( ext.length ) {\n            for ( i=0, ien=ext.length ; i<ien ; i++ ) {\n                out = ext[i]( settings, opts, out );\n            }\n        }\n    \n        return _unique( out );\n    };\n    \n    \n    var _selector_opts = function ( opts )\n    {\n        if ( ! opts ) {\n            opts = {};\n        }\n    \n        // Backwards compatibility for 1.9- which used the terminology filter rather\n        // than search\n        if ( opts.filter && opts.search === undefined ) {\n            opts.search = opts.filter;\n        }\n    \n        return $.extend( {\n            search: 'none',\n            order: 'current',\n            page: 'all'\n        }, opts );\n    };\n    \n    \n    var _selector_first = function ( inst )\n    {\n        // Reduce the API instance to the first item found\n        for ( var i=0, ien=inst.length ; i<ien ; i++ ) {\n            if ( inst[i].length > 0 ) {\n                // Assign the first element to the first item in the instance\n                // and truncate the instance and context\n                inst[0] = inst[i];\n                inst[0].length = 1;\n                inst.length = 1;\n                inst.context = [ inst.context[i] ];\n    \n                return inst;\n            }\n        }\n    \n        // Not found - return an empty instance\n        inst.length = 0;\n        return inst;\n    };\n    \n    \n    var _selector_row_indexes = function ( settings, opts )\n    {\n        var\n            i, ien, tmp, a=[],\n            displayFiltered = settings.aiDisplay,\n            displayMaster = settings.aiDisplayMaster;\n    \n        var\n            search = opts.search,  // none, applied, removed\n            order  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n            page   = opts.page;    // all, current\n    \n        if ( _fnDataSource( settings ) == 'ssp' ) {\n            // In server-side processing mode, most options are irrelevant since\n            // rows not shown don't exist and the index order is the applied order\n            // Removed is a special case - for consistency just return an empty\n            // array\n            return search === 'removed' ?\n                [] :\n                _range( 0, displayMaster.length );\n        }\n        else if ( page == 'current' ) {\n            // Current page implies that order=current and fitler=applied, since it is\n            // fairly senseless otherwise, regardless of what order and search actually\n            // are\n            for ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n                a.push( displayFiltered[i] );\n            }\n        }\n        else if ( order == 'current' || order == 'applied' ) {\n            a = search == 'none' ?\n                displayMaster.slice() :                      // no search\n                search == 'applied' ?\n                    displayFiltered.slice() :                // applied search\n                    $.map( displayMaster, function (el, i) { // removed search\n                        return $.inArray( el, displayFiltered ) === -1 ? el : null;\n                    } );\n        }\n        else if ( order == 'index' || order == 'original' ) {\n            for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n                if ( search == 'none' ) {\n                    a.push( i );\n                }\n                else { // applied | removed\n                    tmp = $.inArray( i, displayFiltered );\n    \n                    if ((tmp === -1 && search == 'removed') ||\n                        (tmp >= 0   && search == 'applied') )\n                    {\n                        a.push( i );\n                    }\n                }\n            }\n        }\n    \n        return a;\n    };\n    \n    \n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Rows\n     *\n     * {}          - no selector - use all available rows\n     * {integer}   - row aoData index\n     * {node}      - TR node\n     * {string}    - jQuery selector to apply to the TR elements\n     * {array}     - jQuery array of nodes, or simply an array of TR nodes\n     *\n     */\n    \n    \n    var __row_selector = function ( settings, selector, opts )\n    {\n        var rows;\n        var run = function ( sel ) {\n            var selInt = _intVal( sel );\n            var i, ien;\n    \n            // Short cut - selector is a number and no options provided (default is\n            // all records, so no need to check if the index is in there, since it\n            // must be - dev error if the index doesn't exist).\n            if ( selInt !== null && ! opts ) {\n                return [ selInt ];\n            }\n    \n            if ( ! rows ) {\n                rows = _selector_row_indexes( settings, opts );\n            }\n    \n            if ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\n                // Selector - integer\n                return [ selInt ];\n            }\n            else if ( sel === null || sel === undefined || sel === '' ) {\n                // Selector - none\n                return rows;\n            }\n    \n            // Selector - function\n            if ( typeof sel === 'function' ) {\n                return $.map( rows, function (idx) {\n                    var row = settings.aoData[ idx ];\n                    return sel( idx, row._aData, row.nTr ) ? idx : null;\n                } );\n            }\n    \n            // Get nodes in the order from the `rows` array with null values removed\n            var nodes = _removeEmpty(\n                _pluck_order( settings.aoData, rows, 'nTr' )\n            );\n    \n            // Selector - node\n            if ( sel.nodeName ) {\n                if ( sel._DT_RowIndex !== undefined ) {\n                    return [ sel._DT_RowIndex ]; // Property added by DT for fast lookup\n                }\n                else if ( sel._DT_CellIndex ) {\n                    return [ sel._DT_CellIndex.row ];\n                }\n                else {\n                    var host = $(sel).closest('*[data-dt-row]');\n                    return host.length ?\n                        [ host.data('dt-row') ] :\n                        [];\n                }\n            }\n    \n            // ID selector. Want to always be able to select rows by id, regardless\n            // of if the tr element has been created or not, so can't rely upon\n            // jQuery here - hence a custom implementation. This does not match\n            // Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n            // but to select it using a CSS selector engine (like Sizzle or\n            // querySelect) it would need to need to be escaped for some characters.\n            // DataTables simplifies this for row selectors since you can select\n            // only a row. A # indicates an id any anything that follows is the id -\n            // unescaped.\n            if ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n                // get row index from id\n                var rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n                if ( rowObj !== undefined ) {\n                    return [ rowObj.idx ];\n                }\n    \n                // need to fall through to jQuery in case there is DOM id that\n                // matches\n            }\n    \n            // Selector - jQuery selector string, array of nodes or jQuery object/\n            // As jQuery's .filter() allows jQuery objects to be passed in filter,\n            // it also allows arrays, so this will cope with all three options\n            return $(nodes)\n                .filter( sel )\n                .map( function () {\n                    return this._DT_RowIndex;\n                } )\n                .toArray();\n        };\n    \n        return _selector_run( 'row', selector, run, settings, opts );\n    };\n    \n    \n    _api_register( 'rows()', function ( selector, opts ) {\n        // argument shifting\n        if ( selector === undefined ) {\n            selector = '';\n        }\n        else if ( $.isPlainObject( selector ) ) {\n            opts = selector;\n            selector = '';\n        }\n    \n        opts = _selector_opts( opts );\n    \n        var inst = this.iterator( 'table', function ( settings ) {\n            return __row_selector( settings, selector, opts );\n        }, 1 );\n    \n        // Want argument shifting here and in __row_selector?\n        inst.selector.rows = selector;\n        inst.selector.opts = opts;\n    \n        return inst;\n    } );\n    \n    _api_register( 'rows().nodes()', function () {\n        return this.iterator( 'row', function ( settings, row ) {\n            return settings.aoData[ row ].nTr || undefined;\n        }, 1 );\n    } );\n    \n    _api_register( 'rows().data()', function () {\n        return this.iterator( true, 'rows', function ( settings, rows ) {\n            return _pluck_order( settings.aoData, rows, '_aData' );\n        }, 1 );\n    } );\n    \n    _api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n        return this.iterator( 'row', function ( settings, row ) {\n            var r = settings.aoData[ row ];\n            return type === 'search' ? r._aFilterData : r._aSortData;\n        }, 1 );\n    } );\n    \n    _api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n        return this.iterator( 'row', function ( settings, row ) {\n            _fnInvalidate( settings, row, src );\n        } );\n    } );\n    \n    _api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n        return this.iterator( 'row', function ( settings, row ) {\n            return row;\n        }, 1 );\n    } );\n    \n    _api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n        var a = [];\n        var context = this.context;\n    \n        // `iterator` will drop undefined values, but in this case we want them\n        for ( var i=0, ien=context.length ; i<ien ; i++ ) {\n            for ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n                var id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n                a.push( (hash === true ? '#' : '' )+ id );\n            }\n        }\n    \n        return new _Api( context, a );\n    } );\n    \n    _api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n        var that = this;\n    \n        this.iterator( 'row', function ( settings, row, thatIdx ) {\n            var data = settings.aoData;\n            var rowData = data[ row ];\n            var i, ien, j, jen;\n            var loopRow, loopCells;\n    \n            data.splice( row, 1 );\n    \n            // Update the cached indexes\n            for ( i=0, ien=data.length ; i<ien ; i++ ) {\n                loopRow = data[i];\n                loopCells = loopRow.anCells;\n    \n                // Rows\n                if ( loopRow.nTr !== null ) {\n                    loopRow.nTr._DT_RowIndex = i;\n                }\n    \n                // Cells\n                if ( loopCells !== null ) {\n                    for ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\n                        loopCells[j]._DT_CellIndex.row = i;\n                    }\n                }\n            }\n    \n            // Delete from the display arrays\n            _fnDeleteIndex( settings.aiDisplayMaster, row );\n            _fnDeleteIndex( settings.aiDisplay, row );\n            _fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\n    \n            // Check for an 'overflow' they case for displaying the table\n            _fnLengthOverflow( settings );\n    \n            // Remove the row's ID reference if there is one\n            var id = settings.rowIdFn( rowData._aData );\n            if ( id !== undefined ) {\n                delete settings.aIds[ id ];\n            }\n        } );\n    \n        this.iterator( 'table', function ( settings ) {\n            for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n                settings.aoData[i].idx = i;\n            }\n        } );\n    \n        return this;\n    } );\n    \n    \n    _api_register( 'rows.add()', function ( rows ) {\n        var newRows = this.iterator( 'table', function ( settings ) {\n                var row, i, ien;\n                var out = [];\n    \n                for ( i=0, ien=rows.length ; i<ien ; i++ ) {\n                    row = rows[i];\n    \n                    if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n                        out.push( _fnAddTr( settings, row )[0] );\n                    }\n                    else {\n                        out.push( _fnAddData( settings, row ) );\n                    }\n                }\n    \n                return out;\n            }, 1 );\n    \n        // Return an Api.rows() extended instance, so rows().nodes() etc can be used\n        var modRows = this.rows( -1 );\n        modRows.pop();\n        $.merge( modRows, newRows );\n    \n        return modRows;\n    } );\n    \n    \n    \n    \n    \n    /**\n     *\n     */\n    _api_register( 'row()', function ( selector, opts ) {\n        return _selector_first( this.rows( selector, opts ) );\n    } );\n    \n    \n    _api_register( 'row().data()', function ( data ) {\n        var ctx = this.context;\n    \n        if ( data === undefined ) {\n            // Get\n            return ctx.length && this.length ?\n                ctx[0].aoData[ this[0] ]._aData :\n                undefined;\n        }\n    \n        // Set\n        ctx[0].aoData[ this[0] ]._aData = data;\n    \n        // Automatically invalidate\n        _fnInvalidate( ctx[0], this[0], 'data' );\n    \n        return this;\n    } );\n    \n    \n    _api_register( 'row().node()', function () {\n        var ctx = this.context;\n    \n        return ctx.length && this.length ?\n            ctx[0].aoData[ this[0] ].nTr || null :\n            null;\n    } );\n    \n    \n    _api_register( 'row.add()', function ( row ) {\n        // Allow a jQuery object to be passed in - only a single row is added from\n        // it though - the first element in the set\n        if ( row instanceof $ && row.length ) {\n            row = row[0];\n        }\n    \n        var rows = this.iterator( 'table', function ( settings ) {\n            if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n                return _fnAddTr( settings, row )[0];\n            }\n            return _fnAddData( settings, row );\n        } );\n    \n        // Return an Api.rows() extended instance, with the newly added row selected\n        return this.row( rows[0] );\n    } );\n    \n    \n    \n    var __details_add = function ( ctx, row, data, klass )\n    {\n        // Convert to array of TR elements\n        var rows = [];\n        var addRow = function ( r, k ) {\n            // Recursion to allow for arrays of jQuery objects\n            if ( $.isArray( r ) || r instanceof $ ) {\n                for ( var i=0, ien=r.length ; i<ien ; i++ ) {\n                    addRow( r[i], k );\n                }\n                return;\n            }\n    \n            // If we get a TR element, then just add it directly - up to the dev\n            // to add the correct number of columns etc\n            if ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n                rows.push( r );\n            }\n            else {\n                // Otherwise create a row with a wrapper\n                var created = $('<tr><td/></tr>').addClass( k );\n                $('td', created)\n                    .addClass( k )\n                    .html( r )\n                    [0].colSpan = _fnVisbleColumns( ctx );\n    \n                rows.push( created[0] );\n            }\n        };\n    \n        addRow( data, klass );\n    \n        if ( row._details ) {\n            row._details.detach();\n        }\n    \n        row._details = $(rows);\n    \n        // If the children were already shown, that state should be retained\n        if ( row._detailsShow ) {\n            row._details.insertAfter( row.nTr );\n        }\n    };\n    \n    \n    var __details_remove = function ( api, idx )\n    {\n        var ctx = api.context;\n    \n        if ( ctx.length ) {\n            var row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n    \n            if ( row && row._details ) {\n                row._details.remove();\n    \n                row._detailsShow = undefined;\n                row._details = undefined;\n            }\n        }\n    };\n    \n    \n    var __details_display = function ( api, show ) {\n        var ctx = api.context;\n    \n        if ( ctx.length && api.length ) {\n            var row = ctx[0].aoData[ api[0] ];\n    \n            if ( row._details ) {\n                row._detailsShow = show;\n    \n                if ( show ) {\n                    row._details.insertAfter( row.nTr );\n                }\n                else {\n                    row._details.detach();\n                }\n    \n                __details_events( ctx[0] );\n            }\n        }\n    };\n    \n    \n    var __details_events = function ( settings )\n    {\n        var api = new _Api( settings );\n        var namespace = '.dt.DT_details';\n        var drawEvent = 'draw'+namespace;\n        var colvisEvent = 'column-visibility'+namespace;\n        var destroyEvent = 'destroy'+namespace;\n        var data = settings.aoData;\n    \n        api.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n    \n        if ( _pluck( data, '_details' ).length > 0 ) {\n            // On each draw, insert the required elements into the document\n            api.on( drawEvent, function ( e, ctx ) {\n                if ( settings !== ctx ) {\n                    return;\n                }\n    \n                api.rows( {page:'current'} ).eq(0).each( function (idx) {\n                    // Internal data grab\n                    var row = data[ idx ];\n    \n                    if ( row._detailsShow ) {\n                        row._details.insertAfter( row.nTr );\n                    }\n                } );\n            } );\n    \n            // Column visibility change - update the colspan\n            api.on( colvisEvent, function ( e, ctx, idx, vis ) {\n                if ( settings !== ctx ) {\n                    return;\n                }\n    \n                // Update the colspan for the details rows (note, only if it already has\n                // a colspan)\n                var row, visible = _fnVisbleColumns( ctx );\n    \n                for ( var i=0, ien=data.length ; i<ien ; i++ ) {\n                    row = data[i];\n    \n                    if ( row._details ) {\n                        row._details.children('td[colspan]').attr('colspan', visible );\n                    }\n                }\n            } );\n    \n            // Table destroyed - nuke any child rows\n            api.on( destroyEvent, function ( e, ctx ) {\n                if ( settings !== ctx ) {\n                    return;\n                }\n    \n                for ( var i=0, ien=data.length ; i<ien ; i++ ) {\n                    if ( data[i]._details ) {\n                        __details_remove( api, i );\n                    }\n                }\n            } );\n        }\n    };\n    \n    // Strings for the method names to help minification\n    var _emp = '';\n    var _child_obj = _emp+'row().child';\n    var _child_mth = _child_obj+'()';\n    \n    // data can be:\n    //  tr\n    //  string\n    //  jQuery or array of any of the above\n    _api_register( _child_mth, function ( data, klass ) {\n        var ctx = this.context;\n    \n        if ( data === undefined ) {\n            // get\n            return ctx.length && this.length ?\n                ctx[0].aoData[ this[0] ]._details :\n                undefined;\n        }\n        else if ( data === true ) {\n            // show\n            this.child.show();\n        }\n        else if ( data === false ) {\n            // remove\n            __details_remove( this );\n        }\n        else if ( ctx.length && this.length ) {\n            // set\n            __details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n        }\n    \n        return this;\n    } );\n    \n    \n    _api_register( [\n        _child_obj+'.show()',\n        _child_mth+'.show()' // only when `child()` was called with parameters (without\n    ], function ( show ) {   // it returns an object and this method is not executed)\n        __details_display( this, true );\n        return this;\n    } );\n    \n    \n    _api_register( [\n        _child_obj+'.hide()',\n        _child_mth+'.hide()' // only when `child()` was called with parameters (without\n    ], function () {         // it returns an object and this method is not executed)\n        __details_display( this, false );\n        return this;\n    } );\n    \n    \n    _api_register( [\n        _child_obj+'.remove()',\n        _child_mth+'.remove()' // only when `child()` was called with parameters (without\n    ], function () {           // it returns an object and this method is not executed)\n        __details_remove( this );\n        return this;\n    } );\n    \n    \n    _api_register( _child_obj+'.isShown()', function () {\n        var ctx = this.context;\n    \n        if ( ctx.length && this.length ) {\n            // _detailsShown as false or undefined will fall through to return false\n            return ctx[0].aoData[ this[0] ]._detailsShow || false;\n        }\n        return false;\n    } );\n    \n    \n    \n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Columns\n     *\n     * {integer}           - column index (>=0 count from left, <0 count from right)\n     * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n     * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n     * \"{string}:name\"     - column name\n     * \"{string}\"          - jQuery selector on column header nodes\n     *\n     */\n    \n    // can be an array of these items, comma separated list, or an array of comma\n    // separated lists\n    \n    var __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n    \n    \n    // r1 and r2 are redundant - but it means that the parameters match for the\n    // iterator callback in columns().data()\n    var __columnData = function ( settings, column, r1, r2, rows ) {\n        var a = [];\n        for ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n            a.push( _fnGetCellData( settings, rows[row], column ) );\n        }\n        return a;\n    };\n    \n    \n    var __column_selector = function ( settings, selector, opts )\n    {\n        var\n            columns = settings.aoColumns,\n            names = _pluck( columns, 'sName' ),\n            nodes = _pluck( columns, 'nTh' );\n    \n        var run = function ( s ) {\n            var selInt = _intVal( s );\n    \n            // Selector - all\n            if ( s === '' ) {\n                return _range( columns.length );\n            }\n    \n            // Selector - index\n            if ( selInt !== null ) {\n                return [ selInt >= 0 ?\n                    selInt : // Count from left\n                    columns.length + selInt // Count from right (+ because its a negative value)\n                ];\n            }\n    \n            // Selector = function\n            if ( typeof s === 'function' ) {\n                var rows = _selector_row_indexes( settings, opts );\n    \n                return $.map( columns, function (col, idx) {\n                    return s(\n                            idx,\n                            __columnData( settings, idx, 0, 0, rows ),\n                            nodes[ idx ]\n                        ) ? idx : null;\n                } );\n            }\n    \n            // jQuery or string selector\n            var match = typeof s === 'string' ?\n                s.match( __re_column_selector ) :\n                '';\n    \n            if ( match ) {\n                switch( match[2] ) {\n                    case 'visIdx':\n                    case 'visible':\n                        var idx = parseInt( match[1], 10 );\n                        // Visible index given, convert to column index\n                        if ( idx < 0 ) {\n                            // Counting from the right\n                            var visColumns = $.map( columns, function (col,i) {\n                                return col.bVisible ? i : null;\n                            } );\n                            return [ visColumns[ visColumns.length + idx ] ];\n                        }\n                        // Counting from the left\n                        return [ _fnVisibleToColumnIndex( settings, idx ) ];\n    \n                    case 'name':\n                        // match by name. `names` is column index complete and in order\n                        return $.map( names, function (name, i) {\n                            return name === match[1] ? i : null;\n                        } );\n    \n                    default:\n                        return [];\n                }\n            }\n    \n            // Cell in the table body\n            if ( s.nodeName && s._DT_CellIndex ) {\n                return [ s._DT_CellIndex.column ];\n            }\n    \n            // jQuery selector on the TH elements for the columns\n            var jqResult = $( nodes )\n                .filter( s )\n                .map( function () {\n                    return $.inArray( this, nodes ); // `nodes` is column index complete and in order\n                } )\n                .toArray();\n    \n            if ( jqResult.length || ! s.nodeName ) {\n                return jqResult;\n            }\n    \n            // Otherwise a node which might have a `dt-column` data attribute, or be\n            // a child or such an element\n            var host = $(s).closest('*[data-dt-column]');\n            return host.length ?\n                [ host.data('dt-column') ] :\n                [];\n        };\n    \n        return _selector_run( 'column', selector, run, settings, opts );\n    };\n    \n    \n    var __setColumnVis = function ( settings, column, vis ) {\n        var\n            cols = settings.aoColumns,\n            col  = cols[ column ],\n            data = settings.aoData,\n            row, cells, i, ien, tr;\n    \n        // Get\n        if ( vis === undefined ) {\n            return col.bVisible;\n        }\n    \n        // Set\n        // No change\n        if ( col.bVisible === vis ) {\n            return;\n        }\n    \n        if ( vis ) {\n            // Insert column\n            // Need to decide if we should use appendChild or insertBefore\n            var insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\n    \n            for ( i=0, ien=data.length ; i<ien ; i++ ) {\n                tr = data[i].nTr;\n                cells = data[i].anCells;\n    \n                if ( tr ) {\n                    // insertBefore can act like appendChild if 2nd arg is null\n                    tr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n                }\n            }\n        }\n        else {\n            // Remove column\n            $( _pluck( settings.aoData, 'anCells', column ) ).detach();\n        }\n    \n        // Common actions\n        col.bVisible = vis;\n        _fnDrawHead( settings, settings.aoHeader );\n        _fnDrawHead( settings, settings.aoFooter );\n    \n        _fnSaveState( settings );\n    };\n    \n    \n    _api_register( 'columns()', function ( selector, opts ) {\n        // argument shifting\n        if ( selector === undefined ) {\n            selector = '';\n        }\n        else if ( $.isPlainObject( selector ) ) {\n            opts = selector;\n            selector = '';\n        }\n    \n        opts = _selector_opts( opts );\n    \n        var inst = this.iterator( 'table', function ( settings ) {\n            return __column_selector( settings, selector, opts );\n        }, 1 );\n    \n        // Want argument shifting here and in _row_selector?\n        inst.selector.cols = selector;\n        inst.selector.opts = opts;\n    \n        return inst;\n    } );\n    \n    _api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\n        return this.iterator( 'column', function ( settings, column ) {\n            return settings.aoColumns[column].nTh;\n        }, 1 );\n    } );\n    \n    _api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\n        return this.iterator( 'column', function ( settings, column ) {\n            return settings.aoColumns[column].nTf;\n        }, 1 );\n    } );\n    \n    _api_registerPlural( 'columns().data()', 'column().data()', function () {\n        return this.iterator( 'column-rows', __columnData, 1 );\n    } );\n    \n    _api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n        return this.iterator( 'column', function ( settings, column ) {\n            return settings.aoColumns[column].mData;\n        }, 1 );\n    } );\n    \n    _api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n        return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n            return _pluck_order( settings.aoData, rows,\n                type === 'search' ? '_aFilterData' : '_aSortData', column\n            );\n        }, 1 );\n    } );\n    \n    _api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n        return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n            return _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n        }, 1 );\n    } );\n    \n    _api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n        var ret = this.iterator( 'column', function ( settings, column ) {\n            if ( vis === undefined ) {\n                return settings.aoColumns[ column ].bVisible;\n            } // else\n            __setColumnVis( settings, column, vis );\n        } );\n    \n        // Group the column visibility changes\n        if ( vis !== undefined ) {\n            // Second loop once the first is done for events\n            this.iterator( 'column', function ( settings, column ) {\n                _fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n            } );\n    \n            if ( calc === undefined || calc ) {\n                this.columns.adjust();\n            }\n        }\n    \n        return ret;\n    } );\n    \n    _api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n        return this.iterator( 'column', function ( settings, column ) {\n            return type === 'visible' ?\n                _fnColumnIndexToVisible( settings, column ) :\n                column;\n        }, 1 );\n    } );\n    \n    _api_register( 'columns.adjust()', function () {\n        return this.iterator( 'table', function ( settings ) {\n            _fnAdjustColumnSizing( settings );\n        }, 1 );\n    } );\n    \n    _api_register( 'column.index()', function ( type, idx ) {\n        if ( this.context.length !== 0 ) {\n            var ctx = this.context[0];\n    \n            if ( type === 'fromVisible' || type === 'toData' ) {\n                return _fnVisibleToColumnIndex( ctx, idx );\n            }\n            else if ( type === 'fromData' || type === 'toVisible' ) {\n                return _fnColumnIndexToVisible( ctx, idx );\n            }\n        }\n    } );\n    \n    _api_register( 'column()', function ( selector, opts ) {\n        return _selector_first( this.columns( selector, opts ) );\n    } );\n    \n    \n    \n    var __cell_selector = function ( settings, selector, opts )\n    {\n        var data = settings.aoData;\n        var rows = _selector_row_indexes( settings, opts );\n        var cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n        var allCells = $( [].concat.apply([], cells) );\n        var row;\n        var columns = settings.aoColumns.length;\n        var a, i, ien, j, o, host;\n    \n        var run = function ( s ) {\n            var fnSelector = typeof s === 'function';\n    \n            if ( s === null || s === undefined || fnSelector ) {\n                // All cells and function selectors\n                a = [];\n    \n                for ( i=0, ien=rows.length ; i<ien ; i++ ) {\n                    row = rows[i];\n    \n                    for ( j=0 ; j<columns ; j++ ) {\n                        o = {\n                            row: row,\n                            column: j\n                        };\n    \n                        if ( fnSelector ) {\n                            // Selector - function\n                            host = data[ row ];\n    \n                            if ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n                                a.push( o );\n                            }\n                        }\n                        else {\n                            // Selector - all\n                            a.push( o );\n                        }\n                    }\n                }\n    \n                return a;\n            }\n            \n            // Selector - index\n            if ( $.isPlainObject( s ) ) {\n                return [s];\n            }\n    \n            // Selector - jQuery filtered cells\n            var jqResult = allCells\n                .filter( s )\n                .map( function (i, el) {\n                    return { // use a new object, in case someone changes the values\n                        row:    el._DT_CellIndex.row,\n                        column: el._DT_CellIndex.column\n                    };\n                } )\n                .toArray();\n    \n            if ( jqResult.length || ! s.nodeName ) {\n                return jqResult;\n            }\n    \n            // Otherwise the selector is a node, and there is one last option - the\n            // element might be a child of an element which has dt-row and dt-column\n            // data attributes\n            host = $(s).closest('*[data-dt-row]');\n            return host.length ?\n                [ {\n                    row: host.data('dt-row'),\n                    column: host.data('dt-column')\n                } ] :\n                [];\n        };\n    \n        return _selector_run( 'cell', selector, run, settings, opts );\n    };\n    \n    \n    \n    \n    _api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n        // Argument shifting\n        if ( $.isPlainObject( rowSelector ) ) {\n            // Indexes\n            if ( rowSelector.row === undefined ) {\n                // Selector options in first parameter\n                opts = rowSelector;\n                rowSelector = null;\n            }\n            else {\n                // Cell index objects in first parameter\n                opts = columnSelector;\n                columnSelector = null;\n            }\n        }\n        if ( $.isPlainObject( columnSelector ) ) {\n            opts = columnSelector;\n            columnSelector = null;\n        }\n    \n        // Cell selector\n        if ( columnSelector === null || columnSelector === undefined ) {\n            return this.iterator( 'table', function ( settings ) {\n                return __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n            } );\n        }\n    \n        // Row + column selector\n        var columns = this.columns( columnSelector, opts );\n        var rows = this.rows( rowSelector, opts );\n        var a, i, ien, j, jen;\n    \n        var cells = this.iterator( 'table', function ( settings, idx ) {\n            a = [];\n    \n            for ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n                for ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n                    a.push( {\n                        row:    rows[idx][i],\n                        column: columns[idx][j]\n                    } );\n                }\n            }\n    \n            return a;\n        }, 1 );\n    \n        $.extend( cells.selector, {\n            cols: columnSelector,\n            rows: rowSelector,\n            opts: opts\n        } );\n    \n        return cells;\n    } );\n    \n    \n    _api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n        return this.iterator( 'cell', function ( settings, row, column ) {\n            var data = settings.aoData[ row ];\n    \n            return data && data.anCells ?\n                data.anCells[ column ] :\n                undefined;\n        }, 1 );\n    } );\n    \n    \n    _api_register( 'cells().data()', function () {\n        return this.iterator( 'cell', function ( settings, row, column ) {\n            return _fnGetCellData( settings, row, column );\n        }, 1 );\n    } );\n    \n    \n    _api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n        type = type === 'search' ? '_aFilterData' : '_aSortData';\n    \n        return this.iterator( 'cell', function ( settings, row, column ) {\n            return settings.aoData[ row ][ type ][ column ];\n        }, 1 );\n    } );\n    \n    \n    _api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n        return this.iterator( 'cell', function ( settings, row, column ) {\n            return _fnGetCellData( settings, row, column, type );\n        }, 1 );\n    } );\n    \n    \n    _api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n        return this.iterator( 'cell', function ( settings, row, column ) {\n            return {\n                row: row,\n                column: column,\n                columnVisible: _fnColumnIndexToVisible( settings, column )\n            };\n        }, 1 );\n    } );\n    \n    \n    _api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n        return this.iterator( 'cell', function ( settings, row, column ) {\n            _fnInvalidate( settings, row, src, column );\n        } );\n    } );\n    \n    \n    \n    _api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n        return _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n    } );\n    \n    \n    _api_register( 'cell().data()', function ( data ) {\n        var ctx = this.context;\n        var cell = this[0];\n    \n        if ( data === undefined ) {\n            // Get\n            return ctx.length && cell.length ?\n                _fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n                undefined;\n        }\n    \n        // Set\n        _fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n        _fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n    \n        return this;\n    } );\n    \n    \n    \n    /**\n     * Get current ordering (sorting) that has been applied to the table.\n     *\n     * @returns {array} 2D array containing the sorting information for the first\n     *   table in the current context. Each element in the parent array represents\n     *   a column being sorted upon (i.e. multi-sorting with two columns would have\n     *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n     *   the column index that the sorting condition applies to, the second is the\n     *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n     *   index of the sorting order from the `column.sorting` initialisation array.\n     *//**\n     * Set the ordering for the table.\n     *\n     * @param {integer} order Column index to sort upon.\n     * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n     * @returns {DataTables.Api} this\n     *//**\n     * Set the ordering for the table.\n     *\n     * @param {array} order 1D array of sorting information to be applied.\n     * @param {array} [...] Optional additional sorting conditions\n     * @returns {DataTables.Api} this\n     *//**\n     * Set the ordering for the table.\n     *\n     * @param {array} order 2D array of sorting information to be applied.\n     * @returns {DataTables.Api} this\n     */\n    _api_register( 'order()', function ( order, dir ) {\n        var ctx = this.context;\n    \n        if ( order === undefined ) {\n            // get\n            return ctx.length !== 0 ?\n                ctx[0].aaSorting :\n                undefined;\n        }\n    \n        // set\n        if ( typeof order === 'number' ) {\n            // Simple column / direction passed in\n            order = [ [ order, dir ] ];\n        }\n        else if ( order.length && ! $.isArray( order[0] ) ) {\n            // Arguments passed in (list of 1D arrays)\n            order = Array.prototype.slice.call( arguments );\n        }\n        // otherwise a 2D array was passed in\n    \n        return this.iterator( 'table', function ( settings ) {\n            settings.aaSorting = order.slice();\n        } );\n    } );\n    \n    \n    /**\n     * Attach a sort listener to an element for a given column\n     *\n     * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n     *   listener to. This can take the form of a single DOM node, a jQuery\n     *   collection of nodes or a jQuery selector which will identify the node(s).\n     * @param {integer} column the column that a click on this node will sort on\n     * @param {function} [callback] callback function when sort is run\n     * @returns {DataTables.Api} this\n     */\n    _api_register( 'order.listener()', function ( node, column, callback ) {\n        return this.iterator( 'table', function ( settings ) {\n            _fnSortAttachListener( settings, node, column, callback );\n        } );\n    } );\n    \n    \n    _api_register( 'order.fixed()', function ( set ) {\n        if ( ! set ) {\n            var ctx = this.context;\n            var fixed = ctx.length ?\n                ctx[0].aaSortingFixed :\n                undefined;\n    \n            return $.isArray( fixed ) ?\n                { pre: fixed } :\n                fixed;\n        }\n    \n        return this.iterator( 'table', function ( settings ) {\n            settings.aaSortingFixed = $.extend( true, {}, set );\n        } );\n    } );\n    \n    \n    // Order by the selected column(s)\n    _api_register( [\n        'columns().order()',\n        'column().order()'\n    ], function ( dir ) {\n        var that = this;\n    \n        return this.iterator( 'table', function ( settings, i ) {\n            var sort = [];\n    \n            $.each( that[i], function (j, col) {\n                sort.push( [ col, dir ] );\n            } );\n    \n            settings.aaSorting = sort;\n        } );\n    } );\n    \n    \n    \n    _api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n        var ctx = this.context;\n    \n        if ( input === undefined ) {\n            // get\n            return ctx.length !== 0 ?\n                ctx[0].oPreviousSearch.sSearch :\n                undefined;\n        }\n    \n        // set\n        return this.iterator( 'table', function ( settings ) {\n            if ( ! settings.oFeatures.bFilter ) {\n                return;\n            }\n    \n            _fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\n                \"sSearch\": input+\"\",\n                \"bRegex\":  regex === null ? false : regex,\n                \"bSmart\":  smart === null ? true  : smart,\n                \"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n            } ), 1 );\n        } );\n    } );\n    \n    \n    _api_registerPlural(\n        'columns().search()',\n        'column().search()',\n        function ( input, regex, smart, caseInsen ) {\n            return this.iterator( 'column', function ( settings, column ) {\n                var preSearch = settings.aoPreSearchCols;\n    \n                if ( input === undefined ) {\n                    // get\n                    return preSearch[ column ].sSearch;\n                }\n    \n                // set\n                if ( ! settings.oFeatures.bFilter ) {\n                    return;\n                }\n    \n                $.extend( preSearch[ column ], {\n                    \"sSearch\": input+\"\",\n                    \"bRegex\":  regex === null ? false : regex,\n                    \"bSmart\":  smart === null ? true  : smart,\n                    \"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n                } );\n    \n                _fnFilterComplete( settings, settings.oPreviousSearch, 1 );\n            } );\n        }\n    );\n    \n    /*\n     * State API methods\n     */\n    \n    _api_register( 'state()', function () {\n        return this.context.length ?\n            this.context[0].oSavedState :\n            null;\n    } );\n    \n    \n    _api_register( 'state.clear()', function () {\n        return this.iterator( 'table', function ( settings ) {\n            // Save an empty object\n            settings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n        } );\n    } );\n    \n    \n    _api_register( 'state.loaded()', function () {\n        return this.context.length ?\n            this.context[0].oLoadedState :\n            null;\n    } );\n    \n    \n    _api_register( 'state.save()', function () {\n        return this.iterator( 'table', function ( settings ) {\n            _fnSaveState( settings );\n        } );\n    } );\n    \n    \n    \n    /**\n     * Provide a common method for plug-ins to check the version of DataTables being\n     * used, in order to ensure compatibility.\n     *\n     *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n     *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n     *  @returns {boolean} true if this version of DataTables is greater or equal to\n     *    the required version, or false if this version of DataTales is not\n     *    suitable\n     *  @static\n     *  @dtopt API-Static\n     *\n     *  @example\n     *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n     */\n    DataTable.versionCheck = DataTable.fnVersionCheck = function( version )\n    {\n        var aThis = DataTable.version.split('.');\n        var aThat = version.split('.');\n        var iThis, iThat;\n    \n        for ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n            iThis = parseInt( aThis[i], 10 ) || 0;\n            iThat = parseInt( aThat[i], 10 ) || 0;\n    \n            // Parts are the same, keep comparing\n            if (iThis === iThat) {\n                continue;\n            }\n    \n            // Parts are different, return immediately\n            return iThis > iThat;\n        }\n    \n        return true;\n    };\n    \n    \n    /**\n     * Check if a `<table>` node is a DataTable table already or not.\n     *\n     *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n     *      selector for the table to test. Note that if more than more than one\n     *      table is passed on, only the first will be checked\n     *  @returns {boolean} true the table given is a DataTable, or false otherwise\n     *  @static\n     *  @dtopt API-Static\n     *\n     *  @example\n     *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n     *      $('#example').dataTable();\n     *    }\n     */\n    DataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\n    {\n        var t = $(table).get(0);\n        var is = false;\n    \n        if ( table instanceof DataTable.Api ) {\n            return true;\n        }\n    \n        $.each( DataTable.settings, function (i, o) {\n            var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n            var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n    \n            if ( o.nTable === t || head === t || foot === t ) {\n                is = true;\n            }\n        } );\n    \n        return is;\n    };\n    \n    \n    /**\n     * Get all DataTable tables that have been initialised - optionally you can\n     * select to get only currently visible tables.\n     *\n     *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n     *    or visible tables only.\n     *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n     *    DataTables\n     *  @static\n     *  @dtopt API-Static\n     *\n     *  @example\n     *    $.each( $.fn.dataTable.tables(true), function () {\n     *      $(table).DataTable().columns.adjust();\n     *    } );\n     */\n    DataTable.tables = DataTable.fnTables = function ( visible )\n    {\n        var api = false;\n    \n        if ( $.isPlainObject( visible ) ) {\n            api = visible.api;\n            visible = visible.visible;\n        }\n    \n        var a = $.map( DataTable.settings, function (o) {\n            if ( !visible || (visible && $(o.nTable).is(':visible')) ) {\n                return o.nTable;\n            }\n        } );\n    \n        return api ?\n            new _Api( a ) :\n            a;\n    };\n    \n    \n    /**\n     * Convert from camel case parameters to Hungarian notation. This is made public\n     * for the extensions to provide the same ability as DataTables core to accept\n     * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n     * parameters.\n     *\n     *  @param {object} src The model object which holds all parameters that can be\n     *    mapped.\n     *  @param {object} user The object to convert from camel case to Hungarian.\n     *  @param {boolean} force When set to `true`, properties which already have a\n     *    Hungarian value in the `user` object will be overwritten. Otherwise they\n     *    won't be.\n     */\n    DataTable.camelToHungarian = _fnCamelToHungarian;\n    \n    \n    \n    /**\n     *\n     */\n    _api_register( '$()', function ( selector, opts ) {\n        var\n            rows   = this.rows( opts ).nodes(), // Get all rows\n            jqRows = $(rows);\n    \n        return $( [].concat(\n            jqRows.filter( selector ).toArray(),\n            jqRows.find( selector ).toArray()\n        ) );\n    } );\n    \n    \n    // jQuery functions to operate on the tables\n    $.each( [ 'on', 'one', 'off' ], function (i, key) {\n        _api_register( key+'()', function ( /* event, handler */ ) {\n            var args = Array.prototype.slice.call(arguments);\n    \n            // Add the `dt` namespace automatically if it isn't already present\n            args[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\n                return ! e.match(/\\.dt\\b/) ?\n                    e+'.dt' :\n                    e;\n                } ).join( ' ' );\n    \n            var inst = $( this.tables().nodes() );\n            inst[key].apply( inst, args );\n            return this;\n        } );\n    } );\n    \n    \n    _api_register( 'clear()', function () {\n        return this.iterator( 'table', function ( settings ) {\n            _fnClearTable( settings );\n        } );\n    } );\n    \n    \n    _api_register( 'settings()', function () {\n        return new _Api( this.context, this.context );\n    } );\n    \n    \n    _api_register( 'init()', function () {\n        var ctx = this.context;\n        return ctx.length ? ctx[0].oInit : null;\n    } );\n    \n    \n    _api_register( 'data()', function () {\n        return this.iterator( 'table', function ( settings ) {\n            return _pluck( settings.aoData, '_aData' );\n        } ).flatten();\n    } );\n    \n    \n    _api_register( 'destroy()', function ( remove ) {\n        remove = remove || false;\n    \n        return this.iterator( 'table', function ( settings ) {\n            var orig      = settings.nTableWrapper.parentNode;\n            var classes   = settings.oClasses;\n            var table     = settings.nTable;\n            var tbody     = settings.nTBody;\n            var thead     = settings.nTHead;\n            var tfoot     = settings.nTFoot;\n            var jqTable   = $(table);\n            var jqTbody   = $(tbody);\n            var jqWrapper = $(settings.nTableWrapper);\n            var rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\n            var i, ien;\n    \n            // Flag to note that the table is currently being destroyed - no action\n            // should be taken\n            settings.bDestroying = true;\n    \n            // Fire off the destroy callbacks for plug-ins etc\n            _fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\n    \n            // If not being removed from the document, make all columns visible\n            if ( ! remove ) {\n                new _Api( settings ).columns().visible( true );\n            }\n    \n            // Blitz all `DT` namespaced events (these are internal events, the\n            // lowercase, `dt` events are user subscribed and they are responsible\n            // for removing them\n            jqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n            $(window).off('.DT-'+settings.sInstance);\n    \n            // When scrolling we had to break the table up - restore it\n            if ( table != thead.parentNode ) {\n                jqTable.children('thead').detach();\n                jqTable.append( thead );\n            }\n    \n            if ( tfoot && table != tfoot.parentNode ) {\n                jqTable.children('tfoot').detach();\n                jqTable.append( tfoot );\n            }\n    \n            settings.aaSorting = [];\n            settings.aaSortingFixed = [];\n            _fnSortingClasses( settings );\n    \n            $( rows ).removeClass( settings.asStripeClasses.join(' ') );\n    \n            $('th, td', thead).removeClass( classes.sSortable+' '+\n                classes.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\n            );\n    \n            if ( settings.bJUI ) {\n                $('th span.'+classes.sSortIcon+ ', td span.'+classes.sSortIcon, thead).detach();\n                $('th, td', thead).each( function () {\n                    var wrapper = $('div.'+classes.sSortJUIWrapper, this);\n                    $(this).append( wrapper.contents() );\n                    wrapper.detach();\n                } );\n            }\n    \n            // Add the TR elements back into the table in their original order\n            jqTbody.children().detach();\n            jqTbody.append( rows );\n    \n            // Remove the DataTables generated nodes, events and classes\n            var removedMethod = remove ? 'remove' : 'detach';\n            jqTable[ removedMethod ]();\n            jqWrapper[ removedMethod ]();\n    \n            // If we need to reattach the table to the document\n            if ( ! remove && orig ) {\n                // insertBefore acts like appendChild if !arg[1]\n                orig.insertBefore( table, settings.nTableReinsertBefore );\n    \n                // Restore the width of the original table - was read from the style property,\n                // so we can restore directly to that\n                jqTable\n                    .css( 'width', settings.sDestroyWidth )\n                    .removeClass( classes.sTable );\n    \n                // If the were originally stripe classes - then we add them back here.\n                // Note this is not fool proof (for example if not all rows had stripe\n                // classes - but it's a good effort without getting carried away\n                ien = settings.asDestroyStripes.length;\n    \n                if ( ien ) {\n                    jqTbody.children().each( function (i) {\n                        $(this).addClass( settings.asDestroyStripes[i % ien] );\n                    } );\n                }\n            }\n    \n            /* Remove the settings object from the settings array */\n            var idx = $.inArray( settings, DataTable.settings );\n            if ( idx !== -1 ) {\n                DataTable.settings.splice( idx, 1 );\n            }\n        } );\n    } );\n    \n    \n    // Add the `every()` method for rows, columns and cells in a compact form\n    $.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n        _api_register( type+'s().every()', function ( fn ) {\n            var opts = this.selector.opts;\n            var api = this;\n    \n            return this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\n                // Rows and columns:\n                //  arg1 - index\n                //  arg2 - table counter\n                //  arg3 - loop counter\n                //  arg4 - undefined\n                // Cells:\n                //  arg1 - row index\n                //  arg2 - column index\n                //  arg3 - table counter\n                //  arg4 - loop counter\n                fn.call(\n                    api[ type ](\n                        arg1,\n                        type==='cell' ? arg2 : opts,\n                        type==='cell' ? opts : undefined\n                    ),\n                    arg1, arg2, arg3, arg4\n                );\n            } );\n        } );\n    } );\n    \n    \n    // i18n method for extensions to be able to use the language object from the\n    // DataTable\n    _api_register( 'i18n()', function ( token, def, plural ) {\n        var ctx = this.context[0];\n        var resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n    \n        if ( resolved === undefined ) {\n            resolved = def;\n        }\n    \n        if ( plural !== undefined && $.isPlainObject( resolved ) ) {\n            resolved = resolved[ plural ] !== undefined ?\n                resolved[ plural ] :\n                resolved._;\n        }\n    \n        return resolved.replace( '%d', plural ); // nb: plural might be undefined,\n    } );\n\n    /**\n     * Version string for plug-ins to check compatibility. Allowed format is\n     * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n     * only for non-release builds. See http://semver.org/ for more information.\n     *  @member\n     *  @type string\n     *  @default Version number\n     */\n    DataTable.version = \"1.10.15\";\n\n    /**\n     * Private data store, containing all of the settings objects that are\n     * created for the tables on a given page.\n     *\n     * Note that the `DataTable.settings` object is aliased to\n     * `jQuery.fn.dataTableExt` through which it may be accessed and\n     * manipulated, or `jQuery.fn.dataTable.settings`.\n     *  @member\n     *  @type array\n     *  @default []\n     *  @private\n     */\n    DataTable.settings = [];\n\n    /**\n     * Object models container, for the various models that DataTables has\n     * available to it. These models define the objects that are used to hold\n     * the active state and configuration of the table.\n     *  @namespace\n     */\n    DataTable.models = {};\n    \n    \n    \n    /**\n     * Template object for the way in which DataTables holds information about\n     * search information for the global filter and individual column filters.\n     *  @namespace\n     */\n    DataTable.models.oSearch = {\n        /**\n         * Flag to indicate if the filtering should be case insensitive or not\n         *  @type boolean\n         *  @default true\n         */\n        \"bCaseInsensitive\": true,\n    \n        /**\n         * Applied search term\n         *  @type string\n         *  @default <i>Empty string</i>\n         */\n        \"sSearch\": \"\",\n    \n        /**\n         * Flag to indicate if the search term should be interpreted as a\n         * regular expression (true) or not (false) and therefore and special\n         * regex characters escaped.\n         *  @type boolean\n         *  @default false\n         */\n        \"bRegex\": false,\n    \n        /**\n         * Flag to indicate if DataTables is to use its smart filtering or not.\n         *  @type boolean\n         *  @default true\n         */\n        \"bSmart\": true\n    };\n    \n    \n    \n    \n    /**\n     * Template object for the way in which DataTables holds information about\n     * each individual row. This is the object format used for the settings\n     * aoData array.\n     *  @namespace\n     */\n    DataTable.models.oRow = {\n        /**\n         * TR element for the row\n         *  @type node\n         *  @default null\n         */\n        \"nTr\": null,\n    \n        /**\n         * Array of TD elements for each row. This is null until the row has been\n         * created.\n         *  @type array nodes\n         *  @default []\n         */\n        \"anCells\": null,\n    \n        /**\n         * Data object from the original data source for the row. This is either\n         * an array if using the traditional form of DataTables, or an object if\n         * using mData options. The exact type will depend on the passed in\n         * data from the data source, or will be an array if using DOM a data\n         * source.\n         *  @type array|object\n         *  @default []\n         */\n        \"_aData\": [],\n    \n        /**\n         * Sorting data cache - this array is ostensibly the same length as the\n         * number of columns (although each index is generated only as it is\n         * needed), and holds the data that is used for sorting each column in the\n         * row. We do this cache generation at the start of the sort in order that\n         * the formatting of the sort data need be done only once for each cell\n         * per sort. This array should not be read from or written to by anything\n         * other than the master sorting methods.\n         *  @type array\n         *  @default null\n         *  @private\n         */\n        \"_aSortData\": null,\n    \n        /**\n         * Per cell filtering data cache. As per the sort data cache, used to\n         * increase the performance of the filtering in DataTables\n         *  @type array\n         *  @default null\n         *  @private\n         */\n        \"_aFilterData\": null,\n    \n        /**\n         * Filtering data cache. This is the same as the cell filtering cache, but\n         * in this case a string rather than an array. This is easily computed with\n         * a join on `_aFilterData`, but is provided as a cache so the join isn't\n         * needed on every search (memory traded for performance)\n         *  @type array\n         *  @default null\n         *  @private\n         */\n        \"_sFilterRow\": null,\n    \n        /**\n         * Cache of the class name that DataTables has applied to the row, so we\n         * can quickly look at this variable rather than needing to do a DOM check\n         * on className for the nTr property.\n         *  @type string\n         *  @default <i>Empty string</i>\n         *  @private\n         */\n        \"_sRowStripe\": \"\",\n    \n        /**\n         * Denote if the original data source was from the DOM, or the data source\n         * object. This is used for invalidating data, so DataTables can\n         * automatically read data from the original source, unless uninstructed\n         * otherwise.\n         *  @type string\n         *  @default null\n         *  @private\n         */\n        \"src\": null,\n    \n        /**\n         * Index in the aoData array. This saves an indexOf lookup when we have the\n         * object, but want to know the index\n         *  @type integer\n         *  @default -1\n         *  @private\n         */\n        \"idx\": -1\n    };\n    \n    \n    /**\n     * Template object for the column information object in DataTables. This object\n     * is held in the settings aoColumns array and contains all the information that\n     * DataTables needs about each individual column.\n     *\n     * Note that this object is related to {@link DataTable.defaults.column}\n     * but this one is the internal data store for DataTables's cache of columns.\n     * It should NOT be manipulated outside of DataTables. Any configuration should\n     * be done through the initialisation options.\n     *  @namespace\n     */\n    DataTable.models.oColumn = {\n        /**\n         * Column index. This could be worked out on-the-fly with $.inArray, but it\n         * is faster to just hold it as a variable\n         *  @type integer\n         *  @default null\n         */\n        \"idx\": null,\n    \n        /**\n         * A list of the columns that sorting should occur on when this column\n         * is sorted. That this property is an array allows multi-column sorting\n         * to be defined for a column (for example first name / last name columns\n         * would benefit from this). The values are integers pointing to the\n         * columns to be sorted on (typically it will be a single integer pointing\n         * at itself, but that doesn't need to be the case).\n         *  @type array\n         */\n        \"aDataSort\": null,\n    \n        /**\n         * Define the sorting directions that are applied to the column, in sequence\n         * as the column is repeatedly sorted upon - i.e. the first value is used\n         * as the sorting direction when the column if first sorted (clicked on).\n         * Sort it again (click again) and it will move on to the next index.\n         * Repeat until loop.\n         *  @type array\n         */\n        \"asSorting\": null,\n    \n        /**\n         * Flag to indicate if the column is searchable, and thus should be included\n         * in the filtering or not.\n         *  @type boolean\n         */\n        \"bSearchable\": null,\n    \n        /**\n         * Flag to indicate if the column is sortable or not.\n         *  @type boolean\n         */\n        \"bSortable\": null,\n    \n        /**\n         * Flag to indicate if the column is currently visible in the table or not\n         *  @type boolean\n         */\n        \"bVisible\": null,\n    \n        /**\n         * Store for manual type assignment using the `column.type` option. This\n         * is held in store so we can manipulate the column's `sType` property.\n         *  @type string\n         *  @default null\n         *  @private\n         */\n        \"_sManualType\": null,\n    \n        /**\n         * Flag to indicate if HTML5 data attributes should be used as the data\n         * source for filtering or sorting. True is either are.\n         *  @type boolean\n         *  @default false\n         *  @private\n         */\n        \"_bAttrSrc\": false,\n    \n        /**\n         * Developer definable function that is called whenever a cell is created (Ajax source,\n         * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n         * allowing you to modify the DOM element (add background colour for example) when the\n         * element is available.\n         *  @type function\n         *  @param {element} nTd The TD node that has been created\n         *  @param {*} sData The Data for the cell\n         *  @param {array|object} oData The data for the whole row\n         *  @param {int} iRow The row index for the aoData data store\n         *  @default null\n         */\n        \"fnCreatedCell\": null,\n    \n        /**\n         * Function to get data from a cell in a column. You should <b>never</b>\n         * access data directly through _aData internally in DataTables - always use\n         * the method attached to this property. It allows mData to function as\n         * required. This function is automatically assigned by the column\n         * initialisation method\n         *  @type function\n         *  @param {array|object} oData The data array/object for the array\n         *    (i.e. aoData[]._aData)\n         *  @param {string} sSpecific The specific data type you want to get -\n         *    'display', 'type' 'filter' 'sort'\n         *  @returns {*} The data for the cell from the given row's data\n         *  @default null\n         */\n        \"fnGetData\": null,\n    \n        /**\n         * Function to set data for a cell in the column. You should <b>never</b>\n         * set the data directly to _aData internally in DataTables - always use\n         * this method. It allows mData to function as required. This function\n         * is automatically assigned by the column initialisation method\n         *  @type function\n         *  @param {array|object} oData The data array/object for the array\n         *    (i.e. aoData[]._aData)\n         *  @param {*} sValue Value to set\n         *  @default null\n         */\n        \"fnSetData\": null,\n    \n        /**\n         * Property to read the value for the cells in the column from the data\n         * source array / object. If null, then the default content is used, if a\n         * function is given then the return from the function is used.\n         *  @type function|int|string|null\n         *  @default null\n         */\n        \"mData\": null,\n    \n        /**\n         * Partner property to mData which is used (only when defined) to get\n         * the data - i.e. it is basically the same as mData, but without the\n         * 'set' option, and also the data fed to it is the result from mData.\n         * This is the rendering method to match the data method of mData.\n         *  @type function|int|string|null\n         *  @default null\n         */\n        \"mRender\": null,\n    \n        /**\n         * Unique header TH/TD element for this column - this is what the sorting\n         * listener is attached to (if sorting is enabled.)\n         *  @type node\n         *  @default null\n         */\n        \"nTh\": null,\n    \n        /**\n         * Unique footer TH/TD element for this column (if there is one). Not used\n         * in DataTables as such, but can be used for plug-ins to reference the\n         * footer for each column.\n         *  @type node\n         *  @default null\n         */\n        \"nTf\": null,\n    \n        /**\n         * The class to apply to all TD elements in the table's TBODY for the column\n         *  @type string\n         *  @default null\n         */\n        \"sClass\": null,\n    \n        /**\n         * When DataTables calculates the column widths to assign to each column,\n         * it finds the longest string in each column and then constructs a\n         * temporary table and reads the widths from that. The problem with this\n         * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n         * string - thus the calculation can go wrong (doing it properly and putting\n         * it into an DOM object and measuring that is horribly(!) slow). Thus as\n         * a \"work around\" we provide this option. It will append its value to the\n         * text that is found to be the longest string for the column - i.e. padding.\n         *  @type string\n         */\n        \"sContentPadding\": null,\n    \n        /**\n         * Allows a default value to be given for a column's data, and will be used\n         * whenever a null data source is encountered (this can be because mData\n         * is set to null, or because the data source itself is null).\n         *  @type string\n         *  @default null\n         */\n        \"sDefaultContent\": null,\n    \n        /**\n         * Name for the column, allowing reference to the column by name as well as\n         * by index (needs a lookup to work by name).\n         *  @type string\n         */\n        \"sName\": null,\n    \n        /**\n         * Custom sorting data type - defines which of the available plug-ins in\n         * afnSortData the custom sorting will use - if any is defined.\n         *  @type string\n         *  @default std\n         */\n        \"sSortDataType\": 'std',\n    \n        /**\n         * Class to be applied to the header element when sorting on this column\n         *  @type string\n         *  @default null\n         */\n        \"sSortingClass\": null,\n    \n        /**\n         * Class to be applied to the header element when sorting on this column -\n         * when jQuery UI theming is used.\n         *  @type string\n         *  @default null\n         */\n        \"sSortingClassJUI\": null,\n    \n        /**\n         * Title of the column - what is seen in the TH element (nTh).\n         *  @type string\n         */\n        \"sTitle\": null,\n    \n        /**\n         * Column sorting and filtering type\n         *  @type string\n         *  @default null\n         */\n        \"sType\": null,\n    \n        /**\n         * Width of the column\n         *  @type string\n         *  @default null\n         */\n        \"sWidth\": null,\n    \n        /**\n         * Width of the column when it was first \"encountered\"\n         *  @type string\n         *  @default null\n         */\n        \"sWidthOrig\": null\n    };\n    \n    \n    /*\n     * Developer note: The properties of the object below are given in Hungarian\n     * notation, that was used as the interface for DataTables prior to v1.10, however\n     * from v1.10 onwards the primary interface is camel case. In order to avoid\n     * breaking backwards compatibility utterly with this change, the Hungarian\n     * version is still, internally the primary interface, but is is not documented\n     * - hence the @name tags in each doc comment. This allows a Javascript function\n     * to create a map from Hungarian notation to camel case (going the other direction\n     * would require each property to be listed, which would at around 3K to the size\n     * of DataTables, while this method is about a 0.5K hit.\n     *\n     * Ultimately this does pave the way for Hungarian notation to be dropped\n     * completely, but that is a massive amount of work and will break current\n     * installs (therefore is on-hold until v2).\n     */\n    \n    /**\n     * Initialisation options that can be given to DataTables at initialisation\n     * time.\n     *  @namespace\n     */\n    DataTable.defaults = {\n        /**\n         * An array of data to use for the table, passed in at initialisation which\n         * will be used in preference to any data which is already in the DOM. This is\n         * particularly useful for constructing tables purely in Javascript, for\n         * example with a custom Ajax call.\n         *  @type array\n         *  @default null\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.data\n         *\n         *  @example\n         *    // Using a 2D array data source\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"data\": [\n         *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n         *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n         *        ],\n         *        \"columns\": [\n         *          { \"title\": \"Engine\" },\n         *          { \"title\": \"Browser\" },\n         *          { \"title\": \"Platform\" },\n         *          { \"title\": \"Version\" },\n         *          { \"title\": \"Grade\" }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using an array of objects as a data source (`data`)\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"data\": [\n         *          {\n         *            \"engine\":   \"Trident\",\n         *            \"browser\":  \"Internet Explorer 4.0\",\n         *            \"platform\": \"Win 95+\",\n         *            \"version\":  4,\n         *            \"grade\":    \"X\"\n         *          },\n         *          {\n         *            \"engine\":   \"Trident\",\n         *            \"browser\":  \"Internet Explorer 5.0\",\n         *            \"platform\": \"Win 95+\",\n         *            \"version\":  5,\n         *            \"grade\":    \"C\"\n         *          }\n         *        ],\n         *        \"columns\": [\n         *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n         *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n         *          { \"title\": \"Platform\", \"data\": \"platform\" },\n         *          { \"title\": \"Version\",  \"data\": \"version\" },\n         *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"aaData\": null,\n    \n    \n        /**\n         * If ordering is enabled, then DataTables will perform a first pass sort on\n         * initialisation. You can define which column(s) the sort is performed\n         * upon, and the sorting direction, with this variable. The `sorting` array\n         * should contain an array for each column to be sorted initially containing\n         * the column's index and a direction string ('asc' or 'desc').\n         *  @type array\n         *  @default [[0,'asc']]\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.order\n         *\n         *  @example\n         *    // Sort by 3rd column first, and then 4th column\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"order\": [[2,'asc'], [3,'desc']]\n         *      } );\n         *    } );\n         *\n         *    // No initial sorting\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"order\": []\n         *      } );\n         *    } );\n         */\n        \"aaSorting\": [[0,'asc']],\n    \n    \n        /**\n         * This parameter is basically identical to the `sorting` parameter, but\n         * cannot be overridden by user interaction with the table. What this means\n         * is that you could have a column (visible or hidden) which the sorting\n         * will always be forced on first - any sorting after that (from the user)\n         * will then be performed as required. This can be useful for grouping rows\n         * together.\n         *  @type array\n         *  @default null\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.orderFixed\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"orderFixed\": [[0,'asc']]\n         *      } );\n         *    } )\n         */\n        \"aaSortingFixed\": [],\n    \n    \n        /**\n         * DataTables can be instructed to load data to display in the table from a\n         * Ajax source. This option defines how that Ajax call is made and where to.\n         *\n         * The `ajax` property has three different modes of operation, depending on\n         * how it is defined. These are:\n         *\n         * * `string` - Set the URL from where the data should be loaded from.\n         * * `object` - Define properties for `jQuery.ajax`.\n         * * `function` - Custom data get function\n         *\n         * `string`\n         * --------\n         *\n         * As a string, the `ajax` property simply defines the URL from which\n         * DataTables will load data.\n         *\n         * `object`\n         * --------\n         *\n         * As an object, the parameters in the object are passed to\n         * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n         * of the Ajax request. DataTables has a number of default parameters which\n         * you can override using this option. Please refer to the jQuery\n         * documentation for a full description of the options available, although\n         * the following parameters provide additional options in DataTables or\n         * require special consideration:\n         *\n         * * `data` - As with jQuery, `data` can be provided as an object, but it\n         *   can also be used as a function to manipulate the data DataTables sends\n         *   to the server. The function takes a single parameter, an object of\n         *   parameters with the values that DataTables has readied for sending. An\n         *   object may be returned which will be merged into the DataTables\n         *   defaults, or you can add the items to the object that was passed in and\n         *   not return anything from the function. This supersedes `fnServerParams`\n         *   from DataTables 1.9-.\n         *\n         * * `dataSrc` - By default DataTables will look for the property `data` (or\n         *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n         *   from an Ajax source or for server-side processing - this parameter\n         *   allows that property to be changed. You can use Javascript dotted\n         *   object notation to get a data source for multiple levels of nesting, or\n         *   it my be used as a function. As a function it takes a single parameter,\n         *   the JSON returned from the server, which can be manipulated as\n         *   required, with the returned value being that used by DataTables as the\n         *   data source for the table. This supersedes `sAjaxDataProp` from\n         *   DataTables 1.9-.\n         *\n         * * `success` - Should not be overridden it is used internally in\n         *   DataTables. To manipulate / transform the data returned by the server\n         *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n         *\n         * `function`\n         * ----------\n         *\n         * As a function, making the Ajax call is left up to yourself allowing\n         * complete control of the Ajax request. Indeed, if desired, a method other\n         * than Ajax could be used to obtain the required data, such as Web storage\n         * or an AIR database.\n         *\n         * The function is given four parameters and no return is required. The\n         * parameters are:\n         *\n         * 1. _object_ - Data to send to the server\n         * 2. _function_ - Callback function that must be executed when the required\n         *    data has been obtained. That data should be passed into the callback\n         *    as the only parameter\n         * 3. _object_ - DataTables settings object for the table\n         *\n         * Note that this supersedes `fnServerData` from DataTables 1.9-.\n         *\n         *  @type string|object|function\n         *  @default null\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.ajax\n         *  @since 1.10.0\n         *\n         * @example\n         *   // Get JSON data from a file via Ajax.\n         *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n         *   $('#example').dataTable( {\n         *     \"ajax\": \"data.json\"\n         *   } );\n         *\n         * @example\n         *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n         *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n         *   $('#example').dataTable( {\n         *     \"ajax\": {\n         *       \"url\": \"data.json\",\n         *       \"dataSrc\": \"tableData\"\n         *     }\n         *   } );\n         *\n         * @example\n         *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n         *   // from a plain array rather than an array in an object\n         *   $('#example').dataTable( {\n         *     \"ajax\": {\n         *       \"url\": \"data.json\",\n         *       \"dataSrc\": \"\"\n         *     }\n         *   } );\n         *\n         * @example\n         *   // Manipulate the data returned from the server - add a link to data\n         *   // (note this can, should, be done using `render` for the column - this\n         *   // is just a simple example of how the data can be manipulated).\n         *   $('#example').dataTable( {\n         *     \"ajax\": {\n         *       \"url\": \"data.json\",\n         *       \"dataSrc\": function ( json ) {\n         *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n         *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n         *         }\n         *         return json;\n         *       }\n         *     }\n         *   } );\n         *\n         * @example\n         *   // Add data to the request\n         *   $('#example').dataTable( {\n         *     \"ajax\": {\n         *       \"url\": \"data.json\",\n         *       \"data\": function ( d ) {\n         *         return {\n         *           \"extra_search\": $('#extra').val()\n         *         };\n         *       }\n         *     }\n         *   } );\n         *\n         * @example\n         *   // Send request as POST\n         *   $('#example').dataTable( {\n         *     \"ajax\": {\n         *       \"url\": \"data.json\",\n         *       \"type\": \"POST\"\n         *     }\n         *   } );\n         *\n         * @example\n         *   // Get the data from localStorage (could interface with a form for\n         *   // adding, editing and removing rows).\n         *   $('#example').dataTable( {\n         *     \"ajax\": function (data, callback, settings) {\n         *       callback(\n         *         JSON.parse( localStorage.getItem('dataTablesData') )\n         *       );\n         *     }\n         *   } );\n         */\n        \"ajax\": null,\n    \n    \n        /**\n         * This parameter allows you to readily specify the entries in the length drop\n         * down menu that DataTables shows when pagination is enabled. It can be\n         * either a 1D array of options which will be used for both the displayed\n         * option and the value, or a 2D array which will use the array in the first\n         * position as the value, and the array in the second position as the\n         * displayed options (useful for language strings such as 'All').\n         *\n         * Note that the `pageLength` property will be automatically set to the\n         * first value given in this array, unless `pageLength` is also provided.\n         *  @type array\n         *  @default [ 10, 25, 50, 100 ]\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.lengthMenu\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n         *      } );\n         *    } );\n         */\n        \"aLengthMenu\": [ 10, 25, 50, 100 ],\n    \n    \n        /**\n         * The `columns` option in the initialisation parameter allows you to define\n         * details about the way individual columns behave. For a full list of\n         * column options that can be set, please see\n         * {@link DataTable.defaults.column}. Note that if you use `columns` to\n         * define your columns, you must have an entry in the array for every single\n         * column that you have in your table (these can be null if you don't which\n         * to specify any options).\n         *  @member\n         *\n         *  @name DataTable.defaults.column\n         */\n        \"aoColumns\": null,\n    \n        /**\n         * Very similar to `columns`, `columnDefs` allows you to target a specific\n         * column, multiple columns, or all columns, using the `targets` property of\n         * each object in the array. This allows great flexibility when creating\n         * tables, as the `columnDefs` arrays can be of any length, targeting the\n         * columns you specifically want. `columnDefs` may use any of the column\n         * options available: {@link DataTable.defaults.column}, but it _must_\n         * have `targets` defined in each object in the array. Values in the `targets`\n         * array may be:\n         *   <ul>\n         *     <li>a string - class name will be matched on the TH for the column</li>\n         *     <li>0 or a positive integer - column index counting from the left</li>\n         *     <li>a negative integer - column index counting from the right</li>\n         *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n         *   </ul>\n         *  @member\n         *\n         *  @name DataTable.defaults.columnDefs\n         */\n        \"aoColumnDefs\": null,\n    \n    \n        /**\n         * Basically the same as `search`, this parameter defines the individual column\n         * filtering state at initialisation time. The array must be of the same size\n         * as the number of columns, and each element be an object with the parameters\n         * `search` and `escapeRegex` (the latter is optional). 'null' is also\n         * accepted and the default will be used.\n         *  @type array\n         *  @default []\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.searchCols\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"searchCols\": [\n         *          null,\n         *          { \"search\": \"My filter\" },\n         *          null,\n         *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n         *        ]\n         *      } );\n         *    } )\n         */\n        \"aoSearchCols\": [],\n    \n    \n        /**\n         * An array of CSS classes that should be applied to displayed rows. This\n         * array may be of any length, and DataTables will apply each class\n         * sequentially, looping when required.\n         *  @type array\n         *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n         *    options</i>\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.stripeClasses\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n         *      } );\n         *    } )\n         */\n        \"asStripeClasses\": null,\n    \n    \n        /**\n         * Enable or disable automatic column width calculation. This can be disabled\n         * as an optimisation (it takes some time to calculate the widths) if the\n         * tables widths are passed in using `columns`.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.autoWidth\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"autoWidth\": false\n         *      } );\n         *    } );\n         */\n        \"bAutoWidth\": true,\n    \n    \n        /**\n         * Deferred rendering can provide DataTables with a huge speed boost when you\n         * are using an Ajax or JS data source for the table. This option, when set to\n         * true, will cause DataTables to defer the creation of the table elements for\n         * each row until they are needed for a draw - saving a significant amount of\n         * time.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.deferRender\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"ajax\": \"sources/arrays.txt\",\n         *        \"deferRender\": true\n         *      } );\n         *    } );\n         */\n        \"bDeferRender\": false,\n    \n    \n        /**\n         * Replace a DataTable which matches the given selector and replace it with\n         * one which has the properties of the new initialisation object passed. If no\n         * table matches the selector, then the new DataTable will be constructed as\n         * per normal.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.destroy\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"srollY\": \"200px\",\n         *        \"paginate\": false\n         *      } );\n         *\n         *      // Some time later....\n         *      $('#example').dataTable( {\n         *        \"filter\": false,\n         *        \"destroy\": true\n         *      } );\n         *    } );\n         */\n        \"bDestroy\": false,\n    \n    \n        /**\n         * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n         * that it allows the end user to input multiple words (space separated) and\n         * will match a row containing those words, even if not in the order that was\n         * specified (this allow matching across multiple columns). Note that if you\n         * wish to use filtering in DataTables this must remain 'true' - to remove the\n         * default filtering input box and retain filtering abilities, please use\n         * {@link DataTable.defaults.dom}.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.searching\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"searching\": false\n         *      } );\n         *    } );\n         */\n        \"bFilter\": true,\n    \n    \n        /**\n         * Enable or disable the table information display. This shows information\n         * about the data that is currently visible on the page, including information\n         * about filtered data if that action is being performed.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.info\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"info\": false\n         *      } );\n         *    } );\n         */\n        \"bInfo\": true,\n    \n    \n        /**\n         * Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some\n         * slightly different and additional mark-up from what DataTables has\n         * traditionally used).\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.jQueryUI\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"jQueryUI\": true\n         *      } );\n         *    } );\n         */\n        \"bJQueryUI\": false,\n    \n    \n        /**\n         * Allows the end user to select the size of a formatted page from a select\n         * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.lengthChange\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"lengthChange\": false\n         *      } );\n         *    } );\n         */\n        \"bLengthChange\": true,\n    \n    \n        /**\n         * Enable or disable pagination.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.paging\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"paging\": false\n         *      } );\n         *    } );\n         */\n        \"bPaginate\": true,\n    \n    \n        /**\n         * Enable or disable the display of a 'processing' indicator when the table is\n         * being processed (e.g. a sort). This is particularly useful for tables with\n         * large amounts of data where it can take a noticeable amount of time to sort\n         * the entries.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.processing\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"processing\": true\n         *      } );\n         *    } );\n         */\n        \"bProcessing\": false,\n    \n    \n        /**\n         * Retrieve the DataTables object for the given selector. Note that if the\n         * table has already been initialised, this parameter will cause DataTables\n         * to simply return the object that has already been set up - it will not take\n         * account of any changes you might have made to the initialisation object\n         * passed to DataTables (setting this parameter to true is an acknowledgement\n         * that you understand this). `destroy` can be used to reinitialise a table if\n         * you need.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.retrieve\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      initTable();\n         *      tableActions();\n         *    } );\n         *\n         *    function initTable ()\n         *    {\n         *      return $('#example').dataTable( {\n         *        \"scrollY\": \"200px\",\n         *        \"paginate\": false,\n         *        \"retrieve\": true\n         *      } );\n         *    }\n         *\n         *    function tableActions ()\n         *    {\n         *      var table = initTable();\n         *      // perform API operations with oTable\n         *    }\n         */\n        \"bRetrieve\": false,\n    \n    \n        /**\n         * When vertical (y) scrolling is enabled, DataTables will force the height of\n         * the table's viewport to the given height at all times (useful for layout).\n         * However, this can look odd when filtering data down to a small data set,\n         * and the footer is left \"floating\" further down. This parameter (when\n         * enabled) will cause DataTables to collapse the table's viewport down when\n         * the result set will fit within the given Y height.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.scrollCollapse\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"scrollY\": \"200\",\n         *        \"scrollCollapse\": true\n         *      } );\n         *    } );\n         */\n        \"bScrollCollapse\": false,\n    \n    \n        /**\n         * Configure DataTables to use server-side processing. Note that the\n         * `ajax` parameter must also be given in order to give DataTables a\n         * source to obtain the required data for each draw.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Features\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.serverSide\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"serverSide\": true,\n         *        \"ajax\": \"xhr.php\"\n         *      } );\n         *    } );\n         */\n        \"bServerSide\": false,\n    \n    \n        /**\n         * Enable or disable sorting of columns. Sorting of individual columns can be\n         * disabled by the `sortable` option for each column.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.ordering\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"ordering\": false\n         *      } );\n         *    } );\n         */\n        \"bSort\": true,\n    \n    \n        /**\n         * Enable or display DataTables' ability to sort multiple columns at the\n         * same time (activated by shift-click by the user).\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.orderMulti\n         *\n         *  @example\n         *    // Disable multiple column sorting ability\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"orderMulti\": false\n         *      } );\n         *    } );\n         */\n        \"bSortMulti\": true,\n    \n    \n        /**\n         * Allows control over whether DataTables should use the top (true) unique\n         * cell that is found for a single column, or the bottom (false - default).\n         * This is useful when using complex headers.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.orderCellsTop\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"orderCellsTop\": true\n         *      } );\n         *    } );\n         */\n        \"bSortCellsTop\": false,\n    \n    \n        /**\n         * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n         * `sorting\\_3` to the columns which are currently being sorted on. This is\n         * presented as a feature switch as it can increase processing time (while\n         * classes are removed and added) so for large data sets you might want to\n         * turn this off.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.orderClasses\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"orderClasses\": false\n         *      } );\n         *    } );\n         */\n        \"bSortClasses\": true,\n    \n    \n        /**\n         * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n         * used to save table display information such as pagination information,\n         * display length, filtering and sorting. As such when the end user reloads\n         * the page the display display will match what thy had previously set up.\n         *\n         * Due to the use of `localStorage` the default state saving is not supported\n         * in IE6 or 7. If state saving is required in those browsers, use\n         * `stateSaveCallback` to provide a storage solution such as cookies.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.stateSave\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true\n         *      } );\n         *    } );\n         */\n        \"bStateSave\": false,\n    \n    \n        /**\n         * This function is called when a TR element is created (and all TD child\n         * elements have been inserted), or registered if using a DOM source, allowing\n         * manipulation of the TR element (adding classes etc).\n         *  @type function\n         *  @param {node} row \"TR\" element for the current row\n         *  @param {array} data Raw data array for this row\n         *  @param {int} dataIndex The index of this row in the internal aoData array\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.createdRow\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"createdRow\": function( row, data, dataIndex ) {\n         *          // Bold the grade for all 'A' grade browsers\n         *          if ( data[4] == \"A\" )\n         *          {\n         *            $('td:eq(4)', row).html( '<b>A</b>' );\n         *          }\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnCreatedRow\": null,\n    \n    \n        /**\n         * This function is called on every 'draw' event, and allows you to\n         * dynamically modify any aspect you want about the created DOM.\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.drawCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"drawCallback\": function( settings ) {\n         *          alert( 'DataTables has redrawn the table' );\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnDrawCallback\": null,\n    \n    \n        /**\n         * Identical to fnHeaderCallback() but for the table footer this function\n         * allows you to modify the table footer on every 'draw' event.\n         *  @type function\n         *  @param {node} foot \"TR\" element for the footer\n         *  @param {array} data Full table data (as derived from the original HTML)\n         *  @param {int} start Index for the current display starting point in the\n         *    display array\n         *  @param {int} end Index for the current display ending point in the\n         *    display array\n         *  @param {array int} display Index array to translate the visual position\n         *    to the full data array\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.footerCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n         *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n         *        }\n         *      } );\n         *    } )\n         */\n        \"fnFooterCallback\": null,\n    \n    \n        /**\n         * When rendering large numbers in the information element for the table\n         * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n         * to have a comma separator for the 'thousands' units (e.g. 1 million is\n         * rendered as \"1,000,000\") to help readability for the end user. This\n         * function will override the default method DataTables uses.\n         *  @type function\n         *  @member\n         *  @param {int} toFormat number to be formatted\n         *  @returns {string} formatted string for DataTables to show the number\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.formatNumber\n         *\n         *  @example\n         *    // Format a number using a single quote for the separator (note that\n         *    // this can also be done with the language.thousands option)\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"formatNumber\": function ( toFormat ) {\n         *          return toFormat.toString().replace(\n         *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n         *          );\n         *        };\n         *      } );\n         *    } );\n         */\n        \"fnFormatNumber\": function ( toFormat ) {\n            return toFormat.toString().replace(\n                /\\B(?=(\\d{3})+(?!\\d))/g,\n                this.oLanguage.sThousands\n            );\n        },\n    \n    \n        /**\n         * This function is called on every 'draw' event, and allows you to\n         * dynamically modify the header row. This can be used to calculate and\n         * display useful information about the table.\n         *  @type function\n         *  @param {node} head \"TR\" element for the header\n         *  @param {array} data Full table data (as derived from the original HTML)\n         *  @param {int} start Index for the current display starting point in the\n         *    display array\n         *  @param {int} end Index for the current display ending point in the\n         *    display array\n         *  @param {array int} display Index array to translate the visual position\n         *    to the full data array\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.headerCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"fheaderCallback\": function( head, data, start, end, display ) {\n         *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n         *        }\n         *      } );\n         *    } )\n         */\n        \"fnHeaderCallback\": null,\n    \n    \n        /**\n         * The information element can be used to convey information about the current\n         * state of the table. Although the internationalisation options presented by\n         * DataTables are quite capable of dealing with most customisations, there may\n         * be times where you wish to customise the string further. This callback\n         * allows you to do exactly that.\n         *  @type function\n         *  @param {object} oSettings DataTables settings object\n         *  @param {int} start Starting position in data for the draw\n         *  @param {int} end End position in data for the draw\n         *  @param {int} max Total number of rows in the table (regardless of\n         *    filtering)\n         *  @param {int} total Total number of rows in the data set, after filtering\n         *  @param {string} pre The string that DataTables has formatted using it's\n         *    own rules\n         *  @returns {string} The string to be displayed in the information element.\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.infoCallback\n         *\n         *  @example\n         *    $('#example').dataTable( {\n         *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n         *        return start +\" to \"+ end;\n         *      }\n         *    } );\n         */\n        \"fnInfoCallback\": null,\n    \n    \n        /**\n         * Called when the table has been initialised. Normally DataTables will\n         * initialise sequentially and there will be no need for this function,\n         * however, this does not hold true when using external language information\n         * since that is obtained using an async XHR call.\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *  @param {object} json The JSON object request from the server - only\n         *    present if client-side Ajax sourced data is used\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.initComplete\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"initComplete\": function(settings, json) {\n         *          alert( 'DataTables has finished its initialisation.' );\n         *        }\n         *      } );\n         *    } )\n         */\n        \"fnInitComplete\": null,\n    \n    \n        /**\n         * Called at the very start of each table draw and can be used to cancel the\n         * draw by returning false, any other return (including undefined) results in\n         * the full draw occurring).\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *  @returns {boolean} False will cancel the draw, anything else (including no\n         *    return) will allow it to complete.\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.preDrawCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"preDrawCallback\": function( settings ) {\n         *          if ( $('#test').val() == 1 ) {\n         *            return false;\n         *          }\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnPreDrawCallback\": null,\n    \n    \n        /**\n         * This function allows you to 'post process' each row after it have been\n         * generated for each table draw, but before it is rendered on screen. This\n         * function might be used for setting the row class name etc.\n         *  @type function\n         *  @param {node} row \"TR\" element for the current row\n         *  @param {array} data Raw data array for this row\n         *  @param {int} displayIndex The display index for the current table draw\n         *  @param {int} displayIndexFull The index of the data in the full list of\n         *    rows (after filtering)\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.rowCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n         *          // Bold the grade for all 'A' grade browsers\n         *          if ( data[4] == \"A\" ) {\n         *            $('td:eq(4)', row).html( '<b>A</b>' );\n         *          }\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnRowCallback\": null,\n    \n    \n        /**\n         * __Deprecated__ The functionality provided by this parameter has now been\n         * superseded by that provided through `ajax`, which should be used instead.\n         *\n         * This parameter allows you to override the default function which obtains\n         * the data from the server so something more suitable for your application.\n         * For example you could use POST data, or pull information from a Gears or\n         * AIR database.\n         *  @type function\n         *  @member\n         *  @param {string} source HTTP source to obtain the data from (`ajax`)\n         *  @param {array} data A key/value pair object containing the data to send\n         *    to the server\n         *  @param {function} callback to be called on completion of the data get\n         *    process that will draw the data on the page.\n         *  @param {object} settings DataTables settings object\n         *\n         *  @dtopt Callbacks\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.serverData\n         *\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\n         */\n        \"fnServerData\": null,\n    \n    \n        /**\n         * __Deprecated__ The functionality provided by this parameter has now been\n         * superseded by that provided through `ajax`, which should be used instead.\n         *\n         *  It is often useful to send extra data to the server when making an Ajax\n         * request - for example custom filtering information, and this callback\n         * function makes it trivial to send extra information to the server. The\n         * passed in parameter is the data set that has been constructed by\n         * DataTables, and you can add to this or modify it as you require.\n         *  @type function\n         *  @param {array} data Data array (array of objects which are name/value\n         *    pairs) that has been constructed by DataTables and will be sent to the\n         *    server. In the case of Ajax sourced data with server-side processing\n         *    this will be an empty array, for server-side processing there will be a\n         *    significant number of parameters!\n         *  @returns {undefined} Ensure that you modify the data array passed in,\n         *    as this is passed by reference.\n         *\n         *  @dtopt Callbacks\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.serverParams\n         *\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\n         */\n        \"fnServerParams\": null,\n    \n    \n        /**\n         * Load the table state. With this function you can define from where, and how, the\n         * state of a table is loaded. By default DataTables will load from `localStorage`\n         * but you might wish to use a server-side database or cookies.\n         *  @type function\n         *  @member\n         *  @param {object} settings DataTables settings object\n         *  @param {object} callback Callback that can be executed when done. It\n         *    should be passed the loaded state object.\n         *  @return {object} The DataTables state object to be loaded\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.stateLoadCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateLoadCallback\": function (settings, callback) {\n         *          $.ajax( {\n         *            \"url\": \"/state_load\",\n         *            \"dataType\": \"json\",\n         *            \"success\": function (json) {\n         *              callback( json );\n         *            }\n         *          } );\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnStateLoadCallback\": function ( settings ) {\n            try {\n                return JSON.parse(\n                    (settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n                        'DataTables_'+settings.sInstance+'_'+location.pathname\n                    )\n                );\n            } catch (e) {}\n        },\n    \n    \n        /**\n         * Callback which allows modification of the saved state prior to loading that state.\n         * This callback is called when the table is loading state from the stored data, but\n         * prior to the settings object being modified by the saved state. Note that for\n         * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n         * a plug-in.\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *  @param {object} data The state object that is to be loaded\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.stateLoadParams\n         *\n         *  @example\n         *    // Remove a saved filter, so filtering is never loaded\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateLoadParams\": function (settings, data) {\n         *          data.oSearch.sSearch = \"\";\n         *        }\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Disallow state loading by returning false\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateLoadParams\": function (settings, data) {\n         *          return false;\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnStateLoadParams\": null,\n    \n    \n        /**\n         * Callback that is called when the state has been loaded from the state saving method\n         * and the DataTables settings object has been modified as a result of the loaded state.\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *  @param {object} data The state object that was loaded\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.stateLoaded\n         *\n         *  @example\n         *    // Show an alert with the filtering value that was saved\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateLoaded\": function (settings, data) {\n         *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnStateLoaded\": null,\n    \n    \n        /**\n         * Save the table state. This function allows you to define where and how the state\n         * information for the table is stored By default DataTables will use `localStorage`\n         * but you might wish to use a server-side database or cookies.\n         *  @type function\n         *  @member\n         *  @param {object} settings DataTables settings object\n         *  @param {object} data The state object to be saved\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.stateSaveCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateSaveCallback\": function (settings, data) {\n         *          // Send an Ajax request to the server with the state object\n         *          $.ajax( {\n         *            \"url\": \"/state_save\",\n         *            \"data\": data,\n         *            \"dataType\": \"json\",\n         *            \"method\": \"POST\"\n         *            \"success\": function () {}\n         *          } );\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnStateSaveCallback\": function ( settings, data ) {\n            try {\n                (settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n                    'DataTables_'+settings.sInstance+'_'+location.pathname,\n                    JSON.stringify( data )\n                );\n            } catch (e) {}\n        },\n    \n    \n        /**\n         * Callback which allows modification of the state to be saved. Called when the table\n         * has changed state a new state save is required. This method allows modification of\n         * the state saving object prior to actually doing the save, including addition or\n         * other state properties or modification. Note that for plug-in authors, you should\n         * use the `stateSaveParams` event to save parameters for a plug-in.\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *  @param {object} data The state object to be saved\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.stateSaveParams\n         *\n         *  @example\n         *    // Remove a saved filter, so filtering is never saved\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateSaveParams\": function (settings, data) {\n         *          data.oSearch.sSearch = \"\";\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnStateSaveParams\": null,\n    \n    \n        /**\n         * Duration for which the saved state information is considered valid. After this period\n         * has elapsed the state will be returned to the default.\n         * Value is given in seconds.\n         *  @type int\n         *  @default 7200 <i>(2 hours)</i>\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.stateDuration\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateDuration\": 60*60*24; // 1 day\n         *      } );\n         *    } )\n         */\n        \"iStateDuration\": 7200,\n    \n    \n        /**\n         * When enabled DataTables will not make a request to the server for the first\n         * page draw - rather it will use the data already on the page (no sorting etc\n         * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n         * is used to indicate that deferred loading is required, but it is also used\n         * to tell DataTables how many records there are in the full table (allowing\n         * the information element and pagination to be displayed correctly). In the case\n         * where a filtering is applied to the table on initial load, this can be\n         * indicated by giving the parameter as an array, where the first element is\n         * the number of records available after filtering and the second element is the\n         * number of records without filtering (allowing the table information element\n         * to be shown correctly).\n         *  @type int | array\n         *  @default null\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.deferLoading\n         *\n         *  @example\n         *    // 57 records available in the table, no filtering applied\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"serverSide\": true,\n         *        \"ajax\": \"scripts/server_processing.php\",\n         *        \"deferLoading\": 57\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"serverSide\": true,\n         *        \"ajax\": \"scripts/server_processing.php\",\n         *        \"deferLoading\": [ 57, 100 ],\n         *        \"search\": {\n         *          \"search\": \"my_filter\"\n         *        }\n         *      } );\n         *    } );\n         */\n        \"iDeferLoading\": null,\n    \n    \n        /**\n         * Number of rows to display on a single page when using pagination. If\n         * feature enabled (`lengthChange`) then the end user will be able to override\n         * this to a custom setting using a pop-up menu.\n         *  @type int\n         *  @default 10\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.pageLength\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"pageLength\": 50\n         *      } );\n         *    } )\n         */\n        \"iDisplayLength\": 10,\n    \n    \n        /**\n         * Define the starting point for data display when using DataTables with\n         * pagination. Note that this parameter is the number of records, rather than\n         * the page number, so if you have 10 records per page and want to start on\n         * the third page, it should be \"20\".\n         *  @type int\n         *  @default 0\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.displayStart\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"displayStart\": 20\n         *      } );\n         *    } )\n         */\n        \"iDisplayStart\": 0,\n    \n    \n        /**\n         * By default DataTables allows keyboard navigation of the table (sorting, paging,\n         * and filtering) by adding a `tabindex` attribute to the required elements. This\n         * allows you to tab through the controls and press the enter key to activate them.\n         * The tabindex is default 0, meaning that the tab follows the flow of the document.\n         * You can overrule this using this parameter if you wish. Use a value of -1 to\n         * disable built-in keyboard navigation.\n         *  @type int\n         *  @default 0\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.tabIndex\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"tabIndex\": 1\n         *      } );\n         *    } );\n         */\n        \"iTabIndex\": 0,\n    \n    \n        /**\n         * Classes that DataTables assigns to the various components and features\n         * that it adds to the HTML table. This allows classes to be configured\n         * during initialisation in addition to through the static\n         * {@link DataTable.ext.oStdClasses} object).\n         *  @namespace\n         *  @name DataTable.defaults.classes\n         */\n        \"oClasses\": {},\n    \n    \n        /**\n         * All strings that DataTables uses in the user interface that it creates\n         * are defined in this object, allowing you to modified them individually or\n         * completely replace them all as required.\n         *  @namespace\n         *  @name DataTable.defaults.language\n         */\n        \"oLanguage\": {\n            /**\n             * Strings that are used for WAI-ARIA labels and controls only (these are not\n             * actually visible on the page, but will be read by screenreaders, and thus\n             * must be internationalised as well).\n             *  @namespace\n             *  @name DataTable.defaults.language.aria\n             */\n            \"oAria\": {\n                /**\n                 * ARIA label that is added to the table headers when the column may be\n                 * sorted ascending by activing the column (click or return when focused).\n                 * Note that the column header is prefixed to this string.\n                 *  @type string\n                 *  @default : activate to sort column ascending\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.aria.sortAscending\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n                 *      $('#example').dataTable( {\n                 *        \"language\": {\n                 *          \"aria\": {\n                 *            \"sortAscending\": \" - click/return to sort ascending\"\n                 *          }\n                 *        }\n                 *      } );\n                 *    } );\n                 */\n                \"sSortAscending\": \": activate to sort column ascending\",\n    \n                /**\n                 * ARIA label that is added to the table headers when the column may be\n                 * sorted descending by activing the column (click or return when focused).\n                 * Note that the column header is prefixed to this string.\n                 *  @type string\n                 *  @default : activate to sort column ascending\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.aria.sortDescending\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n                 *      $('#example').dataTable( {\n                 *        \"language\": {\n                 *          \"aria\": {\n                 *            \"sortDescending\": \" - click/return to sort descending\"\n                 *          }\n                 *        }\n                 *      } );\n                 *    } );\n                 */\n                \"sSortDescending\": \": activate to sort column descending\"\n            },\n    \n            /**\n             * Pagination string used by DataTables for the built-in pagination\n             * control types.\n             *  @namespace\n             *  @name DataTable.defaults.language.paginate\n             */\n            \"oPaginate\": {\n                /**\n                 * Text to use when using the 'full_numbers' type of pagination for the\n                 * button to take the user to the first page.\n                 *  @type string\n                 *  @default First\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.paginate.first\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n                 *      $('#example').dataTable( {\n                 *        \"language\": {\n                 *          \"paginate\": {\n                 *            \"first\": \"First page\"\n                 *          }\n                 *        }\n                 *      } );\n                 *    } );\n                 */\n                \"sFirst\": \"First\",\n    \n    \n                /**\n                 * Text to use when using the 'full_numbers' type of pagination for the\n                 * button to take the user to the last page.\n                 *  @type string\n                 *  @default Last\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.paginate.last\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n                 *      $('#example').dataTable( {\n                 *        \"language\": {\n                 *          \"paginate\": {\n                 *            \"last\": \"Last page\"\n                 *          }\n                 *        }\n                 *      } );\n                 *    } );\n                 */\n                \"sLast\": \"Last\",\n    \n    \n                /**\n                 * Text to use for the 'next' pagination button (to take the user to the\n                 * next page).\n                 *  @type string\n                 *  @default Next\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.paginate.next\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n                 *      $('#example').dataTable( {\n                 *        \"language\": {\n                 *          \"paginate\": {\n                 *            \"next\": \"Next page\"\n                 *          }\n                 *        }\n                 *      } );\n                 *    } );\n                 */\n                \"sNext\": \"Next\",\n    \n    \n                /**\n                 * Text to use for the 'previous' pagination button (to take the user to\n                 * the previous page).\n                 *  @type string\n                 *  @default Previous\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.paginate.previous\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n                 *      $('#example').dataTable( {\n                 *        \"language\": {\n                 *          \"paginate\": {\n                 *            \"previous\": \"Previous page\"\n                 *          }\n                 *        }\n                 *      } );\n                 *    } );\n                 */\n                \"sPrevious\": \"Previous\"\n            },\n    \n            /**\n             * This string is shown in preference to `zeroRecords` when the table is\n             * empty of data (regardless of filtering). Note that this is an optional\n             * parameter - if it is not given, the value of `zeroRecords` will be used\n             * instead (either the default or given value).\n             *  @type string\n             *  @default No data available in table\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.emptyTable\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"emptyTable\": \"No data available in table\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sEmptyTable\": \"No data available in table\",\n    \n    \n            /**\n             * This string gives information to the end user about the information\n             * that is current on display on the page. The following tokens can be\n             * used in the string and will be dynamically replaced as the table\n             * display updates. This tokens can be placed anywhere in the string, or\n             * removed as needed by the language requires:\n             *\n             * * `\\_START\\_` - Display index of the first record on the current page\n             * * `\\_END\\_` - Display index of the last record on the current page\n             * * `\\_TOTAL\\_` - Number of records in the table after filtering\n             * * `\\_MAX\\_` - Number of records in the table without filtering\n             * * `\\_PAGE\\_` - Current page number\n             * * `\\_PAGES\\_` - Total number of pages of data in the table\n             *\n             *  @type string\n             *  @default Showing _START_ to _END_ of _TOTAL_ entries\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.info\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n    \n    \n            /**\n             * Display information string for when the table is empty. Typically the\n             * format of this string should match `info`.\n             *  @type string\n             *  @default Showing 0 to 0 of 0 entries\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.infoEmpty\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"infoEmpty\": \"No entries to show\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n    \n    \n            /**\n             * When a user filters the information in a table, this string is appended\n             * to the information (`info`) to give an idea of how strong the filtering\n             * is. The variable _MAX_ is dynamically updated.\n             *  @type string\n             *  @default (filtered from _MAX_ total entries)\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.infoFiltered\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n    \n    \n            /**\n             * If can be useful to append extra information to the info string at times,\n             * and this variable does exactly that. This information will be appended to\n             * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n             * being used) at all times.\n             *  @type string\n             *  @default <i>Empty string</i>\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.infoPostFix\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"infoPostFix\": \"All records shown are derived from real information.\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sInfoPostFix\": \"\",\n    \n    \n            /**\n             * This decimal place operator is a little different from the other\n             * language options since DataTables doesn't output floating point\n             * numbers, so it won't ever use this for display of a number. Rather,\n             * what this parameter does is modify the sort methods of the table so\n             * that numbers which are in a format which has a character other than\n             * a period (`.`) as a decimal place will be sorted numerically.\n             *\n             * Note that numbers with different decimal places cannot be shown in\n             * the same table and still be sortable, the table must be consistent.\n             * However, multiple different tables on the page can use different\n             * decimal place characters.\n             *  @type string\n             *  @default \n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.decimal\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"decimal\": \",\"\n             *          \"thousands\": \".\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sDecimal\": \"\",\n    \n    \n            /**\n             * DataTables has a build in number formatter (`formatNumber`) which is\n             * used to format large numbers that are used in the table information.\n             * By default a comma is used, but this can be trivially changed to any\n             * character you wish with this parameter.\n             *  @type string\n             *  @default ,\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.thousands\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"thousands\": \"'\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sThousands\": \",\",\n    \n    \n            /**\n             * Detail the action that will be taken when the drop down menu for the\n             * pagination length option is changed. The '_MENU_' variable is replaced\n             * with a default select list of 10, 25, 50 and 100, and can be replaced\n             * with a custom select box if required.\n             *  @type string\n             *  @default Show _MENU_ entries\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.lengthMenu\n             *\n             *  @example\n             *    // Language change only\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"lengthMenu\": \"Display _MENU_ records\"\n             *        }\n             *      } );\n             *    } );\n             *\n             *  @example\n             *    // Language and options change\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"lengthMenu\": 'Display <select>'+\n             *            '<option value=\"10\">10</option>'+\n             *            '<option value=\"20\">20</option>'+\n             *            '<option value=\"30\">30</option>'+\n             *            '<option value=\"40\">40</option>'+\n             *            '<option value=\"50\">50</option>'+\n             *            '<option value=\"-1\">All</option>'+\n             *            '</select> records'\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sLengthMenu\": \"Show _MENU_ entries\",\n    \n    \n            /**\n             * When using Ajax sourced data and during the first draw when DataTables is\n             * gathering the data, this message is shown in an empty row in the table to\n             * indicate to the end user the the data is being loaded. Note that this\n             * parameter is not used when loading data by server-side processing, just\n             * Ajax sourced data with client-side processing.\n             *  @type string\n             *  @default Loading...\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.loadingRecords\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"loadingRecords\": \"Please wait - loading...\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sLoadingRecords\": \"Loading...\",\n    \n    \n            /**\n             * Text which is displayed when the table is processing a user action\n             * (usually a sort command or similar).\n             *  @type string\n             *  @default Processing...\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.processing\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"processing\": \"DataTables is currently busy\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sProcessing\": \"Processing...\",\n    \n    \n            /**\n             * Details the actions that will be taken when the user types into the\n             * filtering input text box. The variable \"_INPUT_\", if used in the string,\n             * is replaced with the HTML text box for the filtering input allowing\n             * control over where it appears in the string. If \"_INPUT_\" is not given\n             * then the input box is appended to the string automatically.\n             *  @type string\n             *  @default Search:\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.search\n             *\n             *  @example\n             *    // Input text box will be appended at the end automatically\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"search\": \"Filter records:\"\n             *        }\n             *      } );\n             *    } );\n             *\n             *  @example\n             *    // Specify where the filter should appear\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"search\": \"Apply filter _INPUT_ to table\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sSearch\": \"Search:\",\n    \n    \n            /**\n             * Assign a `placeholder` attribute to the search `input` element\n             *  @type string\n             *  @default \n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.searchPlaceholder\n             */\n            \"sSearchPlaceholder\": \"\",\n    \n    \n            /**\n             * All of the language information can be stored in a file on the\n             * server-side, which DataTables will look up if this parameter is passed.\n             * It must store the URL of the language file, which is in a JSON format,\n             * and the object has the same properties as the oLanguage object in the\n             * initialiser object (i.e. the above parameters). Please refer to one of\n             * the example language files to see how this works in action.\n             *  @type string\n             *  @default <i>Empty string - i.e. disabled</i>\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.url\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sUrl\": \"\",\n    \n    \n            /**\n             * Text shown inside the table records when the is no information to be\n             * displayed after filtering. `emptyTable` is shown when there is simply no\n             * information in the table at all (regardless of filtering).\n             *  @type string\n             *  @default No matching records found\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.zeroRecords\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"zeroRecords\": \"No records to display\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sZeroRecords\": \"No matching records found\"\n        },\n    \n    \n        /**\n         * This parameter allows you to have define the global filtering state at\n         * initialisation time. As an object the `search` parameter must be\n         * defined, but all other parameters are optional. When `regex` is true,\n         * the search string will be treated as a regular expression, when false\n         * (default) it will be treated as a straight string. When `smart`\n         * DataTables will use it's smart filtering methods (to word match at\n         * any point in the data), when false this will not be done.\n         *  @namespace\n         *  @extends DataTable.models.oSearch\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.search\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"search\": {\"search\": \"Initial search\"}\n         *      } );\n         *    } )\n         */\n        \"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n    \n    \n        /**\n         * __Deprecated__ The functionality provided by this parameter has now been\n         * superseded by that provided through `ajax`, which should be used instead.\n         *\n         * By default DataTables will look for the property `data` (or `aaData` for\n         * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n         * source or for server-side processing - this parameter allows that\n         * property to be changed. You can use Javascript dotted object notation to\n         * get a data source for multiple levels of nesting.\n         *  @type string\n         *  @default data\n         *\n         *  @dtopt Options\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.ajaxDataProp\n         *\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\n         */\n        \"sAjaxDataProp\": \"data\",\n    \n    \n        /**\n         * __Deprecated__ The functionality provided by this parameter has now been\n         * superseded by that provided through `ajax`, which should be used instead.\n         *\n         * You can instruct DataTables to load data from an external\n         * source using this parameter (use aData if you want to pass data in you\n         * already have). Simply provide a url a JSON object can be obtained from.\n         *  @type string\n         *  @default null\n         *\n         *  @dtopt Options\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.ajaxSource\n         *\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\n         */\n        \"sAjaxSource\": null,\n    \n    \n        /**\n         * This initialisation variable allows you to specify exactly where in the\n         * DOM you want DataTables to inject the various controls it adds to the page\n         * (for example you might want the pagination controls at the top of the\n         * table). DIV elements (with or without a custom class) can also be added to\n         * aid styling. The follow syntax is used:\n         *   <ul>\n         *     <li>The following options are allowed:\n         *       <ul>\n         *         <li>'l' - Length changing</li>\n         *         <li>'f' - Filtering input</li>\n         *         <li>'t' - The table!</li>\n         *         <li>'i' - Information</li>\n         *         <li>'p' - Pagination</li>\n         *         <li>'r' - pRocessing</li>\n         *       </ul>\n         *     </li>\n         *     <li>The following constants are allowed:\n         *       <ul>\n         *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n         *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n         *       </ul>\n         *     </li>\n         *     <li>The following syntax is expected:\n         *       <ul>\n         *         <li>'&lt;' and '&gt;' - div elements</li>\n         *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n         *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n         *       </ul>\n         *     </li>\n         *     <li>Examples:\n         *       <ul>\n         *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n         *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n         *       </ul>\n         *     </li>\n         *   </ul>\n         *  @type string\n         *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n         *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.dom\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n         *      } );\n         *    } );\n         */\n        \"sDom\": \"lfrtip\",\n    \n    \n        /**\n         * Search delay option. This will throttle full table searches that use the\n         * DataTables provided search input element (it does not effect calls to\n         * `dt-api search()`, providing a delay before the search is made.\n         *  @type integer\n         *  @default 0\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.searchDelay\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"searchDelay\": 200\n         *      } );\n         *    } )\n         */\n        \"searchDelay\": null,\n    \n    \n        /**\n         * DataTables features six different built-in options for the buttons to\n         * display for pagination control:\n         *\n         * * `numbers` - Page number buttons only\n         * * `simple` - 'Previous' and 'Next' buttons only\n         * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n         * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n         * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n         * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n         *  \n         * Further methods can be added using {@link DataTable.ext.oPagination}.\n         *  @type string\n         *  @default simple_numbers\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.pagingType\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"pagingType\": \"full_numbers\"\n         *      } );\n         *    } )\n         */\n        \"sPaginationType\": \"simple_numbers\",\n    \n    \n        /**\n         * Enable horizontal scrolling. When a table is too wide to fit into a\n         * certain layout, or you have a large number of columns in the table, you\n         * can enable x-scrolling to show the table in a viewport, which can be\n         * scrolled. This property can be `true` which will allow the table to\n         * scroll horizontally when needed, or any CSS unit, or a number (in which\n         * case it will be treated as a pixel measurement). Setting as simply `true`\n         * is recommended.\n         *  @type boolean|string\n         *  @default <i>blank string - i.e. disabled</i>\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.scrollX\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"scrollX\": true,\n         *        \"scrollCollapse\": true\n         *      } );\n         *    } );\n         */\n        \"sScrollX\": \"\",\n    \n    \n        /**\n         * This property can be used to force a DataTable to use more width than it\n         * might otherwise do when x-scrolling is enabled. For example if you have a\n         * table which requires to be well spaced, this parameter is useful for\n         * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n         * any CSS unit, or a number (in which case it will be treated as a pixel\n         * measurement).\n         *  @type string\n         *  @default <i>blank string - i.e. disabled</i>\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.scrollXInner\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"scrollX\": \"100%\",\n         *        \"scrollXInner\": \"110%\"\n         *      } );\n         *    } );\n         */\n        \"sScrollXInner\": \"\",\n    \n    \n        /**\n         * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n         * to the given height, and enable scrolling for any data which overflows the\n         * current viewport. This can be used as an alternative to paging to display\n         * a lot of data in a small area (although paging and scrolling can both be\n         * enabled at the same time). This property can be any CSS unit, or a number\n         * (in which case it will be treated as a pixel measurement).\n         *  @type string\n         *  @default <i>blank string - i.e. disabled</i>\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.scrollY\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"scrollY\": \"200px\",\n         *        \"paginate\": false\n         *      } );\n         *    } );\n         */\n        \"sScrollY\": \"\",\n    \n    \n        /**\n         * __Deprecated__ The functionality provided by this parameter has now been\n         * superseded by that provided through `ajax`, which should be used instead.\n         *\n         * Set the HTTP method that is used to make the Ajax call for server-side\n         * processing or Ajax sourced data.\n         *  @type string\n         *  @default GET\n         *\n         *  @dtopt Options\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.serverMethod\n         *\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\n         */\n        \"sServerMethod\": \"GET\",\n    \n    \n        /**\n         * DataTables makes use of renderers when displaying HTML elements for\n         * a table. These renderers can be added or modified by plug-ins to\n         * generate suitable mark-up for a site. For example the Bootstrap\n         * integration plug-in for DataTables uses a paging button renderer to\n         * display pagination buttons in the mark-up required by Bootstrap.\n         *\n         * For further information about the renderers available see\n         * DataTable.ext.renderer\n         *  @type string|object\n         *  @default null\n         *\n         *  @name DataTable.defaults.renderer\n         *\n         */\n        \"renderer\": null,\n    \n    \n        /**\n         * Set the data property name that DataTables should use to get a row's id\n         * to set as the `id` property in the node.\n         *  @type string\n         *  @default DT_RowId\n         *\n         *  @name DataTable.defaults.rowId\n         */\n        \"rowId\": \"DT_RowId\"\n    };\n    \n    _fnHungarianMap( DataTable.defaults );\n    \n    \n    \n    /*\n     * Developer note - See note in model.defaults.js about the use of Hungarian\n     * notation and camel case.\n     */\n    \n    /**\n     * Column options that can be given to DataTables at initialisation time.\n     *  @namespace\n     */\n    DataTable.defaults.column = {\n        /**\n         * Define which column(s) an order will occur on for this column. This\n         * allows a column's ordering to take multiple columns into account when\n         * doing a sort or use the data from a different column. For example first\n         * name / last name columns make sense to do a multi-column sort over the\n         * two columns.\n         *  @type array|int\n         *  @default null <i>Takes the value of the column index automatically</i>\n         *\n         *  @name DataTable.defaults.column.orderData\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n         *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n         *          { \"orderData\": 2, \"targets\": [ 2 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"orderData\": [ 0, 1 ] },\n         *          { \"orderData\": [ 1, 0 ] },\n         *          { \"orderData\": 2 },\n         *          null,\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"aDataSort\": null,\n        \"iDataSort\": -1,\n    \n    \n        /**\n         * You can control the default ordering direction, and even alter the\n         * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n         * using this parameter.\n         *  @type array\n         *  @default [ 'asc', 'desc' ]\n         *\n         *  @name DataTable.defaults.column.orderSequence\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n         *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n         *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          null,\n         *          { \"orderSequence\": [ \"asc\" ] },\n         *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n         *          { \"orderSequence\": [ \"desc\" ] },\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"asSorting\": [ 'asc', 'desc' ],\n    \n    \n        /**\n         * Enable or disable filtering on the data in this column.\n         *  @type boolean\n         *  @default true\n         *\n         *  @name DataTable.defaults.column.searchable\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"searchable\": false, \"targets\": [ 0 ] }\n         *        ] } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"searchable\": false },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ] } );\n         *    } );\n         */\n        \"bSearchable\": true,\n    \n    \n        /**\n         * Enable or disable ordering on this column.\n         *  @type boolean\n         *  @default true\n         *\n         *  @name DataTable.defaults.column.orderable\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"orderable\": false, \"targets\": [ 0 ] }\n         *        ] } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"orderable\": false },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ] } );\n         *    } );\n         */\n        \"bSortable\": true,\n    \n    \n        /**\n         * Enable or disable the display of this column.\n         *  @type boolean\n         *  @default true\n         *\n         *  @name DataTable.defaults.column.visible\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"visible\": false, \"targets\": [ 0 ] }\n         *        ] } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"visible\": false },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ] } );\n         *    } );\n         */\n        \"bVisible\": true,\n    \n    \n        /**\n         * Developer definable function that is called whenever a cell is created (Ajax source,\n         * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n         * allowing you to modify the DOM element (add background colour for example) when the\n         * element is available.\n         *  @type function\n         *  @param {element} td The TD node that has been created\n         *  @param {*} cellData The Data for the cell\n         *  @param {array|object} rowData The data for the whole row\n         *  @param {int} row The row index for the aoData data store\n         *  @param {int} col The column index for aoColumns\n         *\n         *  @name DataTable.defaults.column.createdCell\n         *  @dtopt Columns\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [3],\n         *          \"createdCell\": function (td, cellData, rowData, row, col) {\n         *            if ( cellData == \"1.7\" ) {\n         *              $(td).css('color', 'blue')\n         *            }\n         *          }\n         *        } ]\n         *      });\n         *    } );\n         */\n        \"fnCreatedCell\": null,\n    \n    \n        /**\n         * This parameter has been replaced by `data` in DataTables to ensure naming\n         * consistency. `dataProp` can still be used, as there is backwards\n         * compatibility in DataTables for this option, but it is strongly\n         * recommended that you use `data` in preference to `dataProp`.\n         *  @name DataTable.defaults.column.dataProp\n         */\n    \n    \n        /**\n         * This property can be used to read data from any data source property,\n         * including deeply nested objects / properties. `data` can be given in a\n         * number of different ways which effect its behaviour:\n         *\n         * * `integer` - treated as an array index for the data source. This is the\n         *   default that DataTables uses (incrementally increased for each column).\n         * * `string` - read an object property from the data source. There are\n         *   three 'special' options that can be used in the string to alter how\n         *   DataTables reads the data from the source object:\n         *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n         *      Javascript to read from nested objects, so to can the options\n         *      specified in `data`. For example: `browser.version` or\n         *      `browser.name`. If your object parameter name contains a period, use\n         *      `\\\\` to escape it - i.e. `first\\\\.name`.\n         *    * `[]` - Array notation. DataTables can automatically combine data\n         *      from and array source, joining the data with the characters provided\n         *      between the two brackets. For example: `name[, ]` would provide a\n         *      comma-space separated list from the source array. If no characters\n         *      are provided between the brackets, the original array source is\n         *      returned.\n         *    * `()` - Function notation. Adding `()` to the end of a parameter will\n         *      execute a function of the name given. For example: `browser()` for a\n         *      simple function on the data source, `browser.version()` for a\n         *      function in a nested property or even `browser().version` to get an\n         *      object property if the function called returns an object. Note that\n         *      function notation is recommended for use in `render` rather than\n         *      `data` as it is much simpler to use as a renderer.\n         * * `null` - use the original data source for the row rather than plucking\n         *   data directly from it. This action has effects on two other\n         *   initialisation options:\n         *    * `defaultContent` - When null is given as the `data` option and\n         *      `defaultContent` is specified for the column, the value defined by\n         *      `defaultContent` will be used for the cell.\n         *    * `render` - When null is used for the `data` option and the `render`\n         *      option is specified for the column, the whole data source for the\n         *      row is used for the renderer.\n         * * `function` - the function given will be executed whenever DataTables\n         *   needs to set or get the data for a cell in the column. The function\n         *   takes three parameters:\n         *    * Parameters:\n         *      * `{array|object}` The data source for the row\n         *      * `{string}` The type call data requested - this will be 'set' when\n         *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n         *        when gathering data. Note that when `undefined` is given for the\n         *        type DataTables expects to get the raw data for the object back<\n         *      * `{*}` Data to set when the second parameter is 'set'.\n         *    * Return:\n         *      * The return value from the function is not required when 'set' is\n         *        the type of call, but otherwise the return is what will be used\n         *        for the data requested.\n         *\n         * Note that `data` is a getter and setter option. If you just require\n         * formatting of data for output, you will likely want to use `render` which\n         * is simply a getter and thus simpler to use.\n         *\n         * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n         * name change reflects the flexibility of this property and is consistent\n         * with the naming of mRender. If 'mDataProp' is given, then it will still\n         * be used by DataTables, as it automatically maps the old name to the new\n         * if required.\n         *\n         *  @type string|int|function|null\n         *  @default null <i>Use automatically calculated column index</i>\n         *\n         *  @name DataTable.defaults.column.data\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Read table data from objects\n         *    // JSON structure for each row:\n         *    //   {\n         *    //      \"engine\": {value},\n         *    //      \"browser\": {value},\n         *    //      \"platform\": {value},\n         *    //      \"version\": {value},\n         *    //      \"grade\": {value}\n         *    //   }\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"ajaxSource\": \"sources/objects.txt\",\n         *        \"columns\": [\n         *          { \"data\": \"engine\" },\n         *          { \"data\": \"browser\" },\n         *          { \"data\": \"platform\" },\n         *          { \"data\": \"version\" },\n         *          { \"data\": \"grade\" }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Read information from deeply nested objects\n         *    // JSON structure for each row:\n         *    //   {\n         *    //      \"engine\": {value},\n         *    //      \"browser\": {value},\n         *    //      \"platform\": {\n         *    //         \"inner\": {value}\n         *    //      },\n         *    //      \"details\": [\n         *    //         {value}, {value}\n         *    //      ]\n         *    //   }\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"ajaxSource\": \"sources/deep.txt\",\n         *        \"columns\": [\n         *          { \"data\": \"engine\" },\n         *          { \"data\": \"browser\" },\n         *          { \"data\": \"platform.inner\" },\n         *          { \"data\": \"platform.details.0\" },\n         *          { \"data\": \"platform.details.1\" }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `data` as a function to provide different information for\n         *    // sorting, filtering and display. In this case, currency (price)\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": function ( source, type, val ) {\n         *            if (type === 'set') {\n         *              source.price = val;\n         *              // Store the computed dislay and filter values for efficiency\n         *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n         *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n         *              return;\n         *            }\n         *            else if (type === 'display') {\n         *              return source.price_display;\n         *            }\n         *            else if (type === 'filter') {\n         *              return source.price_filter;\n         *            }\n         *            // 'sort', 'type' and undefined all just use the integer\n         *            return source.price;\n         *          }\n         *        } ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using default content\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": null,\n         *          \"defaultContent\": \"Click to edit\"\n         *        } ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using array notation - outputting a list from an array\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": \"name[, ]\"\n         *        } ]\n         *      } );\n         *    } );\n         *\n         */\n        \"mData\": null,\n    \n    \n        /**\n         * This property is the rendering partner to `data` and it is suggested that\n         * when you want to manipulate data for display (including filtering,\n         * sorting etc) without altering the underlying data for the table, use this\n         * property. `render` can be considered to be the the read only companion to\n         * `data` which is read / write (then as such more complex). Like `data`\n         * this option can be given in a number of different ways to effect its\n         * behaviour:\n         *\n         * * `integer` - treated as an array index for the data source. This is the\n         *   default that DataTables uses (incrementally increased for each column).\n         * * `string` - read an object property from the data source. There are\n         *   three 'special' options that can be used in the string to alter how\n         *   DataTables reads the data from the source object:\n         *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n         *      Javascript to read from nested objects, so to can the options\n         *      specified in `data`. For example: `browser.version` or\n         *      `browser.name`. If your object parameter name contains a period, use\n         *      `\\\\` to escape it - i.e. `first\\\\.name`.\n         *    * `[]` - Array notation. DataTables can automatically combine data\n         *      from and array source, joining the data with the characters provided\n         *      between the two brackets. For example: `name[, ]` would provide a\n         *      comma-space separated list from the source array. If no characters\n         *      are provided between the brackets, the original array source is\n         *      returned.\n         *    * `()` - Function notation. Adding `()` to the end of a parameter will\n         *      execute a function of the name given. For example: `browser()` for a\n         *      simple function on the data source, `browser.version()` for a\n         *      function in a nested property or even `browser().version` to get an\n         *      object property if the function called returns an object.\n         * * `object` - use different data for the different data types requested by\n         *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n         *   of the object is the data type the property refers to and the value can\n         *   defined using an integer, string or function using the same rules as\n         *   `render` normally does. Note that an `_` option _must_ be specified.\n         *   This is the default value to use if you haven't specified a value for\n         *   the data type requested by DataTables.\n         * * `function` - the function given will be executed whenever DataTables\n         *   needs to set or get the data for a cell in the column. The function\n         *   takes three parameters:\n         *    * Parameters:\n         *      * {array|object} The data source for the row (based on `data`)\n         *      * {string} The type call data requested - this will be 'filter',\n         *        'display', 'type' or 'sort'.\n         *      * {array|object} The full data source for the row (not based on\n         *        `data`)\n         *    * Return:\n         *      * The return value from the function is what will be used for the\n         *        data requested.\n         *\n         *  @type string|int|function|object|null\n         *  @default null Use the data source value.\n         *\n         *  @name DataTable.defaults.column.render\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Create a comma separated list from an array of objects\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"ajaxSource\": \"sources/deep.txt\",\n         *        \"columns\": [\n         *          { \"data\": \"engine\" },\n         *          { \"data\": \"browser\" },\n         *          {\n         *            \"data\": \"platform\",\n         *            \"render\": \"[, ].name\"\n         *          }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Execute a function to obtain data\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": null, // Use the full data source object for the renderer's source\n         *          \"render\": \"browserName()\"\n         *        } ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // As an object, extracting different data for the different types\n         *    // This would be used with a data source such as:\n         *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n         *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n         *    // (which has both forms) is used for filtering for if a user inputs either format, while\n         *    // the formatted phone number is the one that is shown in the table.\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": null, // Use the full data source object for the renderer's source\n         *          \"render\": {\n         *            \"_\": \"phone\",\n         *            \"filter\": \"phone_filter\",\n         *            \"display\": \"phone_display\"\n         *          }\n         *        } ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Use as a function to create a link from the data source\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": \"download_link\",\n         *          \"render\": function ( data, type, full ) {\n         *            return '<a href=\"'+data+'\">Download</a>';\n         *          }\n         *        } ]\n         *      } );\n         *    } );\n         */\n        \"mRender\": null,\n    \n    \n        /**\n         * Change the cell type created for the column - either TD cells or TH cells. This\n         * can be useful as TH cells have semantic meaning in the table body, allowing them\n         * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n         *  @type string\n         *  @default td\n         *\n         *  @name DataTable.defaults.column.cellType\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Make the first column use TH cells\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"cellType\": \"th\"\n         *        } ]\n         *      } );\n         *    } );\n         */\n        \"sCellType\": \"td\",\n    \n    \n        /**\n         * Class to give to each cell in this column.\n         *  @type string\n         *  @default <i>Empty string</i>\n         *\n         *  @name DataTable.defaults.column.class\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"class\": \"my_class\" },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"sClass\": \"\",\n    \n        /**\n         * When DataTables calculates the column widths to assign to each column,\n         * it finds the longest string in each column and then constructs a\n         * temporary table and reads the widths from that. The problem with this\n         * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n         * string - thus the calculation can go wrong (doing it properly and putting\n         * it into an DOM object and measuring that is horribly(!) slow). Thus as\n         * a \"work around\" we provide this option. It will append its value to the\n         * text that is found to be the longest string for the column - i.e. padding.\n         * Generally you shouldn't need this!\n         *  @type string\n         *  @default <i>Empty string<i>\n         *\n         *  @name DataTable.defaults.column.contentPadding\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          null,\n         *          null,\n         *          null,\n         *          {\n         *            \"contentPadding\": \"mmm\"\n         *          }\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"sContentPadding\": \"\",\n    \n    \n        /**\n         * Allows a default value to be given for a column's data, and will be used\n         * whenever a null data source is encountered (this can be because `data`\n         * is set to null, or because the data source itself is null).\n         *  @type string\n         *  @default null\n         *\n         *  @name DataTable.defaults.column.defaultContent\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          {\n         *            \"data\": null,\n         *            \"defaultContent\": \"Edit\",\n         *            \"targets\": [ -1 ]\n         *          }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          null,\n         *          null,\n         *          null,\n         *          {\n         *            \"data\": null,\n         *            \"defaultContent\": \"Edit\"\n         *          }\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"sDefaultContent\": null,\n    \n    \n        /**\n         * This parameter is only used in DataTables' server-side processing. It can\n         * be exceptionally useful to know what columns are being displayed on the\n         * client side, and to map these to database fields. When defined, the names\n         * also allow DataTables to reorder information from the server if it comes\n         * back in an unexpected order (i.e. if you switch your columns around on the\n         * client-side, your server-side code does not also need updating).\n         *  @type string\n         *  @default <i>Empty string</i>\n         *\n         *  @name DataTable.defaults.column.name\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n         *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n         *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n         *          { \"name\": \"version\", \"targets\": [ 3 ] },\n         *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"name\": \"engine\" },\n         *          { \"name\": \"browser\" },\n         *          { \"name\": \"platform\" },\n         *          { \"name\": \"version\" },\n         *          { \"name\": \"grade\" }\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"sName\": \"\",\n    \n    \n        /**\n         * Defines a data source type for the ordering which can be used to read\n         * real-time information from the table (updating the internally cached\n         * version) prior to ordering. This allows ordering to occur on user\n         * editable elements such as form inputs.\n         *  @type string\n         *  @default std\n         *\n         *  @name DataTable.defaults.column.orderDataType\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n         *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n         *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n         *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          null,\n         *          null,\n         *          { \"orderDataType\": \"dom-text\" },\n         *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n         *          { \"orderDataType\": \"dom-select\" },\n         *          { \"orderDataType\": \"dom-checkbox\" }\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"sSortDataType\": \"std\",\n    \n    \n        /**\n         * The title of this column.\n         *  @type string\n         *  @default null <i>Derived from the 'TH' value for this column in the\n         *    original HTML table.</i>\n         *\n         *  @name DataTable.defaults.column.title\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"title\": \"My column title\" },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"sTitle\": null,\n    \n    \n        /**\n         * The type allows you to specify how the data for this column will be\n         * ordered. Four types (string, numeric, date and html (which will strip\n         * HTML tags before ordering)) are currently available. Note that only date\n         * formats understood by Javascript's Date() object will be accepted as type\n         * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n         * 'numeric', 'date' or 'html' (by default). Further types can be adding\n         * through plug-ins.\n         *  @type string\n         *  @default null <i>Auto-detected from raw data</i>\n         *\n         *  @name DataTable.defaults.column.type\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"type\": \"html\", \"targets\": [ 0 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"type\": \"html\" },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"sType\": null,\n    \n    \n        /**\n         * Defining the width of the column, this parameter may take any CSS value\n         * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n         * been given a specific width through this interface ensuring that the table\n         * remains readable.\n         *  @type string\n         *  @default null <i>Automatic</i>\n         *\n         *  @name DataTable.defaults.column.width\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"width\": \"20%\" },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"sWidth\": null\n    };\n    \n    _fnHungarianMap( DataTable.defaults.column );\n    \n    \n    \n    /**\n     * DataTables settings object - this holds all the information needed for a\n     * given table, including configuration, data and current application of the\n     * table options. DataTables does not have a single instance for each DataTable\n     * with the settings attached to that instance, but rather instances of the\n     * DataTable \"class\" are created on-the-fly as needed (typically by a\n     * $().dataTable() call) and the settings object is then applied to that\n     * instance.\n     *\n     * Note that this object is related to {@link DataTable.defaults} but this\n     * one is the internal data store for DataTables's cache of columns. It should\n     * NOT be manipulated outside of DataTables. Any configuration should be done\n     * through the initialisation options.\n     *  @namespace\n     *  @todo Really should attach the settings object to individual instances so we\n     *    don't need to create new instances on each $().dataTable() call (if the\n     *    table already exists). It would also save passing oSettings around and\n     *    into every single function. However, this is a very significant\n     *    architecture change for DataTables and will almost certainly break\n     *    backwards compatibility with older installations. This is something that\n     *    will be done in 2.0.\n     */\n    DataTable.models.oSettings = {\n        /**\n         * Primary features of DataTables and their enablement state.\n         *  @namespace\n         */\n        \"oFeatures\": {\n    \n            /**\n             * Flag to say if DataTables should automatically try to calculate the\n             * optimum table and columns widths (true) or not (false).\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bAutoWidth\": null,\n    \n            /**\n             * Delay the creation of TR and TD elements until they are actually\n             * needed by a driven page draw. This can give a significant speed\n             * increase for Ajax source and Javascript source data, but makes no\n             * difference at all fro DOM and server-side processing tables.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bDeferRender\": null,\n    \n            /**\n             * Enable filtering on the table or not. Note that if this is disabled\n             * then there is no filtering at all on the table, including fnFilter.\n             * To just remove the filtering input use sDom and remove the 'f' option.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bFilter\": null,\n    \n            /**\n             * Table information element (the 'Showing x of y records' div) enable\n             * flag.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bInfo\": null,\n    \n            /**\n             * Present a user control allowing the end user to change the page size\n             * when pagination is enabled.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bLengthChange\": null,\n    \n            /**\n             * Pagination enabled or not. Note that if this is disabled then length\n             * changing must also be disabled.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bPaginate\": null,\n    \n            /**\n             * Processing indicator enable flag whenever DataTables is enacting a\n             * user request - typically an Ajax request for server-side processing.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bProcessing\": null,\n    \n            /**\n             * Server-side processing enabled flag - when enabled DataTables will\n             * get all data from the server for every draw - there is no filtering,\n             * sorting or paging done on the client-side.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bServerSide\": null,\n    \n            /**\n             * Sorting enablement flag.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bSort\": null,\n    \n            /**\n             * Multi-column sorting\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bSortMulti\": null,\n    \n            /**\n             * Apply a class to the columns which are being sorted to provide a\n             * visual highlight or not. This can slow things down when enabled since\n             * there is a lot of DOM interaction.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bSortClasses\": null,\n    \n            /**\n             * State saving enablement flag.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bStateSave\": null\n        },\n    \n    \n        /**\n         * Scrolling settings for a table.\n         *  @namespace\n         */\n        \"oScroll\": {\n            /**\n             * When the table is shorter in height than sScrollY, collapse the\n             * table container down to the height of the table (when true).\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bCollapse\": null,\n    \n            /**\n             * Width of the scrollbar for the web-browser's platform. Calculated\n             * during table initialisation.\n             *  @type int\n             *  @default 0\n             */\n            \"iBarWidth\": 0,\n    \n            /**\n             * Viewport width for horizontal scrolling. Horizontal scrolling is\n             * disabled if an empty string.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type string\n             */\n            \"sX\": null,\n    \n            /**\n             * Width to expand the table to when using x-scrolling. Typically you\n             * should not need to use this.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type string\n             *  @deprecated\n             */\n            \"sXInner\": null,\n    \n            /**\n             * Viewport height for vertical scrolling. Vertical scrolling is disabled\n             * if an empty string.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type string\n             */\n            \"sY\": null\n        },\n    \n        /**\n         * Language information for the table.\n         *  @namespace\n         *  @extends DataTable.defaults.oLanguage\n         */\n        \"oLanguage\": {\n            /**\n             * Information callback function. See\n             * {@link DataTable.defaults.fnInfoCallback}\n             *  @type function\n             *  @default null\n             */\n            \"fnInfoCallback\": null\n        },\n    \n        /**\n         * Browser support parameters\n         *  @namespace\n         */\n        \"oBrowser\": {\n            /**\n             * Indicate if the browser incorrectly calculates width:100% inside a\n             * scrolling element (IE6/7)\n             *  @type boolean\n             *  @default false\n             */\n            \"bScrollOversize\": false,\n    \n            /**\n             * Determine if the vertical scrollbar is on the right or left of the\n             * scrolling container - needed for rtl language layout, although not\n             * all browsers move the scrollbar (Safari).\n             *  @type boolean\n             *  @default false\n             */\n            \"bScrollbarLeft\": false,\n    \n            /**\n             * Flag for if `getBoundingClientRect` is fully supported or not\n             *  @type boolean\n             *  @default false\n             */\n            \"bBounding\": false,\n    \n            /**\n             * Browser scrollbar width\n             *  @type integer\n             *  @default 0\n             */\n            \"barWidth\": 0\n        },\n    \n    \n        \"ajax\": null,\n    \n    \n        /**\n         * Array referencing the nodes which are used for the features. The\n         * parameters of this object match what is allowed by sDom - i.e.\n         *   <ul>\n         *     <li>'l' - Length changing</li>\n         *     <li>'f' - Filtering input</li>\n         *     <li>'t' - The table!</li>\n         *     <li>'i' - Information</li>\n         *     <li>'p' - Pagination</li>\n         *     <li>'r' - pRocessing</li>\n         *   </ul>\n         *  @type array\n         *  @default []\n         */\n        \"aanFeatures\": [],\n    \n        /**\n         * Store data information - see {@link DataTable.models.oRow} for detailed\n         * information.\n         *  @type array\n         *  @default []\n         */\n        \"aoData\": [],\n    \n        /**\n         * Array of indexes which are in the current display (after filtering etc)\n         *  @type array\n         *  @default []\n         */\n        \"aiDisplay\": [],\n    \n        /**\n         * Array of indexes for display - no filtering\n         *  @type array\n         *  @default []\n         */\n        \"aiDisplayMaster\": [],\n    \n        /**\n         * Map of row ids to data indexes\n         *  @type object\n         *  @default {}\n         */\n        \"aIds\": {},\n    \n        /**\n         * Store information about each column that is in use\n         *  @type array\n         *  @default []\n         */\n        \"aoColumns\": [],\n    \n        /**\n         * Store information about the table's header\n         *  @type array\n         *  @default []\n         */\n        \"aoHeader\": [],\n    \n        /**\n         * Store information about the table's footer\n         *  @type array\n         *  @default []\n         */\n        \"aoFooter\": [],\n    \n        /**\n         * Store the applied global search information in case we want to force a\n         * research or compare the old search to a new one.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @namespace\n         *  @extends DataTable.models.oSearch\n         */\n        \"oPreviousSearch\": {},\n    \n        /**\n         * Store the applied search for each column - see\n         * {@link DataTable.models.oSearch} for the format that is used for the\n         * filtering information for each column.\n         *  @type array\n         *  @default []\n         */\n        \"aoPreSearchCols\": [],\n    \n        /**\n         * Sorting that is applied to the table. Note that the inner arrays are\n         * used in the following manner:\n         * <ul>\n         *   <li>Index 0 - column number</li>\n         *   <li>Index 1 - current sorting direction</li>\n         * </ul>\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type array\n         *  @todo These inner arrays should really be objects\n         */\n        \"aaSorting\": null,\n    \n        /**\n         * Sorting that is always applied to the table (i.e. prefixed in front of\n         * aaSorting).\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type array\n         *  @default []\n         */\n        \"aaSortingFixed\": [],\n    \n        /**\n         * Classes to use for the striping of a table.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type array\n         *  @default []\n         */\n        \"asStripeClasses\": null,\n    \n        /**\n         * If restoring a table - we should restore its striping classes as well\n         *  @type array\n         *  @default []\n         */\n        \"asDestroyStripes\": [],\n    \n        /**\n         * If restoring a table - we should restore its width\n         *  @type int\n         *  @default 0\n         */\n        \"sDestroyWidth\": 0,\n    \n        /**\n         * Callback functions array for every time a row is inserted (i.e. on a draw).\n         *  @type array\n         *  @default []\n         */\n        \"aoRowCallback\": [],\n    \n        /**\n         * Callback functions for the header on each draw.\n         *  @type array\n         *  @default []\n         */\n        \"aoHeaderCallback\": [],\n    \n        /**\n         * Callback function for the footer on each draw.\n         *  @type array\n         *  @default []\n         */\n        \"aoFooterCallback\": [],\n    \n        /**\n         * Array of callback functions for draw callback functions\n         *  @type array\n         *  @default []\n         */\n        \"aoDrawCallback\": [],\n    \n        /**\n         * Array of callback functions for row created function\n         *  @type array\n         *  @default []\n         */\n        \"aoRowCreatedCallback\": [],\n    \n        /**\n         * Callback functions for just before the table is redrawn. A return of\n         * false will be used to cancel the draw.\n         *  @type array\n         *  @default []\n         */\n        \"aoPreDrawCallback\": [],\n    \n        /**\n         * Callback functions for when the table has been initialised.\n         *  @type array\n         *  @default []\n         */\n        \"aoInitComplete\": [],\n    \n    \n        /**\n         * Callbacks for modifying the settings to be stored for state saving, prior to\n         * saving state.\n         *  @type array\n         *  @default []\n         */\n        \"aoStateSaveParams\": [],\n    \n        /**\n         * Callbacks for modifying the settings that have been stored for state saving\n         * prior to using the stored values to restore the state.\n         *  @type array\n         *  @default []\n         */\n        \"aoStateLoadParams\": [],\n    \n        /**\n         * Callbacks for operating on the settings object once the saved state has been\n         * loaded\n         *  @type array\n         *  @default []\n         */\n        \"aoStateLoaded\": [],\n    \n        /**\n         * Cache the table ID for quick access\n         *  @type string\n         *  @default <i>Empty string</i>\n         */\n        \"sTableId\": \"\",\n    \n        /**\n         * The TABLE node for the main table\n         *  @type node\n         *  @default null\n         */\n        \"nTable\": null,\n    \n        /**\n         * Permanent ref to the thead element\n         *  @type node\n         *  @default null\n         */\n        \"nTHead\": null,\n    \n        /**\n         * Permanent ref to the tfoot element - if it exists\n         *  @type node\n         *  @default null\n         */\n        \"nTFoot\": null,\n    \n        /**\n         * Permanent ref to the tbody element\n         *  @type node\n         *  @default null\n         */\n        \"nTBody\": null,\n    \n        /**\n         * Cache the wrapper node (contains all DataTables controlled elements)\n         *  @type node\n         *  @default null\n         */\n        \"nTableWrapper\": null,\n    \n        /**\n         * Indicate if when using server-side processing the loading of data\n         * should be deferred until the second draw.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type boolean\n         *  @default false\n         */\n        \"bDeferLoading\": false,\n    \n        /**\n         * Indicate if all required information has been read in\n         *  @type boolean\n         *  @default false\n         */\n        \"bInitialised\": false,\n    \n        /**\n         * Information about open rows. Each object in the array has the parameters\n         * 'nTr' and 'nParent'\n         *  @type array\n         *  @default []\n         */\n        \"aoOpenRows\": [],\n    \n        /**\n         * Dictate the positioning of DataTables' control elements - see\n         * {@link DataTable.model.oInit.sDom}.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type string\n         *  @default null\n         */\n        \"sDom\": null,\n    \n        /**\n         * Search delay (in mS)\n         *  @type integer\n         *  @default null\n         */\n        \"searchDelay\": null,\n    \n        /**\n         * Which type of pagination should be used.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type string\n         *  @default two_button\n         */\n        \"sPaginationType\": \"two_button\",\n    \n        /**\n         * The state duration (for `stateSave`) in seconds.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type int\n         *  @default 0\n         */\n        \"iStateDuration\": 0,\n    \n        /**\n         * Array of callback functions for state saving. Each array element is an\n         * object with the following parameters:\n         *   <ul>\n         *     <li>function:fn - function to call. Takes two parameters, oSettings\n         *       and the JSON string to save that has been thus far created. Returns\n         *       a JSON string to be inserted into a json object\n         *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n         *     <li>string:sName - name of callback</li>\n         *   </ul>\n         *  @type array\n         *  @default []\n         */\n        \"aoStateSave\": [],\n    \n        /**\n         * Array of callback functions for state loading. Each array element is an\n         * object with the following parameters:\n         *   <ul>\n         *     <li>function:fn - function to call. Takes two parameters, oSettings\n         *       and the object stored. May return false to cancel state loading</li>\n         *     <li>string:sName - name of callback</li>\n         *   </ul>\n         *  @type array\n         *  @default []\n         */\n        \"aoStateLoad\": [],\n    \n        /**\n         * State that was saved. Useful for back reference\n         *  @type object\n         *  @default null\n         */\n        \"oSavedState\": null,\n    \n        /**\n         * State that was loaded. Useful for back reference\n         *  @type object\n         *  @default null\n         */\n        \"oLoadedState\": null,\n    \n        /**\n         * Source url for AJAX data for the table.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type string\n         *  @default null\n         */\n        \"sAjaxSource\": null,\n    \n        /**\n         * Property from a given object from which to read the table data from. This\n         * can be an empty string (when not server-side processing), in which case\n         * it is  assumed an an array is given directly.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type string\n         */\n        \"sAjaxDataProp\": null,\n    \n        /**\n         * Note if draw should be blocked while getting data\n         *  @type boolean\n         *  @default true\n         */\n        \"bAjaxDataGet\": true,\n    \n        /**\n         * The last jQuery XHR object that was used for server-side data gathering.\n         * This can be used for working with the XHR information in one of the\n         * callbacks\n         *  @type object\n         *  @default null\n         */\n        \"jqXHR\": null,\n    \n        /**\n         * JSON returned from the server in the last Ajax request\n         *  @type object\n         *  @default undefined\n         */\n        \"json\": undefined,\n    \n        /**\n         * Data submitted as part of the last Ajax request\n         *  @type object\n         *  @default undefined\n         */\n        \"oAjaxData\": undefined,\n    \n        /**\n         * Function to get the server-side data.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type function\n         */\n        \"fnServerData\": null,\n    \n        /**\n         * Functions which are called prior to sending an Ajax request so extra\n         * parameters can easily be sent to the server\n         *  @type array\n         *  @default []\n         */\n        \"aoServerParams\": [],\n    \n        /**\n         * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n         * required).\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type string\n         */\n        \"sServerMethod\": null,\n    \n        /**\n         * Format numbers for display.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type function\n         */\n        \"fnFormatNumber\": null,\n    \n        /**\n         * List of options that can be used for the user selectable length menu.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type array\n         *  @default []\n         */\n        \"aLengthMenu\": null,\n    \n        /**\n         * Counter for the draws that the table does. Also used as a tracker for\n         * server-side processing\n         *  @type int\n         *  @default 0\n         */\n        \"iDraw\": 0,\n    \n        /**\n         * Indicate if a redraw is being done - useful for Ajax\n         *  @type boolean\n         *  @default false\n         */\n        \"bDrawing\": false,\n    \n        /**\n         * Draw index (iDraw) of the last error when parsing the returned data\n         *  @type int\n         *  @default -1\n         */\n        \"iDrawError\": -1,\n    \n        /**\n         * Paging display length\n         *  @type int\n         *  @default 10\n         */\n        \"_iDisplayLength\": 10,\n    \n        /**\n         * Paging start point - aiDisplay index\n         *  @type int\n         *  @default 0\n         */\n        \"_iDisplayStart\": 0,\n    \n        /**\n         * Server-side processing - number of records in the result set\n         * (i.e. before filtering), Use fnRecordsTotal rather than\n         * this property to get the value of the number of records, regardless of\n         * the server-side processing setting.\n         *  @type int\n         *  @default 0\n         *  @private\n         */\n        \"_iRecordsTotal\": 0,\n    \n        /**\n         * Server-side processing - number of records in the current display set\n         * (i.e. after filtering). Use fnRecordsDisplay rather than\n         * this property to get the value of the number of records, regardless of\n         * the server-side processing setting.\n         *  @type boolean\n         *  @default 0\n         *  @private\n         */\n        \"_iRecordsDisplay\": 0,\n    \n        /**\n         * Flag to indicate if jQuery UI marking and classes should be used.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type boolean\n         */\n        \"bJUI\": null,\n    \n        /**\n         * The classes to use for the table\n         *  @type object\n         *  @default {}\n         */\n        \"oClasses\": {},\n    \n        /**\n         * Flag attached to the settings object so you can check in the draw\n         * callback if filtering has been done in the draw. Deprecated in favour of\n         * events.\n         *  @type boolean\n         *  @default false\n         *  @deprecated\n         */\n        \"bFiltered\": false,\n    \n        /**\n         * Flag attached to the settings object so you can check in the draw\n         * callback if sorting has been done in the draw. Deprecated in favour of\n         * events.\n         *  @type boolean\n         *  @default false\n         *  @deprecated\n         */\n        \"bSorted\": false,\n    \n        /**\n         * Indicate that if multiple rows are in the header and there is more than\n         * one unique cell per column, if the top one (true) or bottom one (false)\n         * should be used for sorting / title by DataTables.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type boolean\n         */\n        \"bSortCellsTop\": null,\n    \n        /**\n         * Initialisation object that is used for the table\n         *  @type object\n         *  @default null\n         */\n        \"oInit\": null,\n    \n        /**\n         * Destroy callback functions - for plug-ins to attach themselves to the\n         * destroy so they can clean up markup and events.\n         *  @type array\n         *  @default []\n         */\n        \"aoDestroyCallback\": [],\n    \n    \n        /**\n         * Get the number of records in the current record set, before filtering\n         *  @type function\n         */\n        \"fnRecordsTotal\": function ()\n        {\n            return _fnDataSource( this ) == 'ssp' ?\n                this._iRecordsTotal * 1 :\n                this.aiDisplayMaster.length;\n        },\n    \n        /**\n         * Get the number of records in the current record set, after filtering\n         *  @type function\n         */\n        \"fnRecordsDisplay\": function ()\n        {\n            return _fnDataSource( this ) == 'ssp' ?\n                this._iRecordsDisplay * 1 :\n                this.aiDisplay.length;\n        },\n    \n        /**\n         * Get the display end point - aiDisplay index\n         *  @type function\n         */\n        \"fnDisplayEnd\": function ()\n        {\n            var\n                len      = this._iDisplayLength,\n                start    = this._iDisplayStart,\n                calc     = start + len,\n                records  = this.aiDisplay.length,\n                features = this.oFeatures,\n                paginate = features.bPaginate;\n    \n            if ( features.bServerSide ) {\n                return paginate === false || len === -1 ?\n                    start + records :\n                    Math.min( start+len, this._iRecordsDisplay );\n            }\n            else {\n                return ! paginate || calc>records || len===-1 ?\n                    records :\n                    calc;\n            }\n        },\n    \n        /**\n         * The DataTables object for this table\n         *  @type object\n         *  @default null\n         */\n        \"oInstance\": null,\n    \n        /**\n         * Unique identifier for each instance of the DataTables object. If there\n         * is an ID on the table node, then it takes that value, otherwise an\n         * incrementing internal counter is used.\n         *  @type string\n         *  @default null\n         */\n        \"sInstance\": null,\n    \n        /**\n         * tabindex attribute value that is added to DataTables control elements, allowing\n         * keyboard navigation of the table and its controls.\n         */\n        \"iTabIndex\": 0,\n    \n        /**\n         * DIV container for the footer scrolling table if scrolling\n         */\n        \"nScrollHead\": null,\n    \n        /**\n         * DIV container for the footer scrolling table if scrolling\n         */\n        \"nScrollFoot\": null,\n    \n        /**\n         * Last applied sort\n         *  @type array\n         *  @default []\n         */\n        \"aLastSort\": [],\n    \n        /**\n         * Stored plug-in instances\n         *  @type object\n         *  @default {}\n         */\n        \"oPlugins\": {},\n    \n        /**\n         * Function used to get a row's id from the row's data\n         *  @type function\n         *  @default null\n         */\n        \"rowIdFn\": null,\n    \n        /**\n         * Data location where to store a row's id\n         *  @type string\n         *  @default null\n         */\n        \"rowId\": null\n    };\n\n    /**\n     * Extension object for DataTables that is used to provide all extension\n     * options.\n     *\n     * Note that the `DataTable.ext` object is available through\n     * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n     * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n     *  @namespace\n     *  @extends DataTable.models.ext\n     */\n    \n    \n    /**\n     * DataTables extensions\n     * \n     * This namespace acts as a collection area for plug-ins that can be used to\n     * extend DataTables capabilities. Indeed many of the build in methods\n     * use this method to provide their own capabilities (sorting methods for\n     * example).\n     *\n     * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n     * reasons\n     *\n     *  @namespace\n     */\n    DataTable.ext = _ext = {\n        /**\n         * Buttons. For use with the Buttons extension for DataTables. This is\n         * defined here so other extensions can define buttons regardless of load\n         * order. It is _not_ used by DataTables core.\n         *\n         *  @type object\n         *  @default {}\n         */\n        buttons: {},\n    \n    \n        /**\n         * Element class names\n         *\n         *  @type object\n         *  @default {}\n         */\n        classes: {},\n    \n    \n        /**\n         * DataTables build type (expanded by the download builder)\n         *\n         *  @type string\n         */\n        builder: \"-source-\",\n    \n    \n        /**\n         * Error reporting.\n         * \n         * How should DataTables report an error. Can take the value 'alert',\n         * 'throw', 'none' or a function.\n         *\n         *  @type string|function\n         *  @default alert\n         */\n        errMode: \"alert\",\n    \n    \n        /**\n         * Feature plug-ins.\n         * \n         * This is an array of objects which describe the feature plug-ins that are\n         * available to DataTables. These feature plug-ins are then available for\n         * use through the `dom` initialisation option.\n         * \n         * Each feature plug-in is described by an object which must have the\n         * following properties:\n         * \n         * * `fnInit` - function that is used to initialise the plug-in,\n         * * `cFeature` - a character so the feature can be enabled by the `dom`\n         *   instillation option. This is case sensitive.\n         *\n         * The `fnInit` function has the following input parameters:\n         *\n         * 1. `{object}` DataTables settings object: see\n         *    {@link DataTable.models.oSettings}\n         *\n         * And the following return is expected:\n         * \n         * * {node|null} The element which contains your feature. Note that the\n         *   return may also be void if your plug-in does not require to inject any\n         *   DOM elements into DataTables control (`dom`) - for example this might\n         *   be useful when developing a plug-in which allows table control via\n         *   keyboard entry\n         *\n         *  @type array\n         *\n         *  @example\n         *    $.fn.dataTable.ext.features.push( {\n         *      \"fnInit\": function( oSettings ) {\n         *        return new TableTools( { \"oDTSettings\": oSettings } );\n         *      },\n         *      \"cFeature\": \"T\"\n         *    } );\n         */\n        feature: [],\n    \n    \n        /**\n         * Row searching.\n         * \n         * This method of searching is complimentary to the default type based\n         * searching, and a lot more comprehensive as it allows you complete control\n         * over the searching logic. Each element in this array is a function\n         * (parameters described below) that is called for every row in the table,\n         * and your logic decides if it should be included in the searching data set\n         * or not.\n         *\n         * Searching functions have the following input parameters:\n         *\n         * 1. `{object}` DataTables settings object: see\n         *    {@link DataTable.models.oSettings}\n         * 2. `{array|object}` Data for the row to be processed (same as the\n         *    original format that was passed in as the data source, or an array\n         *    from a DOM data source\n         * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n         *    can be useful to retrieve the `TR` element if you need DOM interaction.\n         *\n         * And the following return is expected:\n         *\n         * * {boolean} Include the row in the searched result set (true) or not\n         *   (false)\n         *\n         * Note that as with the main search ability in DataTables, technically this\n         * is \"filtering\", since it is subtractive. However, for consistency in\n         * naming we call it searching here.\n         *\n         *  @type array\n         *  @default []\n         *\n         *  @example\n         *    // The following example shows custom search being applied to the\n         *    // fourth column (i.e. the data[3] index) based on two input values\n         *    // from the end-user, matching the data in a certain range.\n         *    $.fn.dataTable.ext.search.push(\n         *      function( settings, data, dataIndex ) {\n         *        var min = document.getElementById('min').value * 1;\n         *        var max = document.getElementById('max').value * 1;\n         *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n         *\n         *        if ( min == \"\" && max == \"\" ) {\n         *          return true;\n         *        }\n         *        else if ( min == \"\" && version < max ) {\n         *          return true;\n         *        }\n         *        else if ( min < version && \"\" == max ) {\n         *          return true;\n         *        }\n         *        else if ( min < version && version < max ) {\n         *          return true;\n         *        }\n         *        return false;\n         *      }\n         *    );\n         */\n        search: [],\n    \n    \n        /**\n         * Selector extensions\n         *\n         * The `selector` option can be used to extend the options available for the\n         * selector modifier options (`selector-modifier` object data type) that\n         * each of the three built in selector types offer (row, column and cell +\n         * their plural counterparts). For example the Select extension uses this\n         * mechanism to provide an option to select only rows, columns and cells\n         * that have been marked as selected by the end user (`{selected: true}`),\n         * which can be used in conjunction with the existing built in selector\n         * options.\n         *\n         * Each property is an array to which functions can be pushed. The functions\n         * take three attributes:\n         *\n         * * Settings object for the host table\n         * * Options object (`selector-modifier` object type)\n         * * Array of selected item indexes\n         *\n         * The return is an array of the resulting item indexes after the custom\n         * selector has been applied.\n         *\n         *  @type object\n         */\n        selector: {\n            cell: [],\n            column: [],\n            row: []\n        },\n    \n    \n        /**\n         * Internal functions, exposed for used in plug-ins.\n         * \n         * Please note that you should not need to use the internal methods for\n         * anything other than a plug-in (and even then, try to avoid if possible).\n         * The internal function may change between releases.\n         *\n         *  @type object\n         *  @default {}\n         */\n        internal: {},\n    \n    \n        /**\n         * Legacy configuration options. Enable and disable legacy options that\n         * are available in DataTables.\n         *\n         *  @type object\n         */\n        legacy: {\n            /**\n             * Enable / disable DataTables 1.9 compatible server-side processing\n             * requests\n             *\n             *  @type boolean\n             *  @default null\n             */\n            ajax: null\n        },\n    \n    \n        /**\n         * Pagination plug-in methods.\n         * \n         * Each entry in this object is a function and defines which buttons should\n         * be shown by the pagination rendering method that is used for the table:\n         * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n         * buttons are displayed in the document, while the functions here tell it\n         * what buttons to display. This is done by returning an array of button\n         * descriptions (what each button will do).\n         *\n         * Pagination types (the four built in options and any additional plug-in\n         * options defined here) can be used through the `paginationType`\n         * initialisation parameter.\n         *\n         * The functions defined take two parameters:\n         *\n         * 1. `{int} page` The current page index\n         * 2. `{int} pages` The number of pages in the table\n         *\n         * Each function is expected to return an array where each element of the\n         * array can be one of:\n         *\n         * * `first` - Jump to first page when activated\n         * * `last` - Jump to last page when activated\n         * * `previous` - Show previous page when activated\n         * * `next` - Show next page when activated\n         * * `{int}` - Show page of the index given\n         * * `{array}` - A nested array containing the above elements to add a\n         *   containing 'DIV' element (might be useful for styling).\n         *\n         * Note that DataTables v1.9- used this object slightly differently whereby\n         * an object with two functions would be defined for each plug-in. That\n         * ability is still supported by DataTables 1.10+ to provide backwards\n         * compatibility, but this option of use is now decremented and no longer\n         * documented in DataTables 1.10+.\n         *\n         *  @type object\n         *  @default {}\n         *\n         *  @example\n         *    // Show previous, next and current page buttons only\n         *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n         *      return [ 'previous', page, 'next' ];\n         *    };\n         */\n        pager: {},\n    \n    \n        renderer: {\n            pageButton: {},\n            header: {}\n        },\n    \n    \n        /**\n         * Ordering plug-ins - custom data source\n         * \n         * The extension options for ordering of data available here is complimentary\n         * to the default type based ordering that DataTables typically uses. It\n         * allows much greater control over the the data that is being used to\n         * order a column, but is necessarily therefore more complex.\n         * \n         * This type of ordering is useful if you want to do ordering based on data\n         * live from the DOM (for example the contents of an 'input' element) rather\n         * than just the static string that DataTables knows of.\n         * \n         * The way these plug-ins work is that you create an array of the values you\n         * wish to be ordering for the column in question and then return that\n         * array. The data in the array much be in the index order of the rows in\n         * the table (not the currently ordering order!). Which order data gathering\n         * function is run here depends on the `dt-init columns.orderDataType`\n         * parameter that is used for the column (if any).\n         *\n         * The functions defined take two parameters:\n         *\n         * 1. `{object}` DataTables settings object: see\n         *    {@link DataTable.models.oSettings}\n         * 2. `{int}` Target column index\n         *\n         * Each function is expected to return an array:\n         *\n         * * `{array}` Data for the column to be ordering upon\n         *\n         *  @type array\n         *\n         *  @example\n         *    // Ordering using `input` node values\n         *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n         *    {\n         *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n         *        return $('input', td).val();\n         *      } );\n         *    }\n         */\n        order: {},\n    \n    \n        /**\n         * Type based plug-ins.\n         *\n         * Each column in DataTables has a type assigned to it, either by automatic\n         * detection or by direct assignment using the `type` option for the column.\n         * The type of a column will effect how it is ordering and search (plug-ins\n         * can also make use of the column type if required).\n         *\n         * @namespace\n         */\n        type: {\n            /**\n             * Type detection functions.\n             *\n             * The functions defined in this object are used to automatically detect\n             * a column's type, making initialisation of DataTables super easy, even\n             * when complex data is in the table.\n             *\n             * The functions defined take two parameters:\n             *\n             *  1. `{*}` Data from the column cell to be analysed\n             *  2. `{settings}` DataTables settings object. This can be used to\n             *     perform context specific type detection - for example detection\n             *     based on language settings such as using a comma for a decimal\n             *     place. Generally speaking the options from the settings will not\n             *     be required\n             *\n             * Each function is expected to return:\n             *\n             * * `{string|null}` Data type detected, or null if unknown (and thus\n             *   pass it on to the other type detection functions.\n             *\n             *  @type array\n             *\n             *  @example\n             *    // Currency type detection plug-in:\n             *    $.fn.dataTable.ext.type.detect.push(\n             *      function ( data, settings ) {\n             *        // Check the numeric part\n             *        if ( ! $.isNumeric( data.substring(1) ) ) {\n             *          return null;\n             *        }\n             *\n             *        // Check prefixed by currency\n             *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n             *          return 'currency';\n             *        }\n             *        return null;\n             *      }\n             *    );\n             */\n            detect: [],\n    \n    \n            /**\n             * Type based search formatting.\n             *\n             * The type based searching functions can be used to pre-format the\n             * data to be search on. For example, it can be used to strip HTML\n             * tags or to de-format telephone numbers for numeric only searching.\n             *\n             * Note that is a search is not defined for a column of a given type,\n             * no search formatting will be performed.\n             * \n             * Pre-processing of searching data plug-ins - When you assign the sType\n             * for a column (or have it automatically detected for you by DataTables\n             * or a type detection plug-in), you will typically be using this for\n             * custom sorting, but it can also be used to provide custom searching\n             * by allowing you to pre-processing the data and returning the data in\n             * the format that should be searched upon. This is done by adding\n             * functions this object with a parameter name which matches the sType\n             * for that target column. This is the corollary of <i>afnSortData</i>\n             * for searching data.\n             *\n             * The functions defined take a single parameter:\n             *\n             *  1. `{*}` Data from the column cell to be prepared for searching\n             *\n             * Each function is expected to return:\n             *\n             * * `{string|null}` Formatted string that will be used for the searching.\n             *\n             *  @type object\n             *  @default {}\n             *\n             *  @example\n             *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n             *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n             *    }\n             */\n            search: {},\n    \n    \n            /**\n             * Type based ordering.\n             *\n             * The column type tells DataTables what ordering to apply to the table\n             * when a column is sorted upon. The order for each type that is defined,\n             * is defined by the functions available in this object.\n             *\n             * Each ordering option can be described by three properties added to\n             * this object:\n             *\n             * * `{type}-pre` - Pre-formatting function\n             * * `{type}-asc` - Ascending order function\n             * * `{type}-desc` - Descending order function\n             *\n             * All three can be used together, only `{type}-pre` or only\n             * `{type}-asc` and `{type}-desc` together. It is generally recommended\n             * that only `{type}-pre` is used, as this provides the optimal\n             * implementation in terms of speed, although the others are provided\n             * for compatibility with existing Javascript sort functions.\n             *\n             * `{type}-pre`: Functions defined take a single parameter:\n             *\n             *  1. `{*}` Data from the column cell to be prepared for ordering\n             *\n             * And return:\n             *\n             * * `{*}` Data to be sorted upon\n             *\n             * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n             * functions, taking two parameters:\n             *\n             *  1. `{*}` Data to compare to the second parameter\n             *  2. `{*}` Data to compare to the first parameter\n             *\n             * And returning:\n             *\n             * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n             *   than the second parameter, ===0 if the two parameters are equal and\n             *   >0 if the first parameter should be sorted height than the second\n             *   parameter.\n             * \n             *  @type object\n             *  @default {}\n             *\n             *  @example\n             *    // Numeric ordering of formatted numbers with a pre-formatter\n             *    $.extend( $.fn.dataTable.ext.type.order, {\n             *      \"string-pre\": function(x) {\n             *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n             *        return parseFloat( a );\n             *      }\n             *    } );\n             *\n             *  @example\n             *    // Case-sensitive string ordering, with no pre-formatting method\n             *    $.extend( $.fn.dataTable.ext.order, {\n             *      \"string-case-asc\": function(x,y) {\n             *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n             *      },\n             *      \"string-case-desc\": function(x,y) {\n             *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n             *      }\n             *    } );\n             */\n            order: {}\n        },\n    \n        /**\n         * Unique DataTables instance counter\n         *\n         * @type int\n         * @private\n         */\n        _unique: 0,\n    \n    \n        //\n        // Depreciated\n        // The following properties are retained for backwards compatiblity only.\n        // The should not be used in new projects and will be removed in a future\n        // version\n        //\n    \n        /**\n         * Version check function.\n         *  @type function\n         *  @depreciated Since 1.10\n         */\n        fnVersionCheck: DataTable.fnVersionCheck,\n    \n    \n        /**\n         * Index for what 'this' index API functions should use\n         *  @type int\n         *  @deprecated Since v1.10\n         */\n        iApiIndex: 0,\n    \n    \n        /**\n         * jQuery UI class container\n         *  @type object\n         *  @deprecated Since v1.10\n         */\n        oJUIClasses: {},\n    \n    \n        /**\n         * Software version\n         *  @type string\n         *  @deprecated Since v1.10\n         */\n        sVersion: DataTable.version\n    };\n    \n    \n    //\n    // Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n    //\n    $.extend( _ext, {\n        afnFiltering: _ext.search,\n        aTypes:       _ext.type.detect,\n        ofnSearch:    _ext.type.search,\n        oSort:        _ext.type.order,\n        afnSortData:  _ext.order,\n        aoFeatures:   _ext.feature,\n        oApi:         _ext.internal,\n        oStdClasses:  _ext.classes,\n        oPagination:  _ext.pager\n    } );\n    \n    \n    $.extend( DataTable.ext.classes, {\n        \"sTable\": \"dataTable\",\n        \"sNoFooter\": \"no-footer\",\n    \n        /* Paging buttons */\n        \"sPageButton\": \"paginate_button\",\n        \"sPageButtonActive\": \"current\",\n        \"sPageButtonDisabled\": \"disabled\",\n    \n        /* Striping classes */\n        \"sStripeOdd\": \"odd\",\n        \"sStripeEven\": \"even\",\n    \n        /* Empty row */\n        \"sRowEmpty\": \"dataTables_empty\",\n    \n        /* Features */\n        \"sWrapper\": \"dataTables_wrapper\",\n        \"sFilter\": \"dataTables_filter\",\n        \"sInfo\": \"dataTables_info\",\n        \"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n        \"sLength\": \"dataTables_length\",\n        \"sProcessing\": \"dataTables_processing\",\n    \n        /* Sorting */\n        \"sSortAsc\": \"sorting_asc\",\n        \"sSortDesc\": \"sorting_desc\",\n        \"sSortable\": \"sorting\", /* Sortable in both directions */\n        \"sSortableAsc\": \"sorting_asc_disabled\",\n        \"sSortableDesc\": \"sorting_desc_disabled\",\n        \"sSortableNone\": \"sorting_disabled\",\n        \"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n    \n        /* Filtering */\n        \"sFilterInput\": \"\",\n    \n        /* Page length */\n        \"sLengthSelect\": \"\",\n    \n        /* Scrolling */\n        \"sScrollWrapper\": \"dataTables_scroll\",\n        \"sScrollHead\": \"dataTables_scrollHead\",\n        \"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n        \"sScrollBody\": \"dataTables_scrollBody\",\n        \"sScrollFoot\": \"dataTables_scrollFoot\",\n        \"sScrollFootInner\": \"dataTables_scrollFootInner\",\n    \n        /* Misc */\n        \"sHeaderTH\": \"\",\n        \"sFooterTH\": \"\",\n    \n        // Deprecated\n        \"sSortJUIAsc\": \"\",\n        \"sSortJUIDesc\": \"\",\n        \"sSortJUI\": \"\",\n        \"sSortJUIAscAllowed\": \"\",\n        \"sSortJUIDescAllowed\": \"\",\n        \"sSortJUIWrapper\": \"\",\n        \"sSortIcon\": \"\",\n        \"sJUIHeader\": \"\",\n        \"sJUIFooter\": \"\"\n    } );\n    \n    \n    (function() {\n    \n    // Reused strings for better compression. Closure compiler appears to have a\n    // weird edge case where it is trying to expand strings rather than use the\n    // variable version. This results in about 200 bytes being added, for very\n    // little preference benefit since it this run on script load only.\n    var _empty = '';\n    _empty = '';\n    \n    var _stateDefault = _empty + 'ui-state-default';\n    var _sortIcon     = _empty + 'css_right ui-icon ui-icon-';\n    var _headerFooter = _empty + 'fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix';\n    \n    $.extend( DataTable.ext.oJUIClasses, DataTable.ext.classes, {\n        /* Full numbers paging buttons */\n        \"sPageButton\":         \"fg-button ui-button \"+_stateDefault,\n        \"sPageButtonActive\":   \"ui-state-disabled\",\n        \"sPageButtonDisabled\": \"ui-state-disabled\",\n    \n        /* Features */\n        \"sPaging\": \"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi \"+\n            \"ui-buttonset-multi paging_\", /* Note that the type is postfixed */\n    \n        /* Sorting */\n        \"sSortAsc\":            _stateDefault+\" sorting_asc\",\n        \"sSortDesc\":           _stateDefault+\" sorting_desc\",\n        \"sSortable\":           _stateDefault+\" sorting\",\n        \"sSortableAsc\":        _stateDefault+\" sorting_asc_disabled\",\n        \"sSortableDesc\":       _stateDefault+\" sorting_desc_disabled\",\n        \"sSortableNone\":       _stateDefault+\" sorting_disabled\",\n        \"sSortJUIAsc\":         _sortIcon+\"triangle-1-n\",\n        \"sSortJUIDesc\":        _sortIcon+\"triangle-1-s\",\n        \"sSortJUI\":            _sortIcon+\"carat-2-n-s\",\n        \"sSortJUIAscAllowed\":  _sortIcon+\"carat-1-n\",\n        \"sSortJUIDescAllowed\": _sortIcon+\"carat-1-s\",\n        \"sSortJUIWrapper\":     \"DataTables_sort_wrapper\",\n        \"sSortIcon\":           \"DataTables_sort_icon\",\n    \n        /* Scrolling */\n        \"sScrollHead\": \"dataTables_scrollHead \"+_stateDefault,\n        \"sScrollFoot\": \"dataTables_scrollFoot \"+_stateDefault,\n    \n        /* Misc */\n        \"sHeaderTH\":  _stateDefault,\n        \"sFooterTH\":  _stateDefault,\n        \"sJUIHeader\": _headerFooter+\" ui-corner-tl ui-corner-tr\",\n        \"sJUIFooter\": _headerFooter+\" ui-corner-bl ui-corner-br\"\n    } );\n    \n    }());\n    \n    \n    \n    var extPagination = DataTable.ext.pager;\n    \n    function _numbers ( page, pages ) {\n        var\n            numbers = [],\n            buttons = extPagination.numbers_length,\n            half = Math.floor( buttons / 2 ),\n            i = 1;\n    \n        if ( pages <= buttons ) {\n            numbers = _range( 0, pages );\n        }\n        else if ( page <= half ) {\n            numbers = _range( 0, buttons-2 );\n            numbers.push( 'ellipsis' );\n            numbers.push( pages-1 );\n        }\n        else if ( page >= pages - 1 - half ) {\n            numbers = _range( pages-(buttons-2), pages );\n            numbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\n            numbers.splice( 0, 0, 0 );\n        }\n        else {\n            numbers = _range( page-half+2, page+half-1 );\n            numbers.push( 'ellipsis' );\n            numbers.push( pages-1 );\n            numbers.splice( 0, 0, 'ellipsis' );\n            numbers.splice( 0, 0, 0 );\n        }\n    \n        numbers.DT_el = 'span';\n        return numbers;\n    }\n    \n    \n    $.extend( extPagination, {\n        simple: function ( page, pages ) {\n            return [ 'previous', 'next' ];\n        },\n    \n        full: function ( page, pages ) {\n            return [  'first', 'previous', 'next', 'last' ];\n        },\n    \n        numbers: function ( page, pages ) {\n            return [ _numbers(page, pages) ];\n        },\n    \n        simple_numbers: function ( page, pages ) {\n            return [ 'previous', _numbers(page, pages), 'next' ];\n        },\n    \n        full_numbers: function ( page, pages ) {\n            return [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\n        },\n        \n        first_last_numbers: function (page, pages) {\n            return ['first', _numbers(page, pages), 'last'];\n        },\n    \n        // For testing and plug-ins to use\n        _numbers: _numbers,\n    \n        // Number of number buttons (including ellipsis) to show. _Must be odd!_\n        numbers_length: 7\n    } );\n    \n    \n    $.extend( true, DataTable.ext.renderer, {\n        pageButton: {\n            _: function ( settings, host, idx, buttons, page, pages ) {\n                var classes = settings.oClasses;\n                var lang = settings.oLanguage.oPaginate;\n                var aria = settings.oLanguage.oAria.paginate || {};\n                var btnDisplay, btnClass, counter=0;\n    \n                var attach = function( container, buttons ) {\n                    var i, ien, node, button;\n                    var clickHandler = function ( e ) {\n                        _fnPageChange( settings, e.data.action, true );\n                    };\n    \n                    for ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n                        button = buttons[i];\n    \n                        if ( $.isArray( button ) ) {\n                            var inner = $( '<'+(button.DT_el || 'div')+'/>' )\n                                .appendTo( container );\n                            attach( inner, button );\n                        }\n                        else {\n                            btnDisplay = null;\n                            btnClass = '';\n    \n                            switch ( button ) {\n                                case 'ellipsis':\n                                    container.append('<span class=\"ellipsis\">&#x2026;</span>');\n                                    break;\n    \n                                case 'first':\n                                    btnDisplay = lang.sFirst;\n                                    btnClass = button + (page > 0 ?\n                                        '' : ' '+classes.sPageButtonDisabled);\n                                    break;\n    \n                                case 'previous':\n                                    btnDisplay = lang.sPrevious;\n                                    btnClass = button + (page > 0 ?\n                                        '' : ' '+classes.sPageButtonDisabled);\n                                    break;\n    \n                                case 'next':\n                                    btnDisplay = lang.sNext;\n                                    btnClass = button + (page < pages-1 ?\n                                        '' : ' '+classes.sPageButtonDisabled);\n                                    break;\n    \n                                case 'last':\n                                    btnDisplay = lang.sLast;\n                                    btnClass = button + (page < pages-1 ?\n                                        '' : ' '+classes.sPageButtonDisabled);\n                                    break;\n    \n                                default:\n                                    btnDisplay = button + 1;\n                                    btnClass = page === button ?\n                                        classes.sPageButtonActive : '';\n                                    break;\n                            }\n    \n                            if ( btnDisplay !== null ) {\n                                node = $('<a>', {\n                                        'class': classes.sPageButton+' '+btnClass,\n                                        'aria-controls': settings.sTableId,\n                                        'aria-label': aria[ button ],\n                                        'data-dt-idx': counter,\n                                        'tabindex': settings.iTabIndex,\n                                        'id': idx === 0 && typeof button === 'string' ?\n                                            settings.sTableId +'_'+ button :\n                                            null\n                                    } )\n                                    .html( btnDisplay )\n                                    .appendTo( container );\n    \n                                _fnBindAction(\n                                    node, {action: button}, clickHandler\n                                );\n    \n                                counter++;\n                            }\n                        }\n                    }\n                };\n    \n                // IE9 throws an 'unknown error' if document.activeElement is used\n                // inside an iframe or frame. Try / catch the error. Not good for\n                // accessibility, but neither are frames.\n                var activeEl;\n    \n                try {\n                    // Because this approach is destroying and recreating the paging\n                    // elements, focus is lost on the select button which is bad for\n                    // accessibility. So we want to restore focus once the draw has\n                    // completed\n                    activeEl = $(host).find(document.activeElement).data('dt-idx');\n                }\n                catch (e) {}\n    \n                attach( $(host).empty(), buttons );\n    \n                if ( activeEl !== undefined ) {\n                    $(host).find( '[data-dt-idx='+activeEl+']' ).focus();\n                }\n            }\n        }\n    } );\n    \n    \n    \n    // Built in type detection. See model.ext.aTypes for information about\n    // what is required from this methods.\n    $.extend( DataTable.ext.type.detect, [\n        // Plain numbers - first since V8 detects some plain numbers as dates\n        // e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n        function ( d, settings )\n        {\n            var decimal = settings.oLanguage.sDecimal;\n            return _isNumber( d, decimal ) ? 'num'+decimal : null;\n        },\n    \n        // Dates (only those recognised by the browser's Date.parse)\n        function ( d, settings )\n        {\n            // V8 tries _very_ hard to make a string passed into `Date.parse()`\n            // valid, so we need to use a regex to restrict date formats. Use a\n            // plug-in for anything other than ISO8601 style strings\n            if ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n                return null;\n            }\n            var parsed = Date.parse(d);\n            return (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n        },\n    \n        // Formatted numbers\n        function ( d, settings )\n        {\n            var decimal = settings.oLanguage.sDecimal;\n            return _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\n        },\n    \n        // HTML numeric\n        function ( d, settings )\n        {\n            var decimal = settings.oLanguage.sDecimal;\n            return _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\n        },\n    \n        // HTML numeric, formatted\n        function ( d, settings )\n        {\n            var decimal = settings.oLanguage.sDecimal;\n            return _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\n        },\n    \n        // HTML (this is strict checking - there must be html)\n        function ( d, settings )\n        {\n            return _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n                'html' : null;\n        }\n    ] );\n    \n    \n    \n    // Filter formatting functions. See model.ext.ofnSearch for information about\n    // what is required from these methods.\n    // \n    // Note that additional search methods are added for the html numbers and\n    // html formatted numbers by `_addNumericSort()` when we know what the decimal\n    // place is\n    \n    \n    $.extend( DataTable.ext.type.search, {\n        html: function ( data ) {\n            return _empty(data) ?\n                data :\n                typeof data === 'string' ?\n                    data\n                        .replace( _re_new_lines, \" \" )\n                        .replace( _re_html, \"\" ) :\n                    '';\n        },\n    \n        string: function ( data ) {\n            return _empty(data) ?\n                data :\n                typeof data === 'string' ?\n                    data.replace( _re_new_lines, \" \" ) :\n                    data;\n        }\n    } );\n    \n    \n    \n    var __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n        if ( d !== 0 && (!d || d === '-') ) {\n            return -Infinity;\n        }\n    \n        // If a decimal place other than `.` is used, it needs to be given to the\n        // function so we can detect it and replace with a `.` which is the only\n        // decimal place Javascript recognises - it is not locale aware.\n        if ( decimalPlace ) {\n            d = _numToDecimal( d, decimalPlace );\n        }\n    \n        if ( d.replace ) {\n            if ( re1 ) {\n                d = d.replace( re1, '' );\n            }\n    \n            if ( re2 ) {\n                d = d.replace( re2, '' );\n            }\n        }\n    \n        return d * 1;\n    };\n    \n    \n    // Add the numeric 'deformatting' functions for sorting and search. This is done\n    // in a function to provide an easy ability for the language options to add\n    // additional methods if a non-period decimal place is used.\n    function _addNumericSort ( decimalPlace ) {\n        $.each(\n            {\n                // Plain numbers\n                \"num\": function ( d ) {\n                    return __numericReplace( d, decimalPlace );\n                },\n    \n                // Formatted numbers\n                \"num-fmt\": function ( d ) {\n                    return __numericReplace( d, decimalPlace, _re_formatted_numeric );\n                },\n    \n                // HTML numeric\n                \"html-num\": function ( d ) {\n                    return __numericReplace( d, decimalPlace, _re_html );\n                },\n    \n                // HTML numeric, formatted\n                \"html-num-fmt\": function ( d ) {\n                    return __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\n                }\n            },\n            function ( key, fn ) {\n                // Add the ordering method\n                _ext.type.order[ key+decimalPlace+'-pre' ] = fn;\n    \n                // For HTML types add a search formatter that will strip the HTML\n                if ( key.match(/^html\\-/) ) {\n                    _ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\n                }\n            }\n        );\n    }\n    \n    \n    // Default sort methods\n    $.extend( _ext.type.order, {\n        // Dates\n        \"date-pre\": function ( d ) {\n            return Date.parse( d ) || -Infinity;\n        },\n    \n        // html\n        \"html-pre\": function ( a ) {\n            return _empty(a) ?\n                '' :\n                a.replace ?\n                    a.replace( /<.*?>/g, \"\" ).toLowerCase() :\n                    a+'';\n        },\n    \n        // string\n        \"string-pre\": function ( a ) {\n            // This is a little complex, but faster than always calling toString,\n            // http://jsperf.com/tostring-v-check\n            return _empty(a) ?\n                '' :\n                typeof a === 'string' ?\n                    a.toLowerCase() :\n                    ! a.toString ?\n                        '' :\n                        a.toString();\n        },\n    \n        // string-asc and -desc are retained only for compatibility with the old\n        // sort methods\n        \"string-asc\": function ( x, y ) {\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        },\n    \n        \"string-desc\": function ( x, y ) {\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n        }\n    } );\n    \n    \n    // Numeric sorting types - order doesn't matter here\n    _addNumericSort( '' );\n    \n    \n    $.extend( true, DataTable.ext.renderer, {\n        header: {\n            _: function ( settings, cell, column, classes ) {\n                // No additional mark-up required\n                // Attach a sort listener to update on sort - note that using the\n                // `DT` namespace will allow the event to be removed automatically\n                // on destroy, while the `dt` namespaced event is the one we are\n                // listening for\n                $(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n                    if ( settings !== ctx ) { // need to check this this is the host\n                        return;               // table, not a nested one\n                    }\n    \n                    var colIdx = column.idx;\n    \n                    cell\n                        .removeClass(\n                            column.sSortingClass +' '+\n                            classes.sSortAsc +' '+\n                            classes.sSortDesc\n                        )\n                        .addClass( columns[ colIdx ] == 'asc' ?\n                            classes.sSortAsc : columns[ colIdx ] == 'desc' ?\n                                classes.sSortDesc :\n                                column.sSortingClass\n                        );\n                } );\n            },\n    \n            jqueryui: function ( settings, cell, column, classes ) {\n                $('<div/>')\n                    .addClass( classes.sSortJUIWrapper )\n                    .append( cell.contents() )\n                    .append( $('<span/>')\n                        .addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\n                    )\n                    .appendTo( cell );\n    \n                // Attach a sort listener to update on sort\n                $(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n                    if ( settings !== ctx ) {\n                        return;\n                    }\n    \n                    var colIdx = column.idx;\n    \n                    cell\n                        .removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\n                        .addClass( columns[ colIdx ] == 'asc' ?\n                            classes.sSortAsc : columns[ colIdx ] == 'desc' ?\n                                classes.sSortDesc :\n                                column.sSortingClass\n                        );\n    \n                    cell\n                        .find( 'span.'+classes.sSortIcon )\n                        .removeClass(\n                            classes.sSortJUIAsc +\" \"+\n                            classes.sSortJUIDesc +\" \"+\n                            classes.sSortJUI +\" \"+\n                            classes.sSortJUIAscAllowed +\" \"+\n                            classes.sSortJUIDescAllowed\n                        )\n                        .addClass( columns[ colIdx ] == 'asc' ?\n                            classes.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n                                classes.sSortJUIDesc :\n                                column.sSortingClassJUI\n                        );\n                } );\n            }\n        }\n    } );\n    \n    /*\n     * Public helper functions. These aren't used internally by DataTables, or\n     * called by any of the options passed into DataTables, but they can be used\n     * externally by developers working with DataTables. They are helper functions\n     * to make working with DataTables a little bit easier.\n     */\n    \n    var __htmlEscapeEntities = function ( d ) {\n        return typeof d === 'string' ?\n            d.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') :\n            d;\n    };\n    \n    /**\n     * Helpers for `columns.render`.\n     *\n     * The options defined here can be used with the `columns.render` initialisation\n     * option to provide a display renderer. The following functions are defined:\n     *\n     * * `number` - Will format numeric data (defined by `columns.data`) for\n     *   display, retaining the original unformatted data for sorting and filtering.\n     *   It takes 5 parameters:\n     *   * `string` - Thousands grouping separator\n     *   * `string` - Decimal point indicator\n     *   * `integer` - Number of decimal points to show\n     *   * `string` (optional) - Prefix.\n     *   * `string` (optional) - Postfix (/suffix).\n     * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n     *   parameters.\n     *\n     * @example\n     *   // Column definition using the number renderer\n     *   {\n     *     data: \"salary\",\n     *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n     *   }\n     *\n     * @namespace\n     */\n    DataTable.render = {\n        number: function ( thousands, decimal, precision, prefix, postfix ) {\n            return {\n                display: function ( d ) {\n                    if ( typeof d !== 'number' && typeof d !== 'string' ) {\n                        return d;\n                    }\n    \n                    var negative = d < 0 ? '-' : '';\n                    var flo = parseFloat( d );\n    \n                    // If NaN then there isn't much formatting that we can do - just\n                    // return immediately, escaping any HTML (this was supposed to\n                    // be a number after all)\n                    if ( isNaN( flo ) ) {\n                        return __htmlEscapeEntities( d );\n                    }\n    \n                    flo = flo.toFixed( precision );\n                    d = Math.abs( flo );\n    \n                    var intPart = parseInt( d, 10 );\n                    var floatPart = precision ?\n                        decimal+(d - intPart).toFixed( precision ).substring( 2 ):\n                        '';\n    \n                    return negative + (prefix||'') +\n                        intPart.toString().replace(\n                            /\\B(?=(\\d{3})+(?!\\d))/g, thousands\n                        ) +\n                        floatPart +\n                        (postfix||'');\n                }\n            };\n        },\n    \n        text: function () {\n            return {\n                display: __htmlEscapeEntities\n            };\n        }\n    };\n    \n    \n    /*\n     * This is really a good bit rubbish this method of exposing the internal methods\n     * publicly... - To be fixed in 2.0 using methods on the prototype\n     */\n    \n    \n    /**\n     * Create a wrapper function for exporting an internal functions to an external API.\n     *  @param {string} fn API function name\n     *  @returns {function} wrapped function\n     *  @memberof DataTable#internal\n     */\n    function _fnExternApiFunc (fn)\n    {\n        return function() {\n            var args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\n                Array.prototype.slice.call(arguments)\n            );\n            return DataTable.ext.internal[fn].apply( this, args );\n        };\n    }\n    \n    \n    /**\n     * Reference to internal functions for use by plug-in developers. Note that\n     * these methods are references to internal functions and are considered to be\n     * private. If you use these methods, be aware that they are liable to change\n     * between versions.\n     *  @namespace\n     */\n    $.extend( DataTable.ext.internal, {\n        _fnExternApiFunc: _fnExternApiFunc,\n        _fnBuildAjax: _fnBuildAjax,\n        _fnAjaxUpdate: _fnAjaxUpdate,\n        _fnAjaxParameters: _fnAjaxParameters,\n        _fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n        _fnAjaxDataSrc: _fnAjaxDataSrc,\n        _fnAddColumn: _fnAddColumn,\n        _fnColumnOptions: _fnColumnOptions,\n        _fnAdjustColumnSizing: _fnAdjustColumnSizing,\n        _fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n        _fnColumnIndexToVisible: _fnColumnIndexToVisible,\n        _fnVisbleColumns: _fnVisbleColumns,\n        _fnGetColumns: _fnGetColumns,\n        _fnColumnTypes: _fnColumnTypes,\n        _fnApplyColumnDefs: _fnApplyColumnDefs,\n        _fnHungarianMap: _fnHungarianMap,\n        _fnCamelToHungarian: _fnCamelToHungarian,\n        _fnLanguageCompat: _fnLanguageCompat,\n        _fnBrowserDetect: _fnBrowserDetect,\n        _fnAddData: _fnAddData,\n        _fnAddTr: _fnAddTr,\n        _fnNodeToDataIndex: _fnNodeToDataIndex,\n        _fnNodeToColumnIndex: _fnNodeToColumnIndex,\n        _fnGetCellData: _fnGetCellData,\n        _fnSetCellData: _fnSetCellData,\n        _fnSplitObjNotation: _fnSplitObjNotation,\n        _fnGetObjectDataFn: _fnGetObjectDataFn,\n        _fnSetObjectDataFn: _fnSetObjectDataFn,\n        _fnGetDataMaster: _fnGetDataMaster,\n        _fnClearTable: _fnClearTable,\n        _fnDeleteIndex: _fnDeleteIndex,\n        _fnInvalidate: _fnInvalidate,\n        _fnGetRowElements: _fnGetRowElements,\n        _fnCreateTr: _fnCreateTr,\n        _fnBuildHead: _fnBuildHead,\n        _fnDrawHead: _fnDrawHead,\n        _fnDraw: _fnDraw,\n        _fnReDraw: _fnReDraw,\n        _fnAddOptionsHtml: _fnAddOptionsHtml,\n        _fnDetectHeader: _fnDetectHeader,\n        _fnGetUniqueThs: _fnGetUniqueThs,\n        _fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n        _fnFilterComplete: _fnFilterComplete,\n        _fnFilterCustom: _fnFilterCustom,\n        _fnFilterColumn: _fnFilterColumn,\n        _fnFilter: _fnFilter,\n        _fnFilterCreateSearch: _fnFilterCreateSearch,\n        _fnEscapeRegex: _fnEscapeRegex,\n        _fnFilterData: _fnFilterData,\n        _fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n        _fnUpdateInfo: _fnUpdateInfo,\n        _fnInfoMacros: _fnInfoMacros,\n        _fnInitialise: _fnInitialise,\n        _fnInitComplete: _fnInitComplete,\n        _fnLengthChange: _fnLengthChange,\n        _fnFeatureHtmlLength: _fnFeatureHtmlLength,\n        _fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n        _fnPageChange: _fnPageChange,\n        _fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n        _fnProcessingDisplay: _fnProcessingDisplay,\n        _fnFeatureHtmlTable: _fnFeatureHtmlTable,\n        _fnScrollDraw: _fnScrollDraw,\n        _fnApplyToChildren: _fnApplyToChildren,\n        _fnCalculateColumnWidths: _fnCalculateColumnWidths,\n        _fnThrottle: _fnThrottle,\n        _fnConvertToWidth: _fnConvertToWidth,\n        _fnGetWidestNode: _fnGetWidestNode,\n        _fnGetMaxLenString: _fnGetMaxLenString,\n        _fnStringToCss: _fnStringToCss,\n        _fnSortFlatten: _fnSortFlatten,\n        _fnSort: _fnSort,\n        _fnSortAria: _fnSortAria,\n        _fnSortListener: _fnSortListener,\n        _fnSortAttachListener: _fnSortAttachListener,\n        _fnSortingClasses: _fnSortingClasses,\n        _fnSortData: _fnSortData,\n        _fnSaveState: _fnSaveState,\n        _fnLoadState: _fnLoadState,\n        _fnSettingsFromNode: _fnSettingsFromNode,\n        _fnLog: _fnLog,\n        _fnMap: _fnMap,\n        _fnBindAction: _fnBindAction,\n        _fnCallbackReg: _fnCallbackReg,\n        _fnCallbackFire: _fnCallbackFire,\n        _fnLengthOverflow: _fnLengthOverflow,\n        _fnRenderer: _fnRenderer,\n        _fnDataSource: _fnDataSource,\n        _fnRowAttributes: _fnRowAttributes,\n        _fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n                                        // in 1.10, so this dead-end function is\n                                        // added to prevent errors\n    } );\n    \n\n    // jQuery access\n    $.fn.dataTable = DataTable;\n\n    // Provide access to the host jQuery object (circular reference)\n    DataTable.$ = $;\n\n    // Legacy aliases\n    $.fn.dataTableSettings = DataTable.settings;\n    $.fn.dataTableExt = DataTable.ext;\n\n    // With a capital `D` we return a DataTables API instance rather than a\n    // jQuery object\n    $.fn.DataTable = function ( opts ) {\n        return $(this).dataTable( opts ).api();\n    };\n\n    // All properties that are available to $.fn.dataTable should also be\n    // available on $.fn.DataTable\n    $.each( DataTable, function ( prop, val ) {\n        $.fn.DataTable[ prop ] = val;\n    } );\n\n\n    // Information about events fired by DataTables - for documentation.\n    /**\n     * Draw event, fired whenever the table is redrawn on the page, at the same\n     * point as fnDrawCallback. This may be useful for binding events or\n     * performing calculations when the table is altered at all.\n     *  @name DataTable#draw.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     */\n\n    /**\n     * Search event, fired when the searching applied to the table (using the\n     * built-in global search, or column filters) is altered.\n     *  @name DataTable#search.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     */\n\n    /**\n     * Page change event, fired when the paging of the table is altered.\n     *  @name DataTable#page.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     */\n\n    /**\n     * Order event, fired when the ordering applied to the table is altered.\n     *  @name DataTable#order.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     */\n\n    /**\n     * DataTables initialisation complete event, fired when the table is fully\n     * drawn, including Ajax data loaded, if Ajax data is required.\n     *  @name DataTable#init.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} oSettings DataTables settings object\n     *  @param {object} json The JSON object request from the server - only\n     *    present if client-side Ajax sourced data is used</li></ol>\n     */\n\n    /**\n     * State save event, fired when the table has changed state a new state save\n     * is required. This event allows modification of the state saving object\n     * prior to actually doing the save, including addition or other state\n     * properties (for plug-ins) or modification of a DataTables core property.\n     *  @name DataTable#stateSaveParams.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} oSettings DataTables settings object\n     *  @param {object} json The state information to be saved\n     */\n\n    /**\n     * State load event, fired when the table is loading state from the stored\n     * data, but prior to the settings object being modified by the saved state\n     * - allowing modification of the saved state is required or loading of\n     * state for a plug-in.\n     *  @name DataTable#stateLoadParams.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} oSettings DataTables settings object\n     *  @param {object} json The saved state information\n     */\n\n    /**\n     * State loaded event, fired when state has been loaded from stored data and\n     * the settings object has been modified by the loaded data.\n     *  @name DataTable#stateLoaded.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} oSettings DataTables settings object\n     *  @param {object} json The saved state information\n     */\n\n    /**\n     * Processing event, fired when DataTables is doing some kind of processing\n     * (be it, order, searcg or anything else). It can be used to indicate to\n     * the end user that there is something happening, or that something has\n     * finished.\n     *  @name DataTable#processing.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} oSettings DataTables settings object\n     *  @param {boolean} bShow Flag for if DataTables is doing processing or not\n     */\n\n    /**\n     * Ajax (XHR) event, fired whenever an Ajax request is completed from a\n     * request to made to the server for new data. This event is called before\n     * DataTables processed the returned data, so it can also be used to pre-\n     * process the data returned from the server, if needed.\n     *\n     * Note that this trigger is called in `fnServerData`, if you override\n     * `fnServerData` and which to use this event, you need to trigger it in you\n     * success function.\n     *  @name DataTable#xhr.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     *  @param {object} json JSON returned from the server\n     *\n     *  @example\n     *     // Use a custom property returned from the server in another DOM element\n     *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n     *       $('#status').html( json.status );\n     *     } );\n     *\n     *  @example\n     *     // Pre-process the data returned from the server\n     *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n     *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {\n     *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;\n     *       }\n     *       // Note no return - manipulate the data directly in the JSON object.\n     *     } );\n     */\n\n    /**\n     * Destroy event, fired when the DataTable is destroyed by calling fnDestroy\n     * or passing the bDestroy:true parameter in the initialisation object. This\n     * can be used to remove bound events, added DOM nodes, etc.\n     *  @name DataTable#destroy.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     */\n\n    /**\n     * Page length change event, fired when number of records to show on each\n     * page (the length) is changed.\n     *  @name DataTable#length.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     *  @param {integer} len New length\n     */\n\n    /**\n     * Column sizing has changed.\n     *  @name DataTable#column-sizing.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     */\n\n    /**\n     * Column visibility has changed.\n     *  @name DataTable#column-visibility.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     *  @param {int} column Column index\n     *  @param {bool} vis `false` if column now hidden, or `true` if visible\n     */\n\n    return $.fn.dataTable;\n}));"],"file":"jquery.dataTables.min.js"}