{"version":3,"sources":["../src/cardPaginate.js"],"names":["define","$","Ajax","Str","Notification","Templates","PagedContentFactory","ITEMS_PER_PAGE","targetID","targetRoot","SELECTORS","LOADING_ICON_CONTAINER","PAGINATE_COUNT_CONTAINER","PAGINATE_LIST_CONTAINER","setOptions","options","methodName","templateName","hasOwnProperty","perPage","showLoadingIcon","find","removeClass","hideLoadingIcon","addClass","requestMethod","dataoptions","filterdata","request","methodname","args","contextid","JSON","stringify","offset","limit","call","renderAsPagedContent","totalCount","firstresponse","createFromAjax","pagesData","map","pageData","then","response","records","cardClass","viewType","render","fail","exception","controlPlacementBottom","eventNamespace","persistentLimitKey","reload","totalcount","length","nodata","html","js","paginatelistcontainer","container","replaceNodeContents","always","filteringData","e","submitid","formdata","serializeArray","values","filterdatavalue","each","i","field","valuedata","name","value","str","indexOf","substring","filtervalue","val","attr","optionsparsondata","parse","dataoptionsparsondata","filterdataparsondata","extend","resetingData","reset"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for the cardPaginate_preview of the\n * add_random_form class.\n *\n * @module    local_costcenter/cardPaginate\n * @package   local_costcenter\n * @copyright 2018 eabyas info solutions <http://eabyas.in>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(\n    [\n        'jquery',\n        'core/ajax',\n        'core/str',\n        'core/notification',\n        'core/templates',\n        'local_costcenter/paged_content_factory'\n    ],\n    function(\n        $,\n        Ajax,\n        Str,\n        Notification,\n        Templates,\n        PagedContentFactory\n    ) {\n\n    var ITEMS_PER_PAGE = 6;\n    var methodName = '';\n    var TEMPLATE_NAME = '';\n    var targetID = '';\n    var targetRoot = '';\n    var Target = '';\n    var offset = 0;\n    var viewType = 'card';//table/card\n\n    var SELECTORS = {\n        LOADING_ICON_CONTAINER: '[data-region=\"overlay-icon-container\"]',\n        PAGINATE_COUNT_CONTAINER: '[data-region=\"'+targetID+'-count-container\"]',\n        PAGINATE_LIST_CONTAINER: '[data-region=\"'+targetID+'-list-container\"]'\n    };\n\n    var setOptions = function(options){\n        \n        methodName = options.methodName;\n        TEMPLATE_NAME = options.templateName;\n        if(options.hasOwnProperty('targetID')){\n            targetID = options.targetID;\n            targetRoot = $('#'+targetID);\n        }\n        if(options.hasOwnProperty('perPage') && typeof(options.perPage) == 'number'){\n            ITEMS_PER_PAGE = options.perPage;\n        }\n        SELECTORS = {\n            LOADING_ICON_CONTAINER: '[data-region=\"overlay-icon-container\"]',\n            PAGINATE_COUNT_CONTAINER: '[data-region=\"'+targetID+'-count-container\"]',\n            PAGINATE_LIST_CONTAINER: '[data-region=\"'+targetID+'-list-container\"]'\n        };\n    }\n\n    /**\n     * Show the loading spinner over the preview section.\n     *\n     * @param  {jquery} targetID The targetID element.\n     */\n    var showLoadingIcon = function(targetRoot) {\n        targetRoot.find(SELECTORS.LOADING_ICON_CONTAINER).removeClass('hidden');\n    };\n\n    /**\n     * Hide the loading spinner.\n     *\n     * @param  {jquery} targetID The targetID element.\n     */\n    var hideLoadingIcon = function(targetRoot) {\n        targetRoot.find(SELECTORS.LOADING_ICON_CONTAINER).addClass('hidden');\n    };\n\n    /**\n     * Render the section of text to show the record count.\n     *\n     * @param  {jquery} targetID The targetID element.\n     * @param  {int} recordCount The number of records.\n     */\n    // var renderrecordCount = function(targetRoot, totalCount) {\n    //     Str.get_string('Paginate_totalCount', 'local_costcenter', totalCount)\n    //         .then(function(string) {\n    //             targetRoot.find(SELECTORS.PAGINATE_COUNT_CONTAINER).html(string);\n    //             return;\n    //         })\n    //         .fail(Notification.exception);\n    // };\n\n    /**\n     * Send a request to the server for more records.\n     *\n     * @param  {int} userId All records user id.\n     * @param  {int} contextId The context where the records will be added.\n     * @param  {int} limit How many records to retrieve.\n     * @param  {int} offset How many records to skip from the start of the result set.\n     * @return {promise} Resolved when the preview section has rendered.\n     */\n    var requestMethod = function(options, dataoptions, filterdata) {\n        var request = {\n            methodname: options.methodName,\n            args: {\n                contextid: dataoptions.contextid,\n                options: JSON.stringify(options),\n                dataoptions: JSON.stringify(dataoptions),\n                offset: options.offset,\n                limit: options.perPage,\n                filterdata: JSON.stringify(filterdata)\n            }\n        };\n        return Ajax.call([request])[0];\n    };\n\n    /**\n     * Build a paged content widget for records with the given criteria. The\n     * criteria is used to fetch more records from the server as the user\n     * requests new pages.\n     *\n     * @param  {object[]} options All records user id.\n     * @param  {object[]} dataoptions The context where the records will be added.\n     * @param  {int} totalCount How many records match the criteria above.\n     * @param  {object[]} firstrecords cardPaginates List of records for the first page.\n     * @return {promise} A promise resolved with the HTML and JS for the paged content.\n     */\n    var renderAsPagedContent = function(options, dataoptions, totalCount, firstresponse,filterdata){\n        // to control how the records on each page are rendered.\n        return PagedContentFactory.createFromAjax(totalCount, ITEMS_PER_PAGE,\n            // Callback function to render the requested pages.\n            function(pagesData) {\n                return pagesData.map(function(pageData) {\n                    var offset = pageData.offset;\n                    var limit = pageData.limit;\n                        options.offset = offset;\n                        options.limit = limit;\n                        \n                        if(offset > 0){\n                            return requestMethod(options, dataoptions, filterdata)\n                            .then(function(response) {\n                                var records = response.records;\n                                response[\"cardClass\"] = options.cardClass;\n                                \n                                response[\"viewtypeCard\"] = false;\n                                if(options.viewType == \"card\" || options.viewType == \"table\"){\n                                    response[\"viewtypeCard\"] = true;\n                                }\n                                return Templates.render(options.templateName, {response: response});\n                            })\n                            .fail(Notification.exception);\n                        } else {\n                                firstresponse[\"cardClass\"] = options.cardClass;\n                                \n                                firstresponse[\"viewtypeCard\"] = false;\n                                if(options.viewType == \"card\" || options.viewType == \"table\"){\n                                    firstresponse[\"viewtypeCard\"] = true;\n                                }\n                            return Templates.render(options.templateName, {response: firstresponse});\n                        }\n                    // }\n                });\n            },\n        // Config to set up the paged content.\n        {\n            controlPlacementBottom: true,\n            eventNamespace: 'paginate-paged-content-'+options.targetID,\n            persistentLimitKey: 'paginate-paged-content-limit-key'\n        }\n        );\n    };\n\n    /**\n     * Re-render the preview section based on the provided filter criteria.\n     *\n     * @param  {jquery} targetID The targetID element.\n     * @param  {int} userId All records user id.\n     * @param  {int} contextId The context where the records will be added.\n     * @return {promise} Resolved when the preview section has rendered.\n     */\n    var reload = function(options, dataoptions,filterdata) {\n        //alert(\"hi\");\n        setOptions(options);\n\n        // Show the loading spinner to tell the user that something is happening.\n        showLoadingIcon(targetRoot);\n\n        // Load the first set of records.\n        options.offset = 0;\n        return requestMethod(options, dataoptions,filterdata)\n            .then(function(response) {\n\n                var totalCount = response.totalcount;\n                var records = response.records;\n                if (records.length) {\n                    // We received some records so render them as paged content\n                    // with a paging bar.\n                    return renderAsPagedContent(options, dataoptions, totalCount, response, filterdata);\n                } else {\n                    // If we didn't receive any records then we can return empty\n                    // HTML and JS to clear the preview section.\n                    // console.log(response.extraparams.nodata);\n                    if(response.nodata){\n                        return Templates.render(options.templateName, {response: response});\n                    }else{\n                        return Templates.render('local_costcenter/no-data', {response: response});\n                    }\n                    \n                    //return $.Deferred().resolve('', '');\n                }\n            })\n            .then(function(html, js) {\n                // Show the user the records set.\n                targetRoot = $('#'+options.targetID);\n                var paginatelistcontainer = '[data-region=\"'+options.targetID+'-list-container\"]';\n                var container = targetRoot.find(paginatelistcontainer);\n                Templates.replaceNodeContents(container, html, js);\n                return;\n            })\n            .always(function() {\n                targetRoot = $('#'+options.targetID);\n                hideLoadingIcon(targetRoot);\n            })\n            .fail(Notification.exception);\n\n    };\n\n\n    //added for the filtering the data\n    var filteringData = function(e,submitid) {\n        var formdata =  $(\"form#\"+submitid+\"\").serializeArray();\n        values = [];\n        filterdatavalue = [];\n        $.each(formdata, function (i, field) {\n            valuedata = [];\n            if(field.name != '_qf__filters_form' && field.name != 'sesskey'){\n                if(field.name == 'options' || field.name == 'dataoptions'){\n                    values[field.name] = field.value;\n                }else{\n                    var str = field.name;\n                    if(str.indexOf('[]') != -1){\n                        field.name = str.substring(0, str.length - 2);\n                    }\n                    if(field.name in filterdatavalue){\n                        filterdatavalue[field.name] = filterdatavalue[field.name]+','+field.value;\n                    }else{  \n                        filterdatavalue[field.name] = field.value;\n                    }\n                }\n\n            }\n        });\n        var filtervalue = $('#global_filter').val();\n        if(filtervalue){\n            filterdatavalue[$('#global_filter').attr('name')] = filtervalue;\n        }\n        optionsparsondata     = JSON.parse(values['options']);\n        dataoptionsparsondata = JSON.parse(values['dataoptions']);\n        // filterdataparsondata  =  Object.assign({}, filterdatavalue);\n        filterdataparsondata = $.extend({}, filterdatavalue);\n        $('#global_filter').attr('data-filterdata', JSON.stringify(filterdataparsondata));\n        return reload(optionsparsondata, dataoptionsparsondata,filterdataparsondata);\n    };\n\n    //added for the reset the data\n    var resetingData = function(e,submitid) {\n        var formdata =  $(\"form#\"+submitid+\"\").serializeArray();\n        values = [];\n        filterdatavalue = [];\n        $.each(formdata, function (i, field) {\n            valuedata = [];\n            if(field.name != '_qf__filters_form' && field.name != 'sesskey'){\n                if(field.name == 'options' || field.name == 'dataoptions'){\n                    values[field.name] = field.value;\n                }\n            }\n        });\n        var filtervalue = $('#global_filter').val();\n        if(filtervalue){\n            filterdatavalue[$('#global_filter').attr('name')] = filtervalue;\n        }\n        optionsparsondata     = JSON.parse(values['options']);\n        dataoptionsparsondata = JSON.parse(values['dataoptions']);\n        // filterdataparsondata  =  Object.assign({}, filterdatavalue);\n        filterdataparsondata = $.extend({}, filterdatavalue);\n        $('#global_filter').attr('data-filterdata', '[]');\n        // $('#global_filter').data('filterdata', '[]');\n        reload(optionsparsondata, dataoptionsparsondata, filterdataparsondata);\n        var reset =  $(\"form#\"+submitid+\"\")[0].reset();\n        // $(\"#fitem_id_acceptchallengedate_\"+submitid+\" .custom-select\").attr(\"disabled\", \"disabled\");\n        // $(\"#fitem_id_challengeenddate_\"+submitid+\" .custom-select\").attr(\"disabled\", \"disabled\");\n        $(\".tag-info\").html(\"\");\n        $(\"div.form-autocomplete-selection span.mb-3\").html(\"No selection\");\n        $(\"div.form-autocomplete-selection span.mb-3\").removeClass(\"tag-info\");\n        $(\"div.form-autocomplete-selection span.mb-3\").removeClass(\"tag\");\n    };\n    return {\n        reload: reload,\n        showLoadingIcon: showLoadingIcon,\n        hideLoadingIcon: hideLoadingIcon,\n        filteringData:filteringData,\n        resetingData:resetingData\n    };\n});\n"],"file":"cardPaginate.min.js"}