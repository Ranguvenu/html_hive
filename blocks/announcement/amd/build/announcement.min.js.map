{"version":3,"sources":["../src/announcement.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","Announcement","args","contextid","id","self","init","selector","prototype","modal","console","log","head","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","getRoot","addClass","setLarge","on","hidden","setBody","animate","setTimeout","destroy","shown","append","save","submitForm","submitFormAjax","show","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","hide","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","data","e","preventDefault","formData","find","serialize","call","methodname","done","fail","submit","load","deleteConfirm","get_strings","key","component","param","s","setSaveButtonText","confirm","ajax","method","dataType","url","cfg","wwwroot","success","window","statusConfirm","visible","DatatablesAnnounce","dataTable","paginate","ordering"],"mappings":"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","sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     blocks_announcement/announcement\n * @class      Announcement\n * @package    blocks_announcement\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/str',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/fragment',\n    'core/ajax',\n    'core/yui',\n    'block_announcement/jquery.dataTables'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y, dataTable) {\n \n    /**\n     * Constructor\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @param {int} contextid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var Announcement = function(args) {\n        this.contextid = args.contextid;\n        this.id = args.id;\n        var self = this;\n        self.init(args.selector);\n    };\n \n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    Announcement.prototype.modal = null;\n \n    /**\n     * @var {int} contextid\n     * @private\n     */\n    Announcement.prototype.contextid = -1;\n \n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    Announcement.prototype.init = function(args) {\n        // console.log(args);\n        //var triggers = $(selector);\n        var self = this;\n\n        // Fetch the title string.\n        // $('.'+args.selector).click(function(){\n            \n\n            // var editid = $(this).data('value');\n            // if (editid) {\n                // self.planid = editid;\n                if(self.id){\n                    console.log(self.id);\n                    var head = Str.get_string('editannouncement', 'block_announcement');\n                }\n                else{\n                   var head = Str.get_string('adnewannouncement', 'block_announcement');\n                }\n                //console.log(self.costcenterid);\n                //alert(self.costcenterid);\n            // }\n            return head.then(function(title) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: self.getBody()\n                });\n            }.bind(self)).then(function(modal) {\n                \n                // Keep a reference to the modal.\n                self.modal = modal;\n               \n                self.modal.getRoot().addClass('openLMStransition');\n                // Forms are big, we want a big modal.\n                self.modal.setLarge();\n     \n                // We want to reset the form every time it is opened.\n                self.modal.getRoot().on(ModalEvents.hidden, function() {\n                    self.modal.setBody(self.getBody());\n                    self.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 1000);\n                    \n                }.bind(this));\n    \n                \n                // We want to hide the submit buttons every time it is opened.\n                self.modal.getRoot().on(ModalEvents.shown, function() {\n                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                }.bind(this));\n     \n    \n                // We catch the modal save event, and use it to submit the form inside the modal.\n                // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n                // We also catch the form submit event and use it to submit the form with ajax.\n                self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n\n                this.modal.show();\n                this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n                return this.modal;\n            }.bind(this));       \n        \n        \n        // });\n        \n    };\n \n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    Announcement.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // alert(JSON.stringify(formdata));\n        // alert(this.planid);\n        // alert(this.contextid);\n        // Get the content of the modal.\n        var params = {id:this.id, jsonformdata: JSON.stringify(formdata)};\n        return Fragment.loadFragment('block_announcement', 'announcement_form',this.contextid, params);\n    };\n \n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    Announcement.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        document.location.reload();\n    };\n \n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    Announcement.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n \n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    Announcement.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n \n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        //alert(this.id);\n        // Now we can continue...\n        Ajax.call([{\n            methodname: 'block_announcement_submit_create_announcement_form',\n            args: {id:this.id, contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\n            done: this.handleFormSubmissionResponse.bind(this, formData),\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\n        }]);\n    };\n \n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    Announcement.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n    return /** @alias module:local_costcenter/newcostcenter */ {\n            // Public variables and functions.\n            /**\n             * Attach event listeners to initialise this module.\n             *\n             * @method init\n             * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n             * @param {int} contextid The contextid for the course.\n             * @return {Promise}\n             */\n            init: function(args) {\n              // console.log(args);\n                // alert(args.contextid);\n                return new Announcement(args);\n            },\n            load: function(){\n\n            },\n            deleteConfirm: function(args){\n                return Str.get_strings([{\n                key: 'confirm'\n                },\n                {\n                key: 'deleteconfirm',\n                component: 'block_announcement',\n                param : args\n                },\n                {   \n                    key: 'delete'\n                }]).then(function(s) {\n                    ModalFactory.create({\n                        title: s[0],\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        body: s[1]\n                    }).done(function(modal) {\n                        this.modal = modal;\n                        modal.setSaveButtonText(s[2]);\n                        modal.getRoot().on(ModalEvents.save, function(e) {\n                            e.preventDefault();\n                            args.confirm = true;\n                            $.ajax({\n                                method: \"POST\",\n                                dataType: \"json\",\n                                url: M.cfg.wwwroot + \"/blocks/announcement/ajax.php?reason=\"+args.selector+\"&id=\"+args.id,\n                                success: function(data){\n                                    window.location.reload();\n                                }\n                            });\n                        }.bind(this));\n                        modal.show();\n                    }.bind(this));\n                    modal.show();\n                }.bind(this));\n            },\n            statusConfirm: function(args){\n                return Str.get_strings([{\n                    key: 'confirm'\n                },\n                {\n                    key: 'statusconfirm',\n                    component: 'block_announcement',\n                    param : args\n                }]).then(function(s) {\n                    ModalFactory.create({\n                        title: s[0],\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        body: s[1]\n                    }).done(function(modal) {\n                        this.modal = modal;\n                        modal.setSaveButtonText(s[0]);\n                        modal.getRoot().on(ModalEvents.save, function(e) {\n                            e.preventDefault();\n                            args.confirm = true;\n                            $.ajax({\n                                method: \"POST\",\n                                dataType: \"json\",\n                                url: M.cfg.wwwroot + \"/blocks/announcement/ajax.php?reason=\"+args.selector+\"&id=\"+args.id+\"&visible=\"+args.visible,\n                                success: function(data){\n                                    window.location.reload();\n                                }\n                            });\n                        }.bind(this));\n                        modal.show();\n                    }.bind(this));\n                    modal.show();\n                }.bind(this));\n            },\n            DatatablesAnnounce: function(args){\n                $('#table_block_announcement').dataTable({\n                    'pageLength': 10,\n                    'bLengthChange': false,\n                    'language': {\n                        'emptyTable': 'No Records Found',\n                        paginate: {\n                            'previous': '<',\n                            'next': '>'\n                        }\n                    },\n                    ordering: false\n                });\n            }\n    };\n});"],"file":"announcement.min.js"}