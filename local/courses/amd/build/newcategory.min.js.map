{"version":3,"sources":["../src/newcategory.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewCategory","contextid","categoryid","self","init","prototype","modal","head","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","getRoot","addClass","show","setLarge","on","hidden","setBody","animate","setTimeout","destroy","shown","append","save","submitForm","submitFormAjax","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","hide","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","data","e","preventDefault","formData","find","serialize","call","methodname","args","done","fail","submit","courselist","element","hasClass","returndata","categoryname","removeClass","load"],"mappings":"AAQAA,OAAM,6BAAC,CAAC,QAAD,CAAW,UAAX,CAAuB,oBAAvB,CAA6C,mBAA7C,CAAkE,eAAlE,CAAmF,WAAnF,CAAgG,UAAhG,CAA2G,iCAA3G,CAAD,CACE,SAASC,CAAT,CAAYC,CAAZ,CAAiBC,CAAjB,CAA+BC,CAA/B,CAA4CC,CAA5C,CAAsDC,CAAtD,CAA4DC,CAA5D,CAA+D,CAUnE,GAAIC,CAAAA,CAAW,CAAG,SAASC,CAAT,CAAoBC,CAApB,CAAgC,CAE9C,KAAKD,SAAL,CAAiBA,CAAjB,CACA,KAAKC,UAAL,CAAkBA,CAAlB,CACA,GAAIC,CAAAA,CAAI,CAAG,IAAX,CACAA,CAAI,CAACC,IAAL,EACH,CAND,CAYAJ,CAAW,CAACK,SAAZ,CAAsBC,KAAtB,CAA8B,IAA9B,CAMAN,CAAW,CAACK,SAAZ,CAAsBJ,SAAtB,CAAkC,CAAC,CAAnC,CAQAD,CAAW,CAACK,SAAZ,CAAsBD,IAAtB,CAA6B,UAAW,CACpC,GAAID,CAAAA,CAAI,CAAG,IAAX,CACA,GAAIA,CAAI,CAACD,UAAT,CAAqB,CACjB,GAAIK,CAAAA,CAAI,CAAIb,CAAG,CAACc,UAAJ,CAAe,cAAf,CAA+B,eAA/B,CACf,CAFD,IAEK,CACF,GAAID,CAAAA,CAAI,CAAIb,CAAG,CAACc,UAAJ,CAAe,aAAf,CAA8B,eAA9B,CACd,CACD,MAAOD,CAAAA,CAAI,CAACE,IAAL,CAAU,SAASC,CAAT,CAAgB,CAE7B,MAAOf,CAAAA,CAAY,CAACgB,MAAb,CAAoB,CACvBC,IAAI,CAAEjB,CAAY,CAACkB,KAAb,CAAmBC,WADF,CAEvBJ,KAAK,CAAEA,CAFgB,CAGvBK,IAAI,CAAEZ,CAAI,CAACa,OAAL,EAHiB,CAApB,CAKV,CAPgB,CAOfC,IAPe,CAOVd,CAPU,CAAV,EAOOM,IAPP,CAOY,SAASH,CAAT,CAAgB,CAG/BH,CAAI,CAACG,KAAL,CAAaA,CAAb,CACAH,CAAI,CAACG,KAAL,CAAWY,OAAX,GAAqBC,QAArB,CAA8B,mBAA9B,EACAhB,CAAI,CAACG,KAAL,CAAWc,IAAX,GAEAjB,CAAI,CAACG,KAAL,CAAWe,QAAX,GAGAlB,CAAI,CAACG,KAAL,CAAWY,OAAX,GAAqBI,EAArB,CAAwB1B,CAAW,CAAC2B,MAApC,CAA4C,UAAW,CACnDpB,CAAI,CAACG,KAAL,CAAWkB,OAAX,CAAmB,EAAnB,EACArB,CAAI,CAACG,KAAL,CAAWY,OAAX,GAAqBO,OAArB,CAA6B,CAAC,MAAQ,MAAT,CAA7B,CAA+C,GAA/C,EACAC,UAAU,CAAC,UAAU,CACjBpB,CAAK,CAACqB,OAAN,EACH,CAFS,CAEP,GAFO,CAGb,CAN2C,CAM1CV,IAN0C,CAMrC,IANqC,CAA5C,EASAd,CAAI,CAACG,KAAL,CAAWY,OAAX,GAAqBI,EAArB,CAAwB1B,CAAW,CAACgC,KAApC,CAA2C,UAAW,CAClDzB,CAAI,CAACG,KAAL,CAAWY,OAAX,GAAqBW,MAArB,CAA4B,uEAA5B,CACH,CAF0C,CAEzCZ,IAFyC,CAEpC,IAFoC,CAA3C,EAOAd,CAAI,CAACG,KAAL,CAAWY,OAAX,GAAqBI,EAArB,CAAwB1B,CAAW,CAACkC,IAApC,CAA0C3B,CAAI,CAAC4B,UAAL,CAAgBd,IAAhB,CAAqBd,CAArB,CAA1C,EAEAA,CAAI,CAACG,KAAL,CAAWY,OAAX,GAAqBI,EAArB,CAAwB,QAAxB,CAAkC,MAAlC,CAA0CnB,CAAI,CAAC6B,cAAL,CAAoBf,IAApB,CAAyBd,CAAzB,CAA1C,EACAA,CAAI,CAACG,KAAL,CAAWY,OAAX,GAAqBO,OAArB,CAA6B,CAAC,MAAQ,IAAT,CAA7B,CAA6C,GAA7C,EACA,MAAO,MAAKnB,KACf,CA/BkB,CA+BjBW,IA/BiB,CA+BZ,IA/BY,CAPZ,CAuCV,CA9CD,CAqDAjB,CAAW,CAACK,SAAZ,CAAsBW,OAAtB,CAAgC,SAASiB,CAAT,CAAmB,CAC/C,GAAwB,WAApB,QAAOA,CAAAA,CAAX,CAAqC,CACjCA,CAAQ,CAAG,EACd,CACDC,MAAM,CAAG,EAAT,CACAA,MAAM,CAACC,YAAP,CAAsBC,IAAI,CAACC,SAAL,CAAeJ,CAAf,CAAtB,CACAC,MAAM,CAAChC,UAAP,CAAoB,KAAKA,UAAzB,CACA,MAAOL,CAAAA,CAAQ,CAACyC,YAAT,CAAsB,eAAtB,CAAuC,qBAAvC,CAA8D,KAAKrC,SAAnE,CAA8EiC,MAA9E,CACV,CARD,CAeAlC,CAAW,CAACK,SAAZ,CAAsBkC,4BAAtB,CAAqD,UAAW,CAC5D,KAAKjC,KAAL,CAAWkC,IAAX,GAGAzC,CAAC,CAAC0C,GAAF,CAAM,+BAAN,CAAuC,UAAW,CAC9CC,CAAC,CAACC,sBAAF,CAAyBC,sBAAzB,EACH,CAFD,EAGAC,QAAQ,CAACC,QAAT,CAAkBC,MAAlB,EACH,CARD,CAeA/C,CAAW,CAACK,SAAZ,CAAsB2C,2BAAtB,CAAoD,SAASC,CAAT,CAAe,CAG/D,KAAK3C,KAAL,CAAWkB,OAAX,CAAmB,KAAKR,OAAL,CAAaiC,CAAb,CAAnB,CACH,CAJD,CAaAjD,CAAW,CAACK,SAAZ,CAAsB2B,cAAtB,CAAuC,SAASkB,CAAT,CAAY,CAE/CA,CAAC,CAACC,cAAF,GAGA,GAAIC,CAAAA,CAAQ,CAAG,KAAK9C,KAAL,CAAWY,OAAX,GAAqBmC,IAArB,CAA0B,MAA1B,EAAkCC,SAAlC,EAAf,CAEAxD,CAAI,CAACyD,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,2CADL,CAEPC,IAAI,CAAE,CAACxD,SAAS,CAAE,KAAKA,SAAjB,CAA4BkC,YAAY,CAAEC,IAAI,CAACC,SAAL,CAAee,CAAf,CAA1C,CAFC,CAGPM,IAAI,CAAE,KAAKnB,4BAAL,CAAkCtB,IAAlC,CAAuC,IAAvC,CAA6CmC,CAA7C,CAHC,CAIPO,IAAI,CAAE,KAAKX,2BAAL,CAAiC/B,IAAjC,CAAsC,IAAtC,CAA4CmC,CAA5C,CAJC,CAAD,CAAV,CAMH,CAbD,CAsBApD,CAAW,CAACK,SAAZ,CAAsB0B,UAAtB,CAAmC,SAASmB,CAAT,CAAY,CAC3CA,CAAC,CAACC,cAAF,GACA,GAAIhD,CAAAA,CAAI,CAAG,IAAX,CACAA,CAAI,CAACG,KAAL,CAAWY,OAAX,GAAqBmC,IAArB,CAA0B,MAA1B,EAAkCO,MAAlC,EACH,CAJD,CAMA,MAA+C,CAU3CxD,IAAI,CAAE,cAASqD,CAAT,CAAe,CACjB,MAAO,IAAIzD,CAAAA,CAAJ,CAAgByD,CAAI,CAACxD,SAArB,CAAgCwD,CAAI,CAACvD,UAArC,CACV,CAZ0C,CAa3C2D,UAAU,CAAE,oBAASJ,CAAT,CAAe,CAEvBK,OAAO,CAAG,qBAAV,CACA,GAAG,CAACrE,CAAC,CAACqE,OAAD,CAAD,CAAWC,QAAX,CAAoB,SAApB,CAAJ,CAAmC,CAC/BtE,CAAC,CAACqE,OAAD,CAAD,CAAW3C,QAAX,CAAoB,SAApB,EAD+B,GAE3Be,CAAAA,CAAM,CAAG,CAAEhC,UAAU,CAAEuD,CAAI,CAACvD,UAAnB,CAFkB,CAG3B8D,CAAU,CAAInE,CAAQ,CAACyC,YAAT,CAAsB,eAAtB,CAAuC,wBAAvC,CAAiEmB,CAAI,CAACxD,SAAtE,CAAiFiC,CAAjF,CAHa,CAK/BvC,CAAY,CAACgB,MAAb,CAAoB,CAChBD,KAAK,CAAEhB,CAAG,CAACc,UAAJ,CAAe,eAAf,CAAgC,eAAhC,CAAiDiD,CAAI,CAACQ,YAAtD,CADS,CAEhBlD,IAAI,CAAEiD,CAFU,CAApB,EAGGN,IAHH,CAGQ,SAASpD,CAAT,CAAgB,CAEpBA,CAAK,CAACc,IAAN,GACAd,CAAK,CAACe,QAAN,GACAf,CAAK,CAACY,OAAN,GAAgBI,EAAhB,CAAmB1B,CAAW,CAAC2B,MAA/B,CAAuC,UAAW,CAC9CjB,CAAK,CAACkB,OAAN,CAAc,EAAd,CACH,CAFsC,CAErCP,IAFqC,CAEhC,IAFgC,CAAvC,EAGAX,CAAK,CAACY,OAAN,GAAgBmC,IAAhB,CAAqB,wBAArB,EAA6C/B,EAA7C,CAAgD,OAAhD,CAAyD,UAAW,CAChE7B,CAAC,CAACqE,OAAD,CAAD,CAAWI,WAAX,CAAuB,SAAvB,EACA5D,CAAK,CAACkC,IAAN,GACAd,UAAU,CAAC,UAAU,CAChBpB,CAAK,CAACqB,OAAN,EACJ,CAFS,CAEP,GAFO,CAGb,CAND,CAOH,CAjBD,CAkBH,CACJ,CAxC0C,CAyC3CwC,IAAI,CAAE,eAAW,CAChB,CA1C0C,CA4ClD,CA7MK,CAAN","sourcesContent":["/**\n * local courses\n *\n * @package    local_courses\n * @copyright  2019 eAbyas <eAbyas.in>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui','local_courses/jquery.dataTables'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n\n    /**\n     * Constructor\n     *\n     * @param {int} contextid\n     * @param {int} categoryid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var NewCategory = function(contextid, categoryid) {\n\n        this.contextid = contextid;\n        this.categoryid = categoryid;\n        var self = this;\n        self.init();\n    };\n\n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    NewCategory.prototype.modal = null;\n\n    /**\n     * @var {int} contextid\n     * @private\n     */\n    NewCategory.prototype.contextid = -1;\n\n    /**\n     * Initialise the class.\n     *\n     * @private\n     * @return {Promise}\n     */\n    NewCategory.prototype.init = function() {\n        var self = this;\n        if (self.categoryid) {\n            var head =  Str.get_string('editcategory', 'local_courses');\n        }else{\n           var head =  Str.get_string('addcategory', 'local_courses');\n        }\n        return head.then(function(title) {\n            // Create the modal.\n            return ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: title,\n                body: self.getBody()\n            });\n        }.bind(self)).then(function(modal) {\n\n            // Keep a reference to the modal.\n            self.modal = modal;\n            self.modal.getRoot().addClass('openLMStransition');\n            self.modal.show();\n            // Forms are big, we want a big modal.\n            self.modal.setLarge();\n\n            // We want to reset the form every time it is opened.\n            self.modal.getRoot().on(ModalEvents.hidden, function() {\n                self.modal.setBody('');\n                self.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                setTimeout(function(){\n                    modal.destroy();\n                }, 1000);\n            }.bind(this));\n\n            // We want to hide the submit buttons every time it is opened.\n            self.modal.getRoot().on(ModalEvents.shown, function() {\n                self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n            }.bind(this));\n\n\n            // We catch the modal save event, and use it to submit the form inside the modal.\n            // Triggering a form submission will give JS validation scripts a chance to check for errors.\n            self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n            // We also catch the form submit event and use it to submit the form with ajax.\n            self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n            self.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n            return this.modal;\n        }.bind(this));\n    };\n\n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    NewCategory.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        params = {};\n        params.jsonformdata = JSON.stringify(formdata);\n        params.categoryid = this.categoryid;\n        return Fragment.loadFragment('local_courses', 'coursecategory_form', this.contextid, params);\n    };\n\n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    NewCategory.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        document.location.reload();\n    };\n\n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    NewCategory.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n\n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    NewCategory.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        // Now we can continue...\n        Ajax.call([{\n            methodname: 'local_courses_submit_create_category_form',\n            args: {contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\n            done: this.handleFormSubmissionResponse.bind(this, formData),\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\n        }]);\n    };\n\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    NewCategory.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n\n    return /** @alias module:local_courses/init */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {int} contextid The contextid for the course.\n         * @param {int} categoryid categoryid.\n         * @return {Promise}\n         */\n        init: function(args) {\n            return new NewCategory(args.contextid, args.categoryid);\n        },\n        courselist: function(args) {\n            // modal to show the courses in a category\n            element = '.course_count_popup';\n            if(!$(element).hasClass('clicked')){\n                $(element).addClass('clicked');\n                var params = { categoryid: args.categoryid};\n                var returndata =  Fragment.loadFragment('local_courses', 'coursecategory_display', args.contextid, params);\n\n                ModalFactory.create({\n                    title: Str.get_string('categorypopup', 'local_courses', args.categoryname),\n                    body: returndata\n                }).done(function(modal) {\n                    // Do what you want with your new modal.\n                    modal.show();\n                    modal.setLarge();\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        modal.setBody('');\n                    }.bind(this));\n                    modal.getRoot().find('[data-action=\"hide\"]').on('click', function() {\n                        $(element).removeClass('clicked');\n                        modal.hide();\n                        setTimeout(function(){\n                             modal.destroy();\n                        }, 500);\n                    });\n                });\n            }\n        },\n        load: function() {\n        }\n    };\n});"],"file":"newcategory.min.js"}