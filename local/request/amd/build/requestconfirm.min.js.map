{"version":3,"sources":["../src/requestconfirm.js"],"names":["define","$","Str","ModalFactory","ModalEvents","requestconfirm","args","componentid","component","id","action","init","prototype","modal","contextid","getrequeststring","get_strings","key","param","handleModalSubmissionResponse","data","msg","get_string","setTitle","setBody","getFooter","find","hide","hideFooter","css","window","location","reload","click","submitajax","userid","setSaveButtonText","getRoot","on","save","e","preventDefault","confirm","ajax","method","dataType","url","M","cfg","wwwroot","done","response","getbodystring","string","Deferred","create","title","type","types","SAVE_CANCEL","body","show","init11","then","s","success","bind","requestDatatable","params","classroomid","dataTable","load"],"mappings":"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","sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_request/requestconfirm\n * @class      requestconfirm\n * @package    local_costcenter\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n        'core/str',\n        'core/modal_factory',\n        'core/modal_events',\n        'core/fragment',\n        'core/ajax',\n        'core/yui',\n        'local_request/jquery.dataTables'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y, dataTable) {\n\n    /**\n     * Constructor\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @param {int} contextid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var requestconfirm = function(args) {\n         \n        this.componentid = args.componentid;\n        this.component = args.component;\n        this.id =args.id;\n        this.action =args.action;\n   \n       // var self = this;\n        this.init(args);\n    };\n\n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    requestconfirm.prototype.modal = null;\n\n    /**\n     * @var {int} contextid\n     * @private\n     */\n    requestconfirm.prototype.contextid = -1;\n\n\n    requestconfirm.prototype.getrequeststring = function(){\n\n        return Str.get_strings([{\n                key: 'confirm'\n            },\n            {\n                key: 'request_confirm_message',\n                component: 'local_request',\n                param :args\n            },\n            {\n                key: 'confirm'\n            }]) ;\n    };\n\n\n    requestconfirm.prototype.handleModalSubmissionResponse = function(data,modal, args){\n      \n        if(data==0){\n            var msg=Str.get_string('alreadyrequested', 'local_request');\n        }\n        else if(data==-1){\n            var msg=Str.get_string('capacity_check', 'local_request');\n        }\n        else{\n            var msg=Str.get_string('success_'+args.action, 'local_request');\n        }\n        if(args.action==\"approve\" && args.component=='Classroom'){\n            if(data <1 || data==''){\n\t\t        modal.setTitle('Information');\n                modal.setBody(msg);\n                modal.getFooter().find('[data-action=\"cancel\"], [data-action=\"save\"]').hide();\n            }else{\n                this.modal.hideFooter();\n                modal.setBody(data);\n                modal.setTitle('Information');\n                $('[data-action=\"hide\"]').css('display','block');\n            }\n        }else if(args.action==\"approve\" && args.component=='Certification'){ \n            \n                modal.setTitle('Information');\n                modal.setBody(msg);\n                modal.getFooter().find('[data-action=\"cancel\"], [data-action=\"save\"]').hide();\n            \n        }else if(args.action!='add'){\n          window.location.reload();\n        }else{\n            modal.setBody(msg);\n            //modal.getFooter().find('.modal-body button').hide();\n            modal.getFooter().find('[data-action=\"cancel\"], [data-action=\"save\"]').hide();\n        }\n        $(\".close\").click(function(){\n              location.reload();\n\n        });\n         //window.location = $(this).attr('href');\n    }; /* end of function */\n\n    \n    requestconfirm.prototype.submitajax = function(args, modal){\n\n            this.modal = modal;\n            userid = args.userid;\n            if(args.action == 'approve'){\n                modal.setSaveButtonText('Approve'); \n            }else if(args.action == 'deny'){\n                modal.setSaveButtonText('Reject'); \n            }else if(args.action == 'delete'){\n                modal.setSaveButtonText('Delete'); \n            }else{\n                modal.setSaveButtonText('Confirm'); \n            }\n            modal.getRoot().on(ModalEvents.save, function(e) {\n            e.preventDefault();\n                args.confirm = true;\n            $.ajax({\n                method: \"POST\",\n                dataType: \"json\",\n                url: M.cfg.wwwroot + \"/local/request/ajax.php\",\n                data: { component: args.component, componentid: args.componentid, action :args.action, id:args.id}\n              \n            }).done(function(response){\n              requestconfirm.prototype.handleModalSubmissionResponse(response, modal, args);\n\n            })\n          \n        });\n    };\n\n    requestconfirm.prototype.getbodystring= function(args){\n       \n       var string ='';\n       if(args.action && args.component){\n        var string= Str.get_string('confirmmsgfor_'+args.action, 'local_request', args);\n       }\n\n     return string;\n    }; \n    \n    requestconfirm.prototype.init = function(args) { \n        var deferred = $.Deferred();\n        this.action = args.action;\n        var componentid = args.componentid;\n        var userid = args.userid;\n        var component = args.component;\n         \n        ModalFactory.create({\n            title: 'Confirm',\n            type: ModalFactory.types.SAVE_CANCEL,\n            body: requestconfirm.prototype.getbodystring(args)       \n        }).done(function(modal) {\n            requestconfirm.prototype.submitajax(args, modal);\n            modal.show();\n        });\n\n\n     \n              \n    }; /* end of iit function */\n\n\n\n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    requestconfirm.prototype.init11 = function(args) {        \n        \n            var componentid = args.componentid;\n            var userid = args.userid;\n            var component = args.component;\n            return Str.get_strings([{\n                key: 'confirm'\n            },\n            {\n                key: 'request_confirm_message',\n                component: 'local_request',\n                param :args\n            },\n            {\n                key: 'confirm'\n            }]).then(function(s) {\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.SAVE_CANCEL ,\n                    body: s[1]\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.setSaveButtonText(s[2]);\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        e.preventDefault();\n                        // args.confirm = true;\n                        $.ajax({\n                            method: \"GET\",\n                            dataType: \"json\",\n                            url: M.cfg.wwwroot + \"/local/request/ajax.php?component='\"+args.component+\"'&componentid=\"+componentid+\"&userid=\"+userid,\n                            success: function(data){\n                       \n                                if(data==0){\n                                     var msg=Str.get_string('alreadyrequested', 'local_request');\n                                }\n                                else{\n                                    var msg=Str.get_string('requestsent', 'local_request');\n                                }\n\n                                modal.setBody(msg);\n                                //modal.getFooter().find('.modal-body button').hide();\n                                modal.getFooter().find('[data-action=\"cancel\"], [data-action=\"save\"]').hide();\n                               // modal.destroy();\n                                //window.location.href = window.location.href;\n                                    $(\".close\").click(function(){\n                                            location.reload();\n                                    });\n                            }\n                        });\n                    }.bind(this));\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        \n    };\n\n  \n\n    return /** @alias module:local_costcenter/newcostcenter */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function( args) {            \n            // alert(args.contextid);\n            return new requestconfirm(args);\n        },\n\n        requestDatatable: function() {\n            params = [];\n            params.action = 'viewrequest';\n            params.classroomid = $('#viewrequest').data('classroomid');\n            var oTable = $('#viewrequest').dataTable({\n                'processing': false,\n                'serverSide': false,\n                \"language\": {\n                    \"paginate\": {\n                    \"next\": \">\",\n                    \"previous\": \"<\"\n                    },\n                    \"search\": \"\",\n                    \"searchPlaceholder\": \"Search\"\n                },\n                \"sorting\": false,\n                \"responsive\": true,\n                \"pageLength\": 5,\n                \"bLengthChange\": false,\n                \"bInfo\" : false,\n            });\n        }, \n\n        load: function(){\n\n        },\n\n    };\n});\n        /*publishLearningplan: function(args){\n            console.log(args);\n            var planvalue = args.planid;\n            return Str.get_strings([{\n                key: 'confirm'\n            },\n            {\n                key: 'learningplan_enrol_users',\n                component: 'local_learningplan',\n                param :args\n            },\n            {\n                key: 'confirmall',\n                component: 'local_learningplan'\n            },\n            {\n                key: 'confirm'\n            }]).then(function(s) {\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    body: s[1]\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.setSaveButtonText(s[3]);\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        e.preventDefault();\n                        // args.confirm = true;\n                        $.ajax({\n                            method: \"GET\",\n                            dataType: \"json\",\n                            url: M.cfg.wwwroot + \"/local/learningplan/ajax.php?action=publishlearningplan&planid=\"+planvalue,\n                            success: function(data){\n                                modal.destroy();\n                                window.location.href = window.location.href;\n                            }\n                        });\n                    }.bind(this));\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        },\n        tabsFunction: function(args){\n            // console.log(args);\n            // alert(args.id);\n            $('.learningplan_tabs').click(function(){\n                if ($(this).find('a').hasClass('active')){\n                    return true;\n                }\n                var mylink = this;\n                console.log(mylink);\n                var learningplantab = $(this).data('module');\n                var id = $(this).data('id');\n                // console.log(id);\n                // alert(id);\n                $.ajax({\n                    method: 'GET',\n                    // dataType: \"json\",\n                    url: M.cfg.wwwroot + '/local/learningplan/ajax.php',\n                    data: {\n                        action: \"learningplantab\",\n                        tab: learningplantab,\n                        id: id\n                    },\n                    success:function(resp){\n                        var html = $.parseJSON(resp);\n                        $('#learningplantabscontent').html(html);\n                        $('#learningplantabscontent').find('div').addClass('active');\n                        if(learningplantab == 'users'){\n                            $(\"table#learning_plan_users\").dataTable({\n                                language: {\n                                    \"paginate\": {\n                                        \"next\": \">\",\n                                        \"previous\": \"<\"\n                                    },\n                                    \"search\": \"\",\n                                    \"searchPlaceholder\": \"Search\"\n                                }\n                            });\n                        }\n                        // console.log(mylink);\n                    }\n                });\n            });\n        },\n        enrolUser : function(args){\n            // console.log(args);\n            // alert('here');\n            var planvalue = args.planid;\n            var userid = args.userid;\n            return Str.get_strings([{\n                key: 'confirm'\n            },\n            {\n                key: 'learningplan_self_enrol',\n                component: 'local_learningplan',\n                param :args\n            },\n            {\n                key: 'confirm'\n            }]).then(function(s) {\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    body: s[1]\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.setSaveButtonText(s[2]);\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        e.preventDefault();\n                        // args.confirm = true;\n                        $.ajax({\n                            method: \"GET\",\n                            dataType: \"json\",\n                            url: M.cfg.wwwroot + \"/local/learningplan/ajax.php?action=userselfenrol&planid=\"+planvalue+\"&userid=\"+userid,\n                            success: function(data){\n                                modal.destroy();\n                                window.location.href = window.location.href;\n                            }\n                        });\n                    }.bind(this));\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        }, */\n"],"file":"requestconfirm.min.js"}