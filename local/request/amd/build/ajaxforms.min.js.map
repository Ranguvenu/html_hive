{"version":3,"sources":["../src/ajaxforms.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","Templates","Classroom","classroomlastchildpopup","args","ajax","type","url","M","cfg","wwwroot","data","classroomid","id","action","sesskey","success","returndata","create","title","get_string","body","done","modal","show","setLarge","getRoot","addClass","animate","on","hidden","setTimeout","destroy","bind","click","window","location","href","AjaxForms","contextid","init","prototype","self","console","log","callback","header_label","then","types","DEFAULT","getBody","footer","getFooter","find","submitForm","form_status","html","handleFormSubmissionResponse","dataTable","Datatable","setBody","form","submitFormAjax","formdata","jsonformdata","JSON","stringify","loadFragment","component","$footer","$style","hide","use","core_formchangechecker","reset_form_dirty_state","reload","handleFormSubmissionFailure","e","preventDefault","formData","serialize","methodname","plugintype","pluginname","params","promise","call","resp","css","fail","submit","load"],"mappings":"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","sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     core_group/AjaxForms\n * @class      AjaxForms\n * @package    core_group\n * @copyright  2017 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n        'core/str',\n        'core/modal_factory',\n        'core/modal_events',\n        'core/fragment',\n        'core/ajax',\n        'core/yui',\n        'core/templates',\n        'local_classroom/classroom'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y, Templates, Classroom) {\n\n    /**\n     * Constructor\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @param {int} contextid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    classroomlastchildpopup=function(args) {\n            $.ajax({\n                type: \"POST\",\n                url:   M.cfg.wwwroot + '/local/classroom/ajax.php',\n                data: { classroomid: args.id,action:'classroomlastchildpopup',\n                    sesskey: M.cfg.sesskey\n                },\n                success: function(returndata) {\n                    //Var returned_data is ONLY available inside this fn!\n                        ModalFactory.create({\n                        title: Str.get_string('classroom_info', 'local_classroom'),\n                        body: returndata\n                      }).done(function(modal) {\n                        // Do what you want with your new modal.\n                        modal.show();\n                         modal.setLarge();\n                         modal.getRoot().addClass('openLMStransition');\n                            modal.getRoot().animate({\"right\":\"0%\"}, 500);\n                            modal.getRoot().on(ModalEvents.hidden, function() {\n                            modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                                    setTimeout(function(){\n                                    modal.destroy();\n                                }, 1000);\n                            }.bind(this));\n                            $(\".close\").click(function(){\n                                window.location.href =  window.location.href;\n                            });\n                         //return modal;\n                      });\n                }\n            });\n    };\n    var AjaxForms = function(args) {\n\n        this.contextid = args.contextid;\n        this.args = args;\n        this.init(args);\n    };\n\n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    AjaxForms.prototype.modal = null;\n\n    /**\n     * @var {int} contextid\n     * @private\n     */\n    AjaxForms.prototype.contextid = -1;\n\n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    AjaxForms.prototype.init = function(args) {\n        // Fetch the title string.\n        var self = this;\n        console.log(args);\n            switch (args.callback) {\n                case 'request_form':\n                        switch (args.id) {\n                            case 0:\n                                header_label='requestcourse';\n                                break;\n                            default:\n                                 header_label='updaterequest';\n                        }\n                    break;\n \n            }\n        return Str.get_string(header_label, 'local_request').then(function(title) {\n            // Create the modal.\n            return ModalFactory.create({\n                type: ModalFactory.types.DEFAULT,\n                title: title,\n                body: this.getBody(),\n                footer: this.getFooter(),\n            });\n        }.bind(this)).then(function(modal) {\n            // Keep a reference to the modal.\n            this.modal = modal;\n\n            // Forms are big, we want a big modal.\n            this.modal.setLarge();\n\n            this.modal.getRoot().addClass('openLMStransition local_classroom');\n\n            // We want to reset the form every time it is opened.\n            this.modal.getRoot().on(ModalEvents.hidden, function() {\n                this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                setTimeout(function(){\n                    modal.destroy();\n                }, 1000);\n                // this.modal.destroy();\n            }.bind(this));\n            this.modal.getFooter().find('[data-action=\"save\"]').on('click', this.submitForm.bind(this));\n            this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                window.location.href =  window.location.href;\n                //modal.hide();\n                //setTimeout(function(){\n                //    modal.destroy();\n                //}, 1000);\n                // modal.destroy();\n            });\n            this.modal.getFooter().find('[data-action=\"skip\"]').on('click', function() {\n                self.args.form_status = self.args.form_status + 1;\n                 //console.log(args.form_status);\n                 if (args.form_status == 3) {\n                    classroomlastchildpopup(args);\n                 }\n                var data = self.getBody();\n                data.then(function(html, js) {\n                    if (html === false) {\n                        // window.location.reload();\n                        self.handleFormSubmissionResponse(args);\n                        $('#viewclassrooms').dataTable().destroy();\n                        Classroom.Datatable();\n                    }\n                });\n                modal.setBody(data);\n            });\n\n            this.modal.getRoot().on('submit', 'form', function(form) {\n                self.submitFormAjax(form, self.args);\n            });\n            this.modal.show();\n            this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n            $(\".close\").click(function(){\n              window.location.href =  window.location.href;\n            });\n            return this.modal;\n        }.bind(this));\n    };\n\n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    AjaxForms.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n//console.log('#########');\n       // console.log(formdata);\n        // Get the content of the modal.\n        this.args.jsonformdata = JSON.stringify(formdata);\n       // console.log(args);\n        return Fragment.loadFragment(this.args.component, this.args.callback, this.contextid, this.args);\n    };\n    /**\n     * @method getFooter\n     * @private\n     * @return {Promise}\n     */\n    AjaxForms.prototype.getFooter = function() {\n        // var templateContext;\n        // var modalPromise = Templates.render('local_classroom/form_actions', templateContext)\n        // .done(function(html) {\n        // console.log(html);\n        // });\n\n        $footer = '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">Save & Continue</button>&nbsp;';\n        if (this.args.form_status == 0) {\n            $style = 'style=\"display:none;\"';\n            $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"skip\" ' + $style + '>Skip</button>&nbsp;';\n        }\n        $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">Cancel</button>';\n        return $footer;\n    };\n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    AjaxForms.prototype.handleFormSubmissionResponse = function(args) {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        if (args.form_status == -2) {\n            window.location.reload();\n        }\n        // This will be the context for our template. So {{name}} in the template will resolve to \"Tweety bird\".\n        // var context = { id: args.id};\n\n        // var modalPromise = ModalFactory.create({\n        //     type: ModalFactory.types.DEFAULT,\n        //     body: Templates.render('local_classroom/classroomview', context),\n        // });\n        // $.when(modalPromise).then(function(modal) {\n        //     modal.setTitle('Hi');\n        //     modal.show();\n        //     return modal;\n        // }).fail(Notification.exception);\n        //  switch (args.callback) {\n        //         case 'classroom_form':\n        //                 switch (args.id) {\n        //                     case 0:\n        //                         header_label='createclassroom';\n        //                         break;\n        //                     default:\n        //                          header_label='updateclassroom';\n        //                 }\n        //             break;\n        // }\n        //console.log(args.form_status);\n        classroomlastchildpopup(args);\n        //$('#viewclassrooms').dataTable().destroy();\n        //Classroom.Datatable();\n    };\n\n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    AjaxForms.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n\n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    AjaxForms.prototype.submitFormAjax = function(e, args) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n        var self = this;\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        var methodname = args.plugintype + '_' + args.pluginname + '_submit_instance';\n        // Now we can continue...\n        var params = {};\n        params.contextid = this.contextid;\n        params.jsonformdata = JSON.stringify(formData);\n        params.form_status = args.form_status;\n\n        var promise = Ajax.call([{\n            methodname: methodname,\n            args: params\n        }]);\n        promise[0].done(function(resp){\n            self.args.form_status = resp.form_status;\n            if (resp.form_status >= 0 && resp.form_status !== false) {\n                self.args.form_status = resp.form_status;\n                self.args.id = resp.id;\n                self.handleFormSubmissionFailure();\n            } else {\n                self.handleFormSubmissionResponse(self.args);\n            }\n            if (args.form_status > 0) {\n                $('[data-action=\"skip\"]').css('display', 'inline-block');\n            }\n        }).fail(function(ex){\n            self.handleFormSubmissionFailure(formData);\n        });\n\n    };\n\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    AjaxForms.prototype.submitForm = function(e) {\n        e.preventDefault();\n        this.modal.getRoot().find('form').submit();\n    };\n\n    return /** @alias module:core_group/AjaxForms */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n            return new AjaxForms(args);\n        },\n        load: function () {\n\n        }\n    };\n});"],"file":"ajaxforms.min.js"}