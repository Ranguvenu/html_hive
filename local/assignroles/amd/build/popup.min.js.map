{"version":3,"sources":["../src/popup.js"],"names":["define","dataTable","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","NewPopup","args","contextid","self","init","selector","prototype","modal","click","roleid","data","rolename","get_string","then","title","create","type","types","CANCEL","body","getBody","done","setLarge","getRoot","on","hidden","hide","destroy","bind","cancel","show","bodyRendered","dataTableshow","fn","ext","errMode","formdata","params","jsonformdata","JSON","stringify","loadFragment","unassignuser","get_strings","key","component","param","s","SAVE_CANCEL","setSaveButtonText","save","e","preventDefault","confirm","console","log","userid","promise","call","methodname","window","location","href","fail","ex","Datatable","unassignConfirm"],"mappings":"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","sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_courses/newcourse\n * @class      NewCourse\n * @package    local_courses\n * @copyright  2017 Shivani\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['local_assignroles/jquery.dataTables', 'jquery', 'core/str', 'core/modal_factory', 'core/modal_events',\n        'core/fragment', 'core/ajax', 'core/yui', 'jqueryui'],\n        function(dataTable, $, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n \n    /**\n     * Constructor\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @param {int} contextid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var NewPopup = function(args) {\n        this.contextid = args.contextid;\n        var self = this;\n        self.init(args.selector);\n    };\n \n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    NewPopup.prototype.modal = null;\n \n    /**\n     * @var {int} contextid\n     * @private\n     */\n    NewPopup.prototype.contextid = -1;\n \n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    NewPopup.prototype.init = function(selector) {\n        //var triggers = $(selector);\n        var self = this;\n        // Fetch the title string.\n        $(selector).click(function(){\n            self.roleid = $(this).data('roleid');\n            self.rolename = $(this).data('rolename');\n\n            Str.get_string('assignrole', 'local_assignroles', self).then(function(title) {\n            \n                ModalFactory.create({\n                    type: ModalFactory.types.CANCEL,\n                    title: title,\n                    body: self.getBody()\n                }).done(function(modal) {\n                    // Keep a reference to the modal.\n                    self.modal = modal;\n          \n\n                    // Forms are big, we want a big modal.\n                    self.modal.setLarge();\n         \n                    // We want to reset the form every time it is opened.\n                    self.modal.getRoot().on(ModalEvents.hidden, function() {\n                        // self.modal.setBody('');\n                        self.modal.hide();\n                        self.modal.destroy();\n                    }.bind(this));\n\n                    // We want to reset the form every time it is opened.\n                    self.modal.getRoot().on(ModalEvents.cancel, function() {\n                        // self.modal.setBody('');\n                        self.modal.hide();\n                        self.modal.destroy();\n                    }.bind(this));\n                    self.modal.show();\n\n                    self.modal.getRoot().on(ModalEvents.bodyRendered, function() {\n                         self.dataTableshow(self.roleid);\n                    }.bind(this));                                    \n                                  \n                });    \n\n            });\n        });\n                    \n    };\n    NewPopup.prototype.dataTableshow = function(roleid){\n        $('#popup_user'+roleid).dataTable({\n            'bPaginate': true,\n            'bFilter': true,\n            'bLengthChange': true,\n            'lengthMenu': [\n                [5, 10, 25, 50, 100, -1],\n                [5, 10, 25, 50, 100, 'All']\n            ],\n            'language': {\n                'emptyTable': 'No Records Found',\n                'paginate': {\n                    'previous': '<',\n                    'next': '>'\n                }\n            },\n\n            'bProcessing': true,\n        });\n        $.fn.dataTable.ext.errMode = 'none';\n    };\n \n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    NewPopup.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        \n        // Get the content of the modal.\n        if(typeof this.roleid != 'undefined'){\n            var params = {roleid:this.roleid, jsonformdata: JSON.stringify(formdata)};\n        }else{\n            var params = {};\n        }\n        // console.log(params);\n        // alert(params);\n        return Fragment.loadFragment('local_assignroles', 'roleusers_display', this.contextid, params);\n    };\n    var unassignuser = function(args){\n        return Str.get_strings([{\n            key: 'confirmation',\n            component: 'local_assignroles',\n        },\n        {\n            key: 'unassignconfirm',\n            component: 'local_assignroles',\n            param :args\n        },\n        {\n            key: 'unassign',\n            component: 'local_assignroles'\n        }]).then(function(s) {\n            ModalFactory.create({\n                title: s[0],\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: s[1]\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(s[2]);\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    args.confirm = true;\n                    console.log(args);\n                    var params = {};\n                    params.contextid = args.contextid;\n                    params.roleid = args.roleid;\n                    params.userid = args.userid;\n                    var promise = Ajax.call([{\n                        methodname: 'local_assignroles_unassign_role',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp) {\n                        // this.modal.hide();\n                        // this.modal.destroy();\n                        window.location.href = window.location.href;\n                    }).fail(function(ex) {\n                        // do something with the exception\n                         console.log(ex);\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }.bind(this));\n    }\n \n \n    return /** @alias module:local_evaluation/newevaluation */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n            this.Datatable();\n            return new NewPopup(args);\n        },\n        Datatable: function() {\n            \n        },\n        unassignConfirm: function(args) {\n            return unassignuser(args);\n        },\n    };\n});"],"file":"popup.min.js"}