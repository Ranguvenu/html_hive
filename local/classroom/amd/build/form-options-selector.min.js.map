{"version":3,"sources":["../src/form-options-selector.js"],"names":["define","$","Ajax","Templates","processResults","selector","results","options","each","index","option","push","value","id","label","_label","transport","query","success","failure","promise","contextid","parseInt","data","action","formoptions","institute_type_selector","institute_type","val","department","organizationclass","organizationselect","parnetid","departments_selected","JSON","stringify","call","methodname","args","context","then","parseJSON","promises","i","render","when","apply","arguments","catch"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * option selector module.\n *\n * @module     tool_lp/form-option-selector\n * @class      form-option-selector\n * @package    tool_lp\n * @copyright  2015 Frédéric Massart - FMCorz.net\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/templates'], function($, Ajax, Templates) {\n\n    return /** @alias module:tool_lp/form-option-selector */ {\n\n        processResults: function(selector, results) {\n            var options = [];\n            $.each(results, function(index, option) {\n                options.push({\n                    value: option.id,\n                    label: option._label\n                });\n            });\n            return options;\n        },\n\n        transport: function(selector, query, success, failure) {\n            var promise;\n                contextid = parseInt($(selector).data('contextid'), 10),\n                action = $(selector).data('action');\n                formoptions = $(selector).data('options');\n                if (action === 'classroom_institute_selector') {\n                    institute_type_selector = $(selector).data('institute_type');\n                    institute_type = $(\"[name='\" + institute_type_selector + \"']:checked\").val();\n                    formoptions.institute_type = institute_type;\n                } else if (action === 'classroom_costcenter_selector') {\n                    if (formoptions.department) {\n                        organizationclass = formoptions.organizationselect;\n                        formoptions.parnetid = $(\"[data-class='\" + organizationclass + \"']\").val();\n                    }\n                } else if (action === 'classroom_subdepartment_selector') {\n                    // var department = $(\"#id_department\").find(\"option:selected\").val();\n                    var departments_selected = $(\"#id_department\").val();\n                    // alert(department);\n                    // alert(departmenttest);\n                    if (departments_selected) {\n                        // organizationclass = formoptions.organizationselect;\n                        // formoptions.parnetid = $(\"[data-class='\" + organizationclass + \"']\").val();\n                        formoptions.departments_selected = departments_selected\n                    }\n                }else if (action === 'classroom_trainer_selector') {\n                        organizationclass = formoptions.organizationselect;\n                        formoptions.parnetid = $(\"[data-class='\" + organizationclass + \"']\").val();\n                   \n                }\n                    //console.log(formoptions);\n                formoptions = JSON.stringify(formoptions);\n            promise = Ajax.call([{\n                methodname: 'local_classroom_form_option_selector',\n                args: {\n                    query: query,\n                    context: {contextid: contextid},\n                    action: action,\n                    options: formoptions\n                }\n            }]);\n\n            promise[0].then(function(results) {\n                results = $.parseJSON(results);\n                var promises = [],\n                    i = 0;\n                // Render the label.\n                $.each(results, function(index, option) {\n                    promises.push(Templates.render('local_classroom/form-option-selector-suggestion', option));\n                });\n                // Apply the label to the results.\n                return $.when.apply($.when, promises).then(function() {\n                    var args = arguments;\n                    $.each(results, function(index, option) {\n                        option._label = args[i];\n                        i++;\n                    });\n                    success(results);\n                    return;\n                });\n\n            }).catch(failure);\n        }\n\n    };\n\n});\n"],"file":"form-options-selector.min.js"}