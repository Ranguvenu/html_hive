{"version":3,"sources":["../src/newonlinetests.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewOnlinetest","selector","contextid","testid","self","init","prototype","modal","document","on","editid","data","update_string","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","show","setLarge","getRoot","addClass","animate","hidden","setTimeout","destroy","setBody","shown","append","save","submitForm","submitFormAjax","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","hide","use","M","core_formchangechecker","reset_form_dirty_state","id","sesskey","cfg","returndata","done","find","window","location","reload","handleFormSubmissionFailure","e","preventDefault","formData","serialize","promise","call","methodname","args","fail","resp","submit","getdepartmentlist","enrolledusers","clicked","hasClass","testname","removeClass","deleteonlinetest","elem","get_strings","key","component","s","DEFAULT","footer","util","href","getFooter","suspendonlinetest","visible","console","log","param","status","wwwroot"],"mappings":"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","sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_onlinetests/NewOnlinetest\n * @class      NewOnlinetest\n * @package    local_onlinetests\n * @copyright  2019 Sreenivas\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui', 'local_onlinetests/jquery.dataTables'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n \n    /**\n     * Constructor\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @param {int} contextid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var NewOnlinetest = function(selector, contextid, testid) {\n        this.contextid = contextid;\n        this.testid = testid;\n        var self = this;\n        self.init(selector);\n    };\n \n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    NewOnlinetest.prototype.modal = null;\n \n    /**\n     * @var {int} contextid\n     * @private\n     */\n    NewOnlinetest.prototype.contextid = -1;\n \n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    NewOnlinetest.prototype.init = function(selector) {\n        var self = this;\n        $(document).on('click', selector, function(){\n            \n            var editid = $(this).data(\"value\");\n            if (editid) {\n                self.testid = editid;\n                update_string = Str.get_string('editonlinetests', 'local_onlinetests');\n            } else {\n                self.testid = -1;\n                update_string = Str.get_string('createonlinetest', 'local_onlinetests');\n            }\n            return update_string.then(function(title) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: self.getBody()\n                });\n            }.bind(self)).then(function(modal) {\n                \n                // Keep a reference to the modal.\n                self.modal = modal;\n                self.modal.show();\n                // Forms are big, we want a big modal.\n                self.modal.setLarge();\n                self.modal.getRoot().addClass('openLMStransition local_onlinetests');\n                self.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n     \n                // We want to reset the form every time it is opened.\n                self.modal.getRoot().on(ModalEvents.hidden, function() {\n                    self.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 1000);\n                    self.modal.setBody('');\n                }.bind(this));\n    \n                // We want to hide the submit buttons every time it is opened.\n                self.modal.getRoot().on(ModalEvents.shown, function() {\n                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                }.bind(this));\n     \n                // We catch the modal save event, and use it to submit the form inside the modal.\n                // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n                // We also catch the form submit event and use it to submit the form with ajax.\n                self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n                \n                return this.modal;\n            }.bind(this));\n        });        \n    };\n \n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    NewOnlinetest.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // Get the content of the modal.\n        var params = {testid:this.testid, jsonformdata: JSON.stringify(formdata)};\n        return Fragment.loadFragment('local_onlinetests', 'new_onlinetest_form', this.contextid, params);\n    };\n \n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {modal}\n     */\n    NewOnlinetest.prototype.handleFormSubmissionResponse = function(testid) {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n\n        // modal to show the procedure thereof\n        var params = { id: testid, sesskey: M.cfg.sesskey};\n        var returndata =  Fragment.loadFragment('local_onlinetests', 'addquestions_or_enrol', this.contextid, params);\n\n\n        ModalFactory.create({\n            title: Str.get_string('pluginname', 'local_onlinetests'),\n            body: returndata\n        }).done(function(modal) {\n            // Do what you want with your new modal.\n            modal.show();\n            modal.getRoot().find('[data-action=\"hide\"]').on('click', function() {\n            modal.hide();\n            setTimeout(function(){\n                 window.location.reload();\n            }, 500);\n            });\n        });\n    };\n \n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    NewOnlinetest.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n \n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    NewOnlinetest.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n \n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n\n        // Now we can continue...\n        var promise = Ajax.call([{\n            methodname: 'local_onlinetests_submit_create_onlinetest_form',\n            args: {contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\n        }]);\n        var self =this;\n        promise[0].done(function(resp){\n            self.handleFormSubmissionResponse(resp);        \n        });\n    };\n \n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    NewOnlinetest.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n\n    return /** @alias module:local_onlinetests/NewOnlinetest */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the test.\n         * @param {int} testid examid\n         * @return {Promise}\n         */\n        init: function(selector, contextid, testid) {\n            return new NewOnlinetest(selector, contextid, testid);\n        },\n        getdepartmentlist: function() {\n            // $(document).on('change', '#id_costcenterid', function() {\n            //     var costcentervalue = $(this).find(\"option:selected\").val();\n            //     var title = M.util.get_string(\"select_department\", \"local_onlinetests\");\n            //     if (costcentervalue && costcentervalue != 'null') {\n            //         var promise = Ajax.call([{\n            //             methodname: 'local_costcenter_departmentlist',\n            //             args: {\n            //                 orgid: costcentervalue\n            //             },\n            //         }]);\n            //         promise[0].done(function(resp) {\n            //             var template =  '<option value=null>Select Department</option>';                                    \n            //             $.each(JSON.parse(resp.departments), function( index, value) {\n            //                 template += '<option value = ' + value.id + ' >' +value.fullname + '</option>';\n            //             });\n            //             $('#id_departmentid').html(template);\n            //         }).fail(function() {\n            //                 // do something with the exception\n            //             alert('Error occured while processing request');\n            //             window.location.reload();\n            //         });\n            //     } else {\n            //         var template =  '<option value=0>All</option>';\n            //         $('#id_departmentid').html(template);\n            //     }\n            // });\n            // $(document).on('change', '#id_costcenterid', function() {\n            //     var costcentervalue = $(this).find(\"option:selected\").val();\n            //     var title = M.util.get_string(\"select_department\", \"local_onlinetests\");\n            //     if (costcentervalue && costcentervalue != 'null') {\n            //         var promise = Ajax.call([{\n            //             methodname: 'local_costcenter_subdepartmentlist',\n            //             args: {\n            //                 orgid: costcentervalue\n            //             },\n            //         }]);\n            //         promise[0].done(function(resp) {\n            //             var template =  '<option value=null>All</option>';                                    \n            //             $.each(JSON.parse(resp.departments), function( index, value) {\n            //                 template += '<option value = ' + value.id + ' >' +value.fullname + '</option>';\n            //             });\n            //             $('#id_departmentid').html(template);\n            //         }).fail(function() {\n            //                 // do something with the exception\n            //             alert('Error occured while processing request');\n            //             window.location.reload();\n            //         });\n            //     } else {\n            //         var template =  '<option value=0>All</option>';\n            //         $('#id_departmentid').html(template);\n            //     }\n            // });\n            // $(document).on('change', '#id_departmentid', function() {\n            //     var departmentvalue = $(this).find(\"option:selected\").val();\n            //     var title = M.util.get_string(\"select_department\", \"local_onlinetests\");\n            //     if (departmentvalue && departmentvalue != 'null') {\n            //         var promise = Ajax.call([{\n            //             methodname: 'local_costcenter_subdepartmentlist',\n            //             args: {\n            //                 orgid: costcentervalue\n            //             },\n            //         }]);\n            //         promise[0].done(function(resp) {\n            //             var template =  '<option value=0>All</option>';                                    \n            //             $.each(JSON.parse(resp.subdepartments), function( index, value) {\n            //                 template += '<option value = ' + value.id + ' >' +value.fullname + '</option>';\n            //             });\n            //             $('#id_departmentid').html(template);\n            //         }).fail(function() {\n            //                 // do something with the exception\n            //             alert('Error occured while processing request');\n            //             window.location.reload();\n            //         });\n            //     } else {\n            //         var template =  '<option value=null>Select Department</option>';\n            //         $('#id_departmentid').html(template);\n            //     }\n            // });\n        },\n        enrolledusers: function(args) {\n            var clicked = $('.onlinetest_users_count').hasClass('clicked');\n            $('.onlinetest_users_count').addClass('clicked');\n            if(!clicked){\n                // modal to show the procedure thereof\n                var params = { testid: args.testid, type:args.type};\n                var returndata =  Fragment.loadFragment('local_onlinetests', 'enrolled_users', args.contextid, params);\n\n                ModalFactory.create({\n                    title: args.testname,\n                    body: returndata\n                }).done(function(modal) {\n                    // Do what you want with your new modal.\n                    modal.show();\n                    modal.setLarge();\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        modal.setBody('');\n                    }.bind(this));\n                    modal.getRoot().find('[data-action=\"hide\"]').on('click', function() {\n                        modal.hide();\n                        $('.onlinetest_users_count').removeClass('clicked');\n                        setTimeout(function(){\n                             modal.destroy();\n                        }, 500);\n                    });\n                });\n            }\n        },\n        deleteonlinetest: function(elem) {\n            return Str.get_strings([{\n                key: 'deleteonlinetest',\n                component: 'local_onlinetests'\n            }, {\n                key: 'confirmdelete',\n                component: 'local_onlinetests'\n            }]).then(function(s) {\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.DEFAULT,\n                    body: s[1],\n                    footer: '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">'+M.util.get_string(\"yes\", \"moodle\")+'</button>&nbsp;' +\n            '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">'+M.util.get_string(\"no\", \"moodle\")+'</button>'\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.getRoot().find('[data-action=\"save\"]').on('click', function() {\n                        window.location.href ='index.php?delete='+elem+'&confirm=1&sesskey=' + M.cfg.sesskey;\n                    }.bind(this));\n                    modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.setBody('');\n                        modal.hide();\n                    });\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        },\n          suspendonlinetest: function(elem,visible,args) {\n            console.log\n            return Str.get_strings([{\n                key: 'suspendconfirm',\n                component: 'local_onlinetests',\n                param: args,\n            },\n            {\n                key: 'inactiveconfirm',\n                component: 'local_onlinetests',\n                param: args,\n             \n            },\n            {\n                key: 'activeconfirm',\n                component: 'local_onlinetests',\n                param: args,\n            }]).then(function(s) {\n                if (elem.status == \"enable\") {\n                    s[1] = s[1];\n                   // var confirm = ModalFactory.types.CONFIRM;\n                 } else if (elem.status == \"disable\") {\n                    s[1] = s[2];\n                    //var confirm = ModalFactory.types.CONFIRM;\n                 }\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.DEFAULT,\n                    body: s[1],\n                    footer: '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">'+M.util.get_string(\"yes\", \"local_onlinetests\")+'</button>&nbsp;' +\n            '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">'+M.util.get_string(\"no\", \"local_onlinetests\")+'</button>'\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.getRoot().find('[data-action=\"save\"]').on('click', function() {\n                        window.location.href = M.cfg.wwwroot+'/local/onlinetests/index.php?id='+elem.id+'&visible='+elem.visible+'&hide=1&sesskey='+ M.cfg.sesskey;\n                    }.bind(this));\n                    modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.setBody('');\n                        modal.hide();\n                    });\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        },\n    };\n});"],"file":"newonlinetests.min.js"}