{"version":3,"sources":["../src/newroom.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewRoom","args","contextid","roomid","self","init","selector","prototype","modal","get_strings","key","component","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","setLarge","getRoot","addClass","on","hidden","animate","setTimeout","destroy","shown","append","getFooter","find","hide","save","submitForm","submitFormAjax","show","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","data","setBody","e","preventDefault","formData","serialize","call","methodname","done","fail","submit","load"],"mappings":"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","sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_location/location\n * @class      NewRoom\n * @package    local_location\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n\n    /**\n     * Constructor\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @param {int} contextid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var NewRoom = function(args) {\n        this.contextid = args.contextid;\n\n\n        this.roomid = args.roomid;\n        var self = this;\n        self.init(args.selector);\n    };\n\n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    NewRoom.prototype.modal = null;\n\n    /**\n     * @var {int} contextid\n     * @private\n     */\n    NewRoom.prototype.contextid = -1;\n\n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    NewRoom.prototype.init = function(args) {\n        //var triggers = $(selector);\n        var self = this;\n\n\n\n        // Fetch the title string.\n        // $('.'+args.selector).click(function(){\n            return Str.get_strings([{\n                key: 'adnewroom',\n                component: 'local_location'\n            },\n            {\n                key: 'updateroom',\n                component: 'local_location'\n            }\n            ]).then(function(title) {\n                if (self.roomid != 0) {\n                    title[0] = title[1];\n                }\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title[0],\n                    body: self.getBody()\n                });\n            }.bind(self)).then(function(modal) {\n\n                // Keep a reference to the modal.\n                self.modal = modal;\n                // self.modal.show();\n                // Forms are big, we want a big modal.\n                self.modal.setLarge();\n                this.modal.getRoot().addClass('openLMStransition');\n                // We want to reset the form every time it is opened.\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 5000);\n                }.bind(this));\n                // self.modal.getRoot().on(ModalEvents.hidden, function() {\n                //     self.modal.setBody(self.getBody());\n                // }.bind(this));\n\n                // We want to hide the submit buttons every time it is opened.\n                // self.modal.getRoot().on(ModalEvents.shown, function() {\n                //     self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                // }.bind(this));\n                self.modal.getRoot().on(ModalEvents.shown, function() {\n                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                    this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.hide();\n                        setTimeout(function(){\n                            modal.destroy();\n                        }, 5000);\n                    });\n                }.bind(this));\n\n\n                // We catch the modal save event, and use it to submit the form inside the modal.\n                // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n                // We also catch the form submit event and use it to submit the form with ajax.\n                self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n                self.modal.show();\n                this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n                return this.modal;\n            }.bind(this));\n\n\n        // });\n\n    };\n\n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    NewRoom.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // Get the content of the modal.\n        var params = {roomid:this.roomid, jsonformdata: JSON.stringify(formdata)};\n        return Fragment.loadFragment('local_location', 'new_roomform', this.contextid, params);\n    };\n\n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    NewRoom.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        document.location.reload();\n    };\n\n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    NewRoom.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n\n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    NewRoom.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        // Now we can continue...\n        Ajax.call([{\n            methodname: 'local_location_submit_roomform_form',\n            args: {contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\n            done: this.handleFormSubmissionResponse.bind(this, formData),\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\n        }]);\n    };\n\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    NewRoom.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n\n    return /** @alias module:local_location/newlocation */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n            return new NewRoom(args);\n        },\n        load: function(){\n\n        }\n    };\n});"],"file":"newroom.min.js"}