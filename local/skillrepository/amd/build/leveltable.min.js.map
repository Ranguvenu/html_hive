{"version":3,"sources":["../src/leveltable.js"],"names":["define","dataTable","Str","ModalFactory","ModalEvents","Ajax","Fragment","$","Newlevel","args","self","init","prototype","modal","contextid","levelid","head","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","setLarge","getRoot","addClass","on","hidden","animate","setTimeout","destroy","shown","append","getFooter","find","hide","save","submitForm","submitFormAjax","show","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","Y","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","data","setBody","e","preventDefault","formData","serialize","call","methodname","done","fail","submit","leveltable","cfg","wwwroot","css","deletelevel","get_strings","key","component","param","s","setSaveButtonText","value","button","asyncSet","text","confirm","ajax","method","dataType","url","success","window"],"mappings":"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","sourcesContent":["define([\n    'local_skillrepository/jquery.dataTables',\n    'core/str',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/ajax',\n    'core/fragment',\n    'jquery',\n    'jqueryui',\n], function (dataTable, Str, ModalFactory, ModalEvents, Ajax, Fragment, $) {\n    var Newlevel = function(args){\n            this.args = args;\n            var self = this;\n            self.init(args);\n        };\n\n        /**\n         * @var {Modal} modal\n         * @private\n         */\n        Newlevel.prototype.modal = null;\n     \n        /**\n         * @var {int} contextid\n         * @private\n         */\n        Newlevel.prototype.contextid = -1;\n\n        Newlevel.prototype.init = function(args) {\n            var self = this;\n            if(args.levelid){\n                var head = Str.get_string('update_level', 'local_skillrepository');\n            }else{\n                var head = Str.get_string('create_level', 'local_skillrepository');\n            }\n            return head.then(function(title) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: self.getBody()\n                });\n            }.bind(self)).then(function(modal) {\n                    \n                // Keep a reference to the modal.\n                self.modal = modal;\n                // Forms are big, we want a big modal.\n                self.modal.setLarge();\n                this.modal.getRoot().addClass('openLMStransition local_skillrepository');\n     \n                // We want to reset the form every time it is opened.\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 5000);\n                }.bind(this));\n                // self.modal.getRoot().on(ModalEvents.hidden, function() {\n                //     modal.hide();\n                //         setTimeout(function(){\n                //             modal.destroy();\n                //         }, 5000);\n                //     //     self.modal.setBody(self.getBody());\n                //     }.bind(this));\n                        self.modal.getRoot().on(ModalEvents.shown, function() {\n                        self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                        this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                            modal.hide();\n                            setTimeout(function(){\n                                modal.destroy();\n                            }, 5000);\n                            // modal.destroy();\n                        });\n                    }.bind(this));\n        \n                    // We catch the modal save event, and use it to submit the form inside the modal.\n                    // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                    self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n                    // We also catch the form submit event and use it to submit the form with ajax.\n                    self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n                    self.modal.show();\n                    this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n                    return this.modal;\n                }.bind(this));       \n            \n            \n            // });\n            \n        };\n\n         /**\n         * @method getBody\n         * @private\n         * @return {Promise}\n         */\n        Newlevel.prototype.getBody = function(formdata) {\n            if (typeof formdata === \"undefined\") {\n                formdata = {};\n            }\n            // Get the content of the modal.\n            var params = {levelid:this.args.levelid, jsonformdata: JSON.stringify(formdata)};\n            return Fragment.loadFragment('local_skillrepository', 'level_form', this.args.contextid, params);\n        \n        };\n\n        /**\n         * @method handleFormSubmissionResponse\n         * @private\n         * @return {Promise}\n         */\n        Newlevel.prototype.handleFormSubmissionResponse = function() {\n            this.modal.hide();\n            // We could trigger an event instead.\n            // Yuk.\n            Y.use('moodle-core-formchangechecker', function() {\n                M.core_formchangechecker.reset_form_dirty_state();\n            });\n            document.location.reload();\n        };\n\n        /**\n         * @method handleFormSubmissionFailure\n         * @private\n         * @return {Promise}\n         */\n        Newlevel.prototype.handleFormSubmissionFailure = function(data) {\n            // Oh noes! Epic fail :(\n            // Ah wait - this is normal. We need to re-display the form with errors!\n            this.modal.setBody(this.getBody(data));\n        };\n        \n        /**\n         * Private method\n         *\n         * @method submitFormAjax\n         * @private\n         * @param {Event} e Form submission event.\n         */\n        Newlevel.prototype.submitFormAjax = function(e) {\n            // We don't want to do a real form submission.\n            e.preventDefault();\n     \n            // Convert all the form elements values to a serialised string.\n            var formData = this.modal.getRoot().find('form').serialize();\n            \n            // Now we can continue...\n            Ajax.call([{\n                methodname: 'local_skillrepository_submit_level_form',\n                args: {contextid: this.args.contextid, jsonformdata: formData},\n                done: this.handleFormSubmissionResponse.bind(this, formData),\n                fail: this.handleFormSubmissionFailure.bind(this, formData)\n            }]);\n        };\n\n        /**\n         * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n         *\n         * @method submitForm\n         * @param {Event} e Form submission event.\n         * @private\n         */\n        Newlevel.prototype.submitForm = function(e) {\n            e.preventDefault();\n            var self = this;\n            self.modal.getRoot().find('form').submit();\n        };\n\treturn{\n        init: function(args){\n            return new Newlevel(args);\n        },\n\t\tleveltable: function(){\n\t\t\t$(\"#all_levels_display_table\").dataTable({\n                \"processing\": true,\n                \"bServerSide\": true,\n                \"sAjaxSource\":M.cfg.wwwroot + \"/local/skillrepository/ajax.php?action=getlevelstable\",\n                \"aaSorting\": [],\n                \"pageLength\": 10,\n            });\n            $(\"#all_levels_display_table\").css('width', '100%');\n\t\t},\n\t\tdeletelevel: function(args){\n\t\t\treturn Str.get_strings([{\n                key: 'confirm'\n            },\n            {\n                key: 'deletelevelconfirm',\n                component: 'local_skillrepository',\n                param :args\n            },\n            {\n                key: 'delete'\n            }]).then(function(s) {\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    body: s[1]\n                }).done(function(modal) {\n                    this.modal = modal;\n                    //modal.setSaveButtonText(s[2]);\n                    modal.setSaveButtonText(Str.get_string('yes_delete', 'local_skillrepository'));\n\n\n                    //For cancel button string changed//\n                    var value=Str.get_string('cancel', 'local_skillrepository');\n                    var button = this.modal.getFooter().find('[data-action=\"cancel\"]');\n                    this.modal.asyncSet(value, button.text.bind(button));\n                    \n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        e.preventDefault();\n                        args.confirm = true;\n                        $.ajax({\n                            method: \"POST\",\n                            dataType: \"json\",\n                            url: M.cfg.wwwroot + \"/local/skillrepository/ajax.php?action=deletelevel&levelid=\"+args.levelid,\n                            success: function(data){\n                                window.location.reload();\n                            }\n                        });\n                    }.bind(this));\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n\n\t\t},\n\t}\n});\n"],"file":"leveltable.min.js"}