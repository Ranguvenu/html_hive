{"version":3,"sources":["../src/newcategory.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewCategory","args","self","init","prototype","modal","contextid","categoryid","head","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","setLarge","getRoot","addClass","on","hidden","animate","setTimeout","destroy","shown","append","getFooter","find","hide","save","submitForm","submitFormAjax","show","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","data","setBody","e","preventDefault","formData","serialize","call","methodname","done","fail","submit","load","deletecategory","get_strings","key","component","param","s","setSaveButtonText","value","button","asyncSet","text","confirm","ajax","method","dataType","url","cfg","wwwroot","selector","success","window"],"mappings":"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","sourcesContent":["define(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n        \n        var NewCategory = function(args){\n        \tthis.args = args;\n        \tvar self = this;\n        \tself.init(args);\n        };\n\n        /**\n\t     * @var {Modal} modal\n\t     * @private\n\t     */\n\t    NewCategory.prototype.modal = null;\n\t \n\t    /**\n\t     * @var {int} contextid\n\t     * @private\n\t     */\n\t    NewCategory.prototype.contextid = -1;\n\n\t    NewCategory.prototype.init = function(args) {\n\t        var self = this;\n\t        if(args.categoryid){\n\t        \tvar head = Str.get_string('update_skillcategory', 'local_skillrepository');\n\t        }else{\n\t        \tvar head = Str.get_string('create_skillcategory', 'local_skillrepository');\n\t        }\n            return head.then(function(title) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: self.getBody()\n                });\n            }.bind(self)).then(function(modal) {\n\t                \n                // Keep a reference to the modal.\n                self.modal = modal;\n                // Forms are big, we want a big modal.\n                self.modal.setLarge();\n                this.modal.getRoot().addClass('openLMStransition local_skillrepository');\n     \n                // We want to reset the form every time it is opened.\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n        \t        this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 5000);\n                }.bind(this));\n                // self.modal.getRoot().on(ModalEvents.hidden, function() {\n                // \tmodal.hide();\n                //         setTimeout(function(){\n                //             modal.destroy();\n                //         }, 5000);\n\t               //  //     self.modal.setBody(self.getBody());\n\t               //  }.bind(this));\n\t                    self.modal.getRoot().on(ModalEvents.shown, function() {\n\t                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n\t                    this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n\t                        modal.hide();\n\t                        setTimeout(function(){\n\t                            modal.destroy();\n\t                        }, 5000);\n\t                        // modal.destroy();\n\t                    });\n\t                }.bind(this));\n\t    \n\t                // We catch the modal save event, and use it to submit the form inside the modal.\n\t                // Triggering a form submission will give JS validation scripts a chance to check for errors.\n\t                self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n\t                // We also catch the form submit event and use it to submit the form with ajax.\n\t                self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n\t                self.modal.show();\n\t                this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n\t                return this.modal;\n\t            }.bind(this));       \n\t        \n\t        \n\t        // });\n\t        \n\t    };\n\n\t     /**\n\t     * @method getBody\n\t     * @private\n\t     * @return {Promise}\n\t     */\n\t    NewCategory.prototype.getBody = function(formdata) {\n\t        if (typeof formdata === \"undefined\") {\n\t            formdata = {};\n\t        }\n\t        // Get the content of the modal.\n\t        var params = {categoryid:this.args.categoryid, jsonformdata: JSON.stringify(formdata)};\n\t        return Fragment.loadFragment('local_skillrepository', 'skill_category_form', this.args.contextid, params);\n\t    \n\t    };\n\n\t    /**\n\t     * @method handleFormSubmissionResponse\n\t     * @private\n\t     * @return {Promise}\n\t     */\n\t    NewCategory.prototype.handleFormSubmissionResponse = function() {\n\t        this.modal.hide();\n\t        // We could trigger an event instead.\n\t        // Yuk.\n\t        Y.use('moodle-core-formchangechecker', function() {\n\t            M.core_formchangechecker.reset_form_dirty_state();\n\t        });\n\t        document.location.reload();\n    \t};\n\n    \t/**\n\t     * @method handleFormSubmissionFailure\n\t     * @private\n\t     * @return {Promise}\n\t     */\n\t    NewCategory.prototype.handleFormSubmissionFailure = function(data) {\n\t        // Oh noes! Epic fail :(\n\t        // Ah wait - this is normal. We need to re-display the form with errors!\n\t        this.modal.setBody(this.getBody(data));\n\t    };\n    \t\n    \t/**\n\t     * Private method\n\t     *\n\t     * @method submitFormAjax\n\t     * @private\n\t     * @param {Event} e Form submission event.\n\t     */\n\t    NewCategory.prototype.submitFormAjax = function(e) {\n\t        // We don't want to do a real form submission.\n\t        e.preventDefault();\n\t \n\t        // Convert all the form elements values to a serialised string.\n\t        var formData = this.modal.getRoot().find('form').serialize();\n\t        \n\t        // Now we can continue...\n\t        Ajax.call([{\n\t            methodname: 'local_skillrepository_submit_skill_category_form',\n\t            args: {contextid: this.args.contextid, jsonformdata: formData},\n\t            done: this.handleFormSubmissionResponse.bind(this, formData),\n\t            fail: this.handleFormSubmissionFailure.bind(this, formData)\n\t        }]);\n\t    };\n\n\t    /**\n\t     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n\t     *\n\t     * @method submitForm\n\t     * @param {Event} e Form submission event.\n\t     * @private\n\t     */\n\t    NewCategory.prototype.submitForm = function(e) {\n\t        e.preventDefault();\n\t        var self = this;\n\t        self.modal.getRoot().find('form').submit();\n\t    };\n\n    \treturn /** @alias module:local_skillrepository/newcategory */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n            return new NewCategory(args);\n        },\n        load: function(){\n        },\n        deletecategory: function(args) {\n            return Str.get_strings([{\n                key: 'confirm'\n            },\n            {\n                key: 'deleteconfirm',\n                component: 'local_skillrepository',\n                param :args\n            },\n            {\n                key: 'delete',\n            }]).then(function(s) {\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    body: s[1]\n                }).done(function(modal) {\n                    this.modal = modal;\n                    //modal.setSaveButtonText(s[2]);\n\n\t                modal.setSaveButtonText(Str.get_string('yes_delete', 'local_skillrepository'));\n\n\n\t                //For cancel button string changed//\n\t                var value=Str.get_string('cancel', 'local_skillrepository');\n\t                var button = this.modal.getFooter().find('[data-action=\"cancel\"]');\n\t                this.modal.asyncSet(value, button.text.bind(button));\n\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        e.preventDefault();\n                        args.confirm = true;\n                    \t$.ajax({\n                            method: \"POST\",\n                            dataType: \"json\",\n                            url: M.cfg.wwwroot + \"/local/skillrepository/ajax.php?action=\"+args.selector+\"&categoryid=\"+args.categoryid,\n                            success: function(data){\n                                window.location.reload();\n                            }\n                        });\n                    }.bind(this));\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        },\n    };\n});"],"file":"newcategory.min.js"}