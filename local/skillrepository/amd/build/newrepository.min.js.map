{"version":3,"sources":["../src/newrepository.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewRepository","args","contextid","repositoryid","self","init","selector","prototype","modal","editid","data","alert","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","setLarge","getRoot","addClass","on","hidden","animate","setTimeout","destroy","shown","append","getFooter","find","hide","save","submitForm","submitFormAjax","show","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","setBody","e","preventDefault","formData","serialize","call","methodname","done","fail","submit","load","deleteskill","get_strings","key","component","param","s","setSaveButtonText","value","button","asyncSet","text","confirm","id","skillid","promise","window","href","ex","console","log"],"mappings":"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","sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_costcenter/costcenter\n * @class      NewCostcenter\n * @package    local_costcenter\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n \n    /**\n     * Constructor\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @param {int} contextid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var NewRepository = function(args) {\n        this.contextid = args.contextid;\n        this.repositoryid = args.repositoryid;\n        var self = this;\n        self.init(args.selector);\n    };\n \n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    NewRepository.prototype.modal = null;\n \n    /**\n     * @var {int} contextid\n     * @private\n     */\n    NewRepository.prototype.contextid = -1;\n \n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    NewRepository.prototype.init = function(args) {\n        //var triggers = $(selector);\n        var self = this;\n        // Fetch the title string.\n        // $('.'+args.selector).click(function(){ \n            var editid = $(this).data('value');\n            if (editid) {\n                self.repositoryid = editid;\n                alert(self.repositoryid);\n            }\n            return Str.get_string('adnewrepository', 'local_skillrepository').then(function(title) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: self.getBody()\n                });\n            }.bind(self)).then(function(modal) {\n                \n                // Keep a reference to the modal.\n                self.modal = modal;\n                // self.modal.show();\n                // Forms are big, we want a big modal.\n                self.modal.setLarge();\n                this.modal.getRoot().addClass('openLMStransition local_skillrepository');\n     \n                // We want to reset the form every time it is opened.\n                 this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 5000);\n                }.bind(this));\n                // self.modal.getRoot().on(ModalEvents.hidden, function() {\n                //     self.modal.setBody(self.getBody());\n                // }.bind(this));\n                    self.modal.getRoot().on(ModalEvents.shown, function() {\n                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                    this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.hide();\n                        setTimeout(function(){\n                            modal.destroy();\n                        }, 5000);\n                        // modal.destroy();\n                    });\n                }.bind(this));\n                // We want to hide the submit buttons every time it is opened.\n                \n                // self.modal.getRoot().on(ModalEvents.shown, function() {\n                //     self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                // }.bind(this));\n    \n                // We catch the modal save event, and use it to submit the form inside the modal.\n                // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n                // We also catch the form submit event and use it to submit the form with ajax.\n                self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n                self.modal.show();\n                this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n                return this.modal;\n            }.bind(this));     \n        // });        \n    };\n \n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    NewRepository.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // Get the content of the modal.\n        var params = {repositoryid:this.repositoryid, jsonformdata: JSON.stringify(formdata)};\n        \n\n        return Fragment.loadFragment('local_skillrepository', 'new_skill_repository_form', this.contextid, params);\n    \n    };\n \n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    NewRepository.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        document.location.reload();\n    };\n \n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    NewRepository.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n \n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    NewRepository.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n \n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        \n        // Now we can continue...\n        Ajax.call([{\n            methodname: 'local_skillrepository_submit_skill_repository_form_form',\n            args: {contextid: this.contextid, jsonformdata: formData},\n            done: this.handleFormSubmissionResponse.bind(this, formData),\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\n        }]);\n    };\n \n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    NewRepository.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n \n    return /** @alias module:local_costcenter/newcostcenter */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n          \n            \n            return new NewRepository(args);\n        },\n        load: function(){\n\n        },\n        deleteskill: function(args) {\n            return Str.get_strings([{\n                key: 'confirm'\n            },\n            {\n                key: 'deleteskill',\n                component: 'local_skillrepository',\n                param :args\n            },\n            {\n                key: 'delete',\n            }]).then(function(s) {\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    body: s[1]\n                })\n                .done(function(modal) {\n                    this.modal = modal;\n\n                   modal.setSaveButtonText(Str.get_string('yes_delete', 'local_skillrepository'));\n\n\n                //For cancel button string changed//\n                var value=Str.get_string('cancel', 'local_skillrepository');\n                var button = this.modal.getFooter().find('[data-action=\"cancel\"]');\n                this.modal.asyncSet(value, button.text.bind(button));\n\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        e.preventDefault();\n                        args.confirm = true;\n                        var params = {};\n                        params.id = args.skillid;\n                        params.contextid = args.contextid;\n                    \n                        var promise = Ajax.call([{\n                            methodname: 'local_skillrepository_delete_skill',\n                            args: params\n                        }]);\n                        promise[0].done(function(resp) {\n                            window.location.href = window.location.href;\n                        }).fail(function(ex) {\n                            // do something with the exception\n                             console.log(ex);\n                        });\n                    }.bind(this));\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        },\n    };\n});"],"file":"newrepository.min.js"}