{"version":3,"file":"external_certificates.min.js","sources":["../src/external_certificates.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_externalcertificate/external certificates\n * @class      external certificates\n * @copyright  eabyas\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['local_courses/jquery.dataTables', 'jquery', 'core/str', 'core/modal_factory', 'core/modal_events',\n  'core/fragment', 'core/ajax', 'core/yui', 'core/notification', 'jqueryui'],\n  function (DataTable, $, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y, Notification) {\n\n    /**\n    * Constructor\n    *\n    * @param {object} args\n    *\n    * Each call to init gets it's own instance of this class.\n    */\n    var certificate_form = function (args) {\n      this.contextid = args.contextid;\n      this.args = args;\n      this.init(args);\n    };\n\n    /**\n    * @var {Modal} modal\n    * @private\n    */\n    certificate_form.prototype.modal = null;\n\n    /**\n    * @var {int} contextid\n    * @private\n    */\n    certificate_form.prototype.contextid = -1;\n\n    /**\n    * Initialise the class.\n    *\n    * @param {String} selector used to find triggers for the new group modal.\n    * @private\n    * @return {Promise}\n    */\n    certificate_form.prototype.init = function (args) {\n\n      var self = this;\n      if (args.id) {\n        var head = Str.get_string('amd_externalcert', 'local_externalcertificate');\n      } else {\n        var head = Str.get_string('amd_externalcert', 'local_externalcertificate');\n      }\n      return head.then(function (title) {\n        // Create the modal.\n        return ModalFactory.create({\n          type: ModalFactory.types.SAVE_CANCEL,\n          title: title,\n          body: self.getBody()\n        });\n      }.bind(self)).then(function (modal) {\n\n        // Keep a reference to the modal.\n        self.modal = modal;\n        this.modal.getRoot().addClass('openLMStransition');\n\n        // We want to reset the form every time it is opened.\n        this.modal.getRoot().on(ModalEvents.hidden, function () {\n          this.modal.getRoot().animate({ \"right\": \"-85%\" }, 500);\n          setTimeout(function () {\n            modal.destroy();\n          }, 1000);\n        }.bind(this));\n\n        // We want to hide the submit buttons every time it is opened.\n        self.modal.getRoot().on(ModalEvents.shown, function () {\n          self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n          this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function () {\n            modal.hide();\n            setTimeout(function () {\n              modal.destroy();\n            }, 1000);\n          });\n        }.bind(this));\n\n\n        // We catch the modal save event, and use it to submit the form inside the modal.\n        // Triggering a form submission will give JS validation scripts a chance to check for errors.\n        self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n        // We also catch the form submit event and use it to submit the form with ajax.\n        self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n        self.modal.show();\n        this.modal.getRoot().animate({ \"right\": \"0%\" }, 500);\n        return this.modal;\n      }.bind(this));\n    };\n\n\n\n    /**\n    * @method getBody\n    * @private\n    * @return {Promise}\n    */\n    certificate_form.prototype.getBody = function (formdata) {\n      if (typeof formdata === \"undefined\") {\n        formdata = {};\n      }\n      this.args.jsonformdata = JSON.stringify(formdata);\n      return Fragment.loadFragment('local_externalcertificate', 'edit', this.contextid, this.args);\n\n    };\n    /**\n    * @method handleFormSubmissionResponse\n    * @private\n    * @return {Promise}\n    */\n    certificate_form.prototype.handleFormSubmissionResponse = function () {\n      this.modal.hide();\n      // We could trigger an event instead.\n      // Yuk.\n      Y.use('moodle-core-formchangechecker', function () {\n        M.core_formchangechecker.reset_form_dirty_state();\n      });\n      document.location.reload();\n    };\n\n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    certificate_form.prototype.handleFormSubmissionFailure = function (data) {\n      // Oh noes! Epic fail :(\n      // Ah wait - this is normal. We need to re-display the form with errors!\n      this.modal.setBody(this.getBody(data));\n    };\n\n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    certificate_form.prototype.submitFormAjax = function (e) {\n      // We don't want to do a real form submission.\n      e.preventDefault();\n      // Convert all the form elements values to a serialised string.\n      var formData = this.modal.getRoot().find('form').serialize();\n      var params = {};\n      params.contextid = this.contextid;\n      params.jsonformdata = JSON.stringify(formData);\n\n      // Now we can continue...\n      Ajax.call([{\n        methodname: 'local_externalcertificate_submit_certificates_form',\n        args: params,\n        done: this.handleFormSubmissionResponse.bind(this, formData),\n        fail: this.handleFormSubmissionFailure.bind(this, formData)\n      }]);\n\n    };\n\n\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    certificate_form.prototype.submitForm = function (e) {\n      e.preventDefault();\n      var self = this;\n      self.modal.getRoot().find('form').submit();\n    };\n\n    return /** @alias module:local_externalcertificate/certificate_form */ {\n      // Public variables and functions.\n      /**\n      * @param {string} args\n       * @return {Promise}\n       */\n      init: function (args) {\n\n        return new certificate_form(args);\n      },\n\n      Datatable: function () {\n        Str.get_strings([{\n          key: 'search',\n\n        }]).then(function (str) {\n          $('.generaltable').dataTable({\n            \"searching\": true,\n            \"responsive\": true,\n            \"aaSorting\": [[1, \"desc\"]],\n            \"lengthMenu\": [[10, 15, 25, 50, 100, -1], [10, 15, 25, 50, 100, \"All\"]],\n            \"aoColumnDefs\": [{ 'bSortable': false, 'aTargets': [1] }],\n            language: {\n              search: \"_INPUT_\",\n              searchPlaceholder: str[0],\n              \"paginate\": {\n                \"next\": \">\",\n                \"previous\": \"<\"\n              }\n            }\n          });\n        }.bind(this));\n      },\n\n\n      // change status.....\n   /*    statusConfirm: function (args) {\n        var promise = Ajax.call([{\n          methodname: 'local_externalcertificate_changestatus',\n          args: {\n            id: args.id,\n            status: args.status\n          },\n        }]);\n        promise[0].done(function () {\n          window.location.reload();\n        });\n      }, */\n\n      statusConfirm : function(args){\n        return Str.get_strings([{\n            key: 'confirm'\n        },\n        {\n            key: 'approve_certificate',\n            component: 'local_externalcertificate',\n            param :args\n        },\n        {\n            key: 'confirm'\n        }]).then(function(s) {\n            ModalFactory.create({\n                title: s[0],\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: s[1]\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(s[2]);\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    var promise = Ajax.call([{\n                      methodname: 'local_externalcertificate_changestatus',\n                      args: {\n                        id: args.id,\n                        status: args.status\n                      },\n                    }]);\n                    promise[0].done(function (res) {\n                      console.log(res);\n                      if (res == 'Other') {                        \n                        Notification.confirm('confirm', 'Merge into the course to continue with the approval process.', 'Ok', 'OK', function() {\n                          $('.modal-dialog').css('display','none');\n                          window.location.href = M.cfg.wwwroot + '/local/externalcertificate/index.php';                      \n                      });\n\n                      } else {\n                        window.location.reload();\n                      }\n                      \n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }.bind(this));\n    },\n\n      filter: function () {\n        var from_date = $('.fromdate').val();\n        var to_date = $('.todate').val();\n        var request = $.ajax({\n          url: M.cfg.wwwroot + \"/local/externalcertificate/ajaxfile.php\",\n          method: \"POST\",\n          data: { from_date: from_date, to_date: to_date },\n          dataType: \"json\"\n        });\n        request.done(function (data) {\n          $('#certtable').append(data);\n        });\n      },\n\n      mergecoursestatus : function(args){\n          var self = this;        \n          if (args.id) {\n            var head = Str.get_string('mergecoursename','local_externalcertificate');\n          } else {\n            var head = Str.get_string('mergecoursename','local_externalcertificate');\n          }\n          return head.then(function(title) {\n              ModalFactory.create({\n                  title:title,\n                  type: ModalFactory.types.SAVE_CANCEL,\n                  body:Fragment.loadFragment('local_externalcertificate', 'mastercourse_form', 1, args),\n               \n              }).done(function(modal) {\n                  this.modal = modal;\n                   this.modal.setLarge();\n                   this.modal.getRoot().addClass('mastercourse_form');                 \n                    modal.getRoot().find('[data-action=\"save\"]').on('click', function() {\n                        // Convert all the form elements values to a serialised string.\n                    var formData = this.modal.getRoot().find('form').serialize();\n                    var params = {};\n                    params.contextid = args.contextid;\n                    params.id = args.id;\n                    params.status = args.status;\n                    params.jsonformdata = JSON.stringify(formData);\n                      //e.preventDefault();\n                      var promise = Ajax.call([{\n                        methodname: 'local_externalcertificate_mergecourserequest',\n                         args: params,\n                      }]);\n                      promise[0].done(function () {\n                       window.location.reload();\n                      }).fail(function(ex) {\n                            // do something with the exception\n                             console.log(ex);\n                        });\n                  }.bind(this));\n                     modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.setBody('');\n                        modal.hide();\n                    });\n                  modal.show();\n              }.bind(this));\n          }.bind(this));\n    },\n\n      mastercertificate_form : function(args){\n          var self = this;        \n          if (args.id) {\n            var head = Str.get_string('editnewmasterextcourse','local_externalcertificate');\n          } else {\n            var head = Str.get_string('addnewmasterextcourse','local_externalcertificate');\n          }\n          return head.then(function(title) {\n              ModalFactory.create({\n                  title:title,\n                  type: ModalFactory.types.SAVE_CANCEL,\n                  body:Fragment.loadFragment('local_externalcertificate', 'mastercertificate_form', 1, args),\n               \n              }).done(function(modal) {\n                  this.modal = modal;\n                   this.modal.setLarge();\n                   //this.modal.getRoot().addClass('mastercourse_form');                 \n                    modal.getRoot().find('[data-action=\"save\"]').on('click', function() {\n                        // Convert all the form elements values to a serialised string.\n                    var formData = this.modal.getRoot().find('form').serialize();\n                    var params = {};\n                    params.contextid = args.contextid;\n                    params.id = args.id;\n                    params.status = args.status;\n                    params.jsonformdata = JSON.stringify(formData);\n                      //e.preventDefault();\n                      var promise = Ajax.call([{\n                        methodname: 'local_externalcertificate_mastercertificate_form',\n                         args: params,\n                      }]);\n                      promise[0].done(function () {\n                       window.location.reload();\n                      }).fail(function(ex) {\n                            // do something with the exception\n                             console.log(ex);\n                        });\n                  }.bind(this));\n                     modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.setBody('');\n                        modal.hide();\n                    });\n                  modal.show();\n              }.bind(this));\n          }.bind(this));\n    },\n     deleteConfirm: function(args){\n            return Str.get_strings([{\n\n                key: 'confirm',\n                component: 'local_externalcertificate',\n            },\n            {\n                key: 'deletemastercertificate',\n                component: 'local_externalcertificate',\n                param : args\n            },\n            {\n                key: 'delete'\n            }\n          ]).then(function(s) {\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.DEFAULT,\n                    body: s[1],\n                    footer: '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">Yes</button>&nbsp;' +\n            '<button type=\"button\" class=\"btn btn-danger\" data-action=\"cancel\">Cancel</button>'\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.getRoot().find('[data-action=\"save\"]').on('click', function() {\n                        args.confirm = true;\n                        var promise = Ajax.call([{\n                            methodname: 'local_externalcertificate_deletemastercertificate',\n                            args: {\n                                id: args.id\n                            },\n                        }]);\n                        promise[0].done(function() {\n                            window.location.reload();\n                            window.location.href = window.location.href;\n                        }).fail(function(ex) {\n                            // do something with the exception\n                             console.log(ex);\n                        });\n                    }.bind(this));\n                    modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.setBody('');\n                        modal.hide();\n                    });\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        },\n\n  \n      load: function () {\n    \n      }\n    };\n  });\n"],"names":["define","DataTable","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","Notification","certificate_form","args","contextid","init","prototype","modal","self","this","id","head","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","getRoot","addClass","on","hidden","animate","setTimeout","destroy","shown","append","getFooter","find","hide","save","submitForm","submitFormAjax","show","formdata","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","data","setBody","e","preventDefault","formData","serialize","params","call","methodname","done","fail","submit","Datatable","get_strings","key","str","dataTable","language","search","searchPlaceholder","statusConfirm","component","param","s","setSaveButtonText","status","res","console","log","confirm","css","window","href","cfg","wwwroot","filter","from_date","val","to_date","ajax","url","method","dataType","mergecoursestatus","setLarge","ex","mastercertificate_form","deleteConfirm","DEFAULT","footer","load"],"mappings":"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"}
